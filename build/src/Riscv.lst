GAS LISTING /tmp/ccFGanzb.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB61:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 5/19/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../lib/console.h"
   7:src/Riscv.cpp **** #include "../lib/mem.h"
   8:src/Riscv.cpp **** #include "../test/printing.hpp"
   9:src/Riscv.cpp **** 
  10:src/Riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 10 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  11:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SPP); //rezim privilegija
  20              		.loc 1 11 5
  21              	.LVL0:
  22              	.LBB105:
  23              	.LBB106:
  24              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/19/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** 
   9:src/../h/Riscv.hpp **** #include "../lib/hw.h"
  10:src/../h/Riscv.hpp **** #include "MemoryAllocator.hpp"
  11:src/../h/Riscv.hpp **** #include "PCB.hpp"
  12:src/../h/Riscv.hpp **** #include "SemDescription.hpp"
  13:src/../h/Riscv.hpp **** 
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** class Riscv{
  16:src/../h/Riscv.hpp **** public:
  17:src/../h/Riscv.hpp ****     static void trap();
  18:src/../h/Riscv.hpp **** 
  19:src/../h/Riscv.hpp ****     static void popSppSpie();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     static uint64 previousPrivilege(uint64 sstatus);
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void prevPrivilege();
GAS LISTING /tmp/ccFGanzb.s 			page 2


  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp ****     static void  handleTrap();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     static uint64 r_scause();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     static uint64 r_stval();
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     enum BitMaskSIP{
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9)
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask); //mask
  50:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask); //clear
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static uint64 r_sip();
  53:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     enum BitMaskSSTATUS{
  56:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  57:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  58:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8)
  59:src/../h/Riscv.hpp ****     };
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask); //mask
  62:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask); //clear
  63:src/../h/Riscv.hpp **** 
  64:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  65:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static void moveArguments(uint64 *a){ //ucitavanje argumenata sistemskog poziva
  68:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 80(s0)" : "=r"(a[0]));
  69:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 88(s0)" : "=r"(a[1]));
  70:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 96(s0)" : "=r"(a[2]));
  71:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 104(s0)" : "=r"(a[3]));
  72:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 112(s0)" : "=r"(a[4]));
  73:src/../h/Riscv.hpp ****     }
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void w_a0(uint64 p);
  76:src/../h/Riscv.hpp **** };
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp **** //inline?
  80:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
GAS LISTING /tmp/ccFGanzb.s 			page 3


  81:src/../h/Riscv.hpp **** {
  82:src/../h/Riscv.hpp ****     uint64 volatile scause;
  83:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  84:src/../h/Riscv.hpp ****     return scause;
  85:src/../h/Riscv.hpp **** }
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  88:src/../h/Riscv.hpp **** {
  89:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  90:src/../h/Riscv.hpp **** }
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile sepc;
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  96:src/../h/Riscv.hpp ****     return sepc;
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 108:src/../h/Riscv.hpp ****     return stvec;
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stval;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 120:src/../h/Riscv.hpp ****     return stval;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 126:src/../h/Riscv.hpp **** }
 127:src/../h/Riscv.hpp **** 
 128:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 129:src/../h/Riscv.hpp **** {
 130:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 131:src/../h/Riscv.hpp **** }
 132:src/../h/Riscv.hpp **** 
 133:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 134:src/../h/Riscv.hpp **** {
 135:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 136:src/../h/Riscv.hpp **** }
 137:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccFGanzb.s 			page 4


 138:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 139:src/../h/Riscv.hpp **** {
 140:src/../h/Riscv.hpp ****     uint64 volatile sip;
 141:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 142:src/../h/Riscv.hpp ****     return sip;
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 146:src/../h/Riscv.hpp **** {
 147:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 151:src/../h/Riscv.hpp **** {
 152:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 153:src/../h/Riscv.hpp **** }
 154:src/../h/Riscv.hpp **** 
 155:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 156:src/../h/Riscv.hpp **** {
 157:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  25              		.loc 2 157 5
  26              		.loc 2 157 68 is_stmt 0
  27 000c 93070010 		li	a5,256
  28              	#APP
  29              	# 157 "src/../h/Riscv.hpp" 1
 158              	}
  30              		csrc sstatus, a5
  31              	# 0 "" 2
  32              	.LVL1:
  33              	#NO_APP
  34              	.LBE106:
  35              	.LBE105:
  12:src/Riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  36              		.loc 1 12 5 is_stmt 1
  37              		.loc 1 12 38 is_stmt 0
  38              	#APP
  39              	# 12 "src/Riscv.cpp" 1
  13              	    __asm__ volatile("sret");
  40              		csrw sepc, ra
  41              	# 0 "" 2
  42              		.loc 1 13 5 is_stmt 1
  43              		.loc 1 13 29 is_stmt 0
  44              	# 13 "src/Riscv.cpp" 1
  14              	}
  45              		sret
  46              	# 0 "" 2
  47              		.loc 1 14 1
  48              	#NO_APP
  49 001c 03348100 		ld	s0,8(sp)
  50              		.cfi_restore 8
  51              		.cfi_def_cfa 2, 16
  52 0020 13010101 		addi	sp,sp,16
  53              		.cfi_def_cfa_offset 0
  54 0024 67800000 		jr	ra
  55              		.cfi_endproc
  56              	.LFE61:
  58              		.section	.rodata.str1.8,"aMS",@progbits,1
GAS LISTING /tmp/ccFGanzb.s 			page 5


  59              		.align	3
  60              	.LC0:
  61 0000 73636175 		.string	"scause: "
  61      73653A20 
  61      00
  62 0009 00000000 		.align	3
  62      000000
  63              	.LC1:
  64 0010 0A00     		.string	"\n"
  65              		.text
  66              		.align	2
  67              		.globl	_ZN5Riscv10handleTrapEv
  69              	_ZN5Riscv10handleTrapEv:
  70              	.LFB62:
  15:src/Riscv.cpp **** 
  16:src/Riscv.cpp **** void  Riscv::handleTrap() {
  71              		.loc 1 16 27 is_stmt 1
  72              		.cfi_startproc
  73 0028 130101F9 		addi	sp,sp,-112
  74              		.cfi_def_cfa_offset 112
  75 002c 23341106 		sd	ra,104(sp)
  76 0030 23308106 		sd	s0,96(sp)
  77 0034 233C9104 		sd	s1,88(sp)
  78 0038 23382105 		sd	s2,80(sp)
  79              		.cfi_offset 1, -8
  80              		.cfi_offset 8, -16
  81              		.cfi_offset 9, -24
  82              		.cfi_offset 18, -32
  83 003c 13040107 		addi	s0,sp,112
  84              		.cfi_def_cfa 8, 0
  17:src/Riscv.cpp ****     uint64 scause = r_scause();
  85              		.loc 1 17 5
  86              	.LBB107:
  87              	.LBB108:
  82:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  88              		.loc 2 82 5
  83:src/../h/Riscv.hpp ****     return scause;
  89              		.loc 2 83 5
  83:src/../h/Riscv.hpp ****     return scause;
  90              		.loc 2 83 72 is_stmt 0
  91              	#APP
  92              	# 83 "src/../h/Riscv.hpp" 1
  93              		csrr a5, scause
  94              	# 0 "" 2
  95              	#NO_APP
  96 0044 2330F4FA 		sd	a5,-96(s0)
  84:src/../h/Riscv.hpp **** }
  97              		.loc 2 84 5 is_stmt 1
  84:src/../h/Riscv.hpp **** }
  98              		.loc 2 84 12 is_stmt 0
  99 0048 833404FA 		ld	s1,-96(s0)
 100              	.LVL2:
 101              	.LBE108:
 102              	.LBE107:
  18:src/Riscv.cpp ****     uint64 arguments[5];
 103              		.loc 1 18 5 is_stmt 1
  19:src/Riscv.cpp ****     moveArguments(arguments);
GAS LISTING /tmp/ccFGanzb.s 			page 6


 104              		.loc 1 19 5
 105              	.LBB109:
 106              	.LBB110:
  68:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 88(s0)" : "=r"(a[1]));
 107              		.loc 2 68 9
  68:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 88(s0)" : "=r"(a[1]));
 108              		.loc 2 68 55 is_stmt 0
 109              	#APP
 110              	# 68 "src/../h/Riscv.hpp" 1
 111              		ld a5, 80(s0)
 112              	# 0 "" 2
 113              	#NO_APP
 114 0050 233CF4FA 		sd	a5,-72(s0)
  69:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 96(s0)" : "=r"(a[2]));
 115              		.loc 2 69 9 is_stmt 1
  69:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 96(s0)" : "=r"(a[2]));
 116              		.loc 2 69 55 is_stmt 0
 117              	#APP
 118              	# 69 "src/../h/Riscv.hpp" 1
 119              		ld a5, 88(s0)
 120              	# 0 "" 2
 121              	#NO_APP
 122 0058 2330F4FC 		sd	a5,-64(s0)
  70:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 104(s0)" : "=r"(a[3]));
 123              		.loc 2 70 9 is_stmt 1
  70:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 104(s0)" : "=r"(a[3]));
 124              		.loc 2 70 55 is_stmt 0
 125              	#APP
 126              	# 70 "src/../h/Riscv.hpp" 1
 127              		ld a5, 96(s0)
 128              	# 0 "" 2
 129              	#NO_APP
 130 0060 2334F4FC 		sd	a5,-56(s0)
  71:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 112(s0)" : "=r"(a[4]));
 131              		.loc 2 71 9 is_stmt 1
  71:src/../h/Riscv.hpp ****         __asm__ volatile("ld %0, 112(s0)" : "=r"(a[4]));
 132              		.loc 2 71 56 is_stmt 0
 133              	#APP
 134              	# 71 "src/../h/Riscv.hpp" 1
 135              		ld a5, 104(s0)
 136              	# 0 "" 2
 137              	#NO_APP
 138 0068 2338F4FC 		sd	a5,-48(s0)
  72:src/../h/Riscv.hpp ****     }
 139              		.loc 2 72 9 is_stmt 1
  72:src/../h/Riscv.hpp ****     }
 140              		.loc 2 72 56 is_stmt 0
 141              	#APP
 142              	# 72 "src/../h/Riscv.hpp" 1
 143              		ld a5, 112(s0)
 144              	# 0 "" 2
 145              	#NO_APP
 146 0070 233CF4FC 		sd	a5,-40(s0)
 147              	.LVL3:
 148              	.LBE110:
 149              	.LBE109:
  20:src/Riscv.cpp **** 
GAS LISTING /tmp/ccFGanzb.s 			page 7


  21:src/Riscv.cpp ****     if(scause == 0x0000000000000009UL || scause == 0x0000000000000008UL) { //poziv ecall iz korisni
 150              		.loc 1 21 5 is_stmt 1
 151              	.LBB111:
 152              		.loc 1 21 39 is_stmt 0
 153 0074 138784FF 		addi	a4,s1,-8
 154              		.loc 1 21 5
 155 0078 93071000 		li	a5,1
 156 007c 63FEE704 		bleu	a4,a5,.L34
  22:src/Riscv.cpp ****        //nije prekid, ecall iz S ili U rezima
  23:src/Riscv.cpp ****         volatile uint64 sepc = r_sepc() + 4;
  24:src/Riscv.cpp ****         volatile uint64 sstatus = r_sstatus();
  25:src/Riscv.cpp **** 
  26:src/Riscv.cpp ****         switch (arguments[0]) {
  27:src/Riscv.cpp ****             case 0x01:{
  28:src/Riscv.cpp ****                 void* p = MemoryAllocator::mem_alloc(arguments[1]);
  29:src/Riscv.cpp ****                 w_a0((uint64)p);
  30:src/Riscv.cpp ****                 break;
  31:src/Riscv.cpp ****             }
  32:src/Riscv.cpp ****             case 0x02:{
  33:src/Riscv.cpp ****                 int p = MemoryAllocator::mem_free((void*)arguments[1]);
  34:src/Riscv.cpp ****                 w_a0((uint64)p);
  35:src/Riscv.cpp ****                 break;
  36:src/Riscv.cpp ****             }
  37:src/Riscv.cpp ****             case 0x11:{
  38:src/Riscv.cpp ****                 thread_t* handle = (thread_t*)arguments[1];
  39:src/Riscv.cpp ****                 PCB::Body body = (PCB::Body)arguments[2];
  40:src/Riscv.cpp ****                 void* arg = (void*)arguments[3];
  41:src/Riscv.cpp ****                 uint64* stack = (uint64*)arguments[4];
  42:src/Riscv.cpp **** 
  43:src/Riscv.cpp ****                 *handle = PCB::createThread(body, arg, stack);
  44:src/Riscv.cpp ****                 //*handle = PCB::makeOnlyThread(body, arg, stack); //radi i ovako
  45:src/Riscv.cpp ****                 //int p = (*handle)->start(); //pokrece prilikom kreiranja
  46:src/Riscv.cpp ****                 w_a0(0); break;
  47:src/Riscv.cpp ****             }
  48:src/Riscv.cpp ****             case 0x12: {
  49:src/Riscv.cpp ****                 int p = PCB::exit();
  50:src/Riscv.cpp ****                 w_a0(p); break;
  51:src/Riscv.cpp ****             }
  52:src/Riscv.cpp ****             case 0x13:{
  53:src/Riscv.cpp ****               //  PCB::timeSliceCounter = 0;
  54:src/Riscv.cpp ****                 PCB::dispatch();
  55:src/Riscv.cpp ****                 //sstatus = previousPrivilege(sstatus);
  56:src/Riscv.cpp ****                 break;
  57:src/Riscv.cpp ****             }
  58:src/Riscv.cpp ****             case 0x14: {
  59:src/Riscv.cpp ****                 thread_t* handle = (thread_t*)arguments[1];
  60:src/Riscv.cpp ****                 PCB::Body body = (PCB::Body)arguments[2];
  61:src/Riscv.cpp ****                 void* arg = (void*)arguments[3];
  62:src/Riscv.cpp ****                 uint64* stack = (uint64*)arguments[4];
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****                 *handle = PCB::makeOnlyThread(body, arg, stack);
  65:src/Riscv.cpp ****                 w_a0(0);
  66:src/Riscv.cpp ****                 break;
  67:src/Riscv.cpp ****             }
  68:src/Riscv.cpp ****             case 0x15:{
  69:src/Riscv.cpp ****                 thread_t handle = (thread_t)arguments[1];
  70:src/Riscv.cpp ****                 int p = handle->start();
GAS LISTING /tmp/ccFGanzb.s 			page 8


  71:src/Riscv.cpp ****                 w_a0(p);
  72:src/Riscv.cpp ****                 break;
  73:src/Riscv.cpp ****             }
  74:src/Riscv.cpp ****             case 0x16:{
  75:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  76:src/Riscv.cpp ****                 PCB::dispatch();
  77:src/Riscv.cpp ****                 int p = PCB::running->getID();
  78:src/Riscv.cpp ****                 w_a0(p);
  79:src/Riscv.cpp ****                 break;
  80:src/Riscv.cpp ****             }
  81:src/Riscv.cpp ****             case 0x17:{
  82:src/Riscv.cpp ****                 thread_t handle = (thread_t)arguments[1];
  83:src/Riscv.cpp ****                 /*while(!handle->isFinished()){
  84:src/Riscv.cpp ****                     PCB::dispatch();
  85:src/Riscv.cpp ****                 }*/
  86:src/Riscv.cpp ****                 if(!handle->isFinished()) handle->setStatus(PCB::ThreadStatus::FINISHED);
  87:src/Riscv.cpp ****                 delete handle;
  88:src/Riscv.cpp ****                 break;
  89:src/Riscv.cpp ****             }
  90:src/Riscv.cpp ****             case 0x21:{
  91:src/Riscv.cpp ****                 sem_t *handle = (sem_t*)arguments[1];
  92:src/Riscv.cpp ****                 unsigned init = (unsigned)arguments[2];
  93:src/Riscv.cpp ****                 new SemDescription(handle, init);
  94:src/Riscv.cpp ****                 w_a0(0);
  95:src/Riscv.cpp ****                 break;
  96:src/Riscv.cpp ****             }
  97:src/Riscv.cpp ****             case 0x22:{
  98:src/Riscv.cpp ****                 sem_t handle = (sem_t)arguments[1];
  99:src/Riscv.cpp ****                 int p = handle->close();
 100:src/Riscv.cpp ****                 w_a0(p);
 101:src/Riscv.cpp ****                 break;
 102:src/Riscv.cpp ****             }
 103:src/Riscv.cpp ****             case 0x23:{
 104:src/Riscv.cpp ****                 sem_t handle = (sem_t)arguments[1];
 105:src/Riscv.cpp ****                 int p = handle->wait();
 106:src/Riscv.cpp ****                 w_a0(p); break;
 107:src/Riscv.cpp ****             }
 108:src/Riscv.cpp ****             case 0x24:{
 109:src/Riscv.cpp ****                 sem_t handle = (sem_t)arguments[1];
 110:src/Riscv.cpp ****                 int p = handle->signal();
 111:src/Riscv.cpp ****                 w_a0(p); break;
 112:src/Riscv.cpp ****             }
 113:src/Riscv.cpp ****             case 0x41:{
 114:src/Riscv.cpp ****                 char c = __getc();
 115:src/Riscv.cpp ****                 w_a0(c);
 116:src/Riscv.cpp ****                 break;
 117:src/Riscv.cpp ****             }
 118:src/Riscv.cpp ****             case 0x42:{
 119:src/Riscv.cpp ****                 char c = (char)arguments[1];
 120:src/Riscv.cpp ****                 __putc(c);
 121:src/Riscv.cpp ****                 break;
 122:src/Riscv.cpp ****             }
 123:src/Riscv.cpp ****             case 0x50:{
 124:src/Riscv.cpp ****                 thread_t handle = (thread_t)arguments[1];
 125:src/Riscv.cpp ****                 bool flag = false;
 126:src/Riscv.cpp ****                 if(handle->status == PCB::ThreadStatus::RUNNING) flag = true;
 127:src/Riscv.cpp ****                 handle->setStatus(PCB::ThreadStatus::FINISHED);
GAS LISTING /tmp/ccFGanzb.s 			page 9


 128:src/Riscv.cpp ****                 if(flag) PCB::dispatch();
 129:src/Riscv.cpp ****                 w_a0(0);
 130:src/Riscv.cpp ****                 break;
 131:src/Riscv.cpp ****             }
 132:src/Riscv.cpp ****             case 0x51:{
 133:src/Riscv.cpp ****                 thread_t handle = *(thread_t*)arguments[1];
 134:src/Riscv.cpp ****                 if(!handle->isFinished()){
 135:src/Riscv.cpp ****                     if(!handle->sem){
 136:src/Riscv.cpp ****                         new SemDescription(&handle->sem, 0);
 137:src/Riscv.cpp ****                     }
 138:src/Riscv.cpp ****                     handle->sem->wait();
 139:src/Riscv.cpp ****                 }
 140:src/Riscv.cpp ****                 w_a0(0);
 141:src/Riscv.cpp ****                 break;
 142:src/Riscv.cpp ****             }
 143:src/Riscv.cpp ****         }
 144:src/Riscv.cpp ****         __asm__ volatile("sd a0, 80(s0)"); //povratna vrednost, bez ovoga mi pregazi a0
 145:src/Riscv.cpp **** 
 146:src/Riscv.cpp ****         w_sstatus(sstatus);
 147:src/Riscv.cpp ****         w_sepc(sepc);
 148:src/Riscv.cpp ****     }else if(scause == 0x8000000000000001UL){
 157              		.loc 1 148 11 is_stmt 1
 158 0080 9307F0FF 		li	a5,-1
 159 0084 9397F703 		slli	a5,a5,63
 160 0088 93871700 		addi	a5,a5,1
 161 008c 6388F42E 		beq	s1,a5,.L35
 149:src/Riscv.cpp ****         //prekid od tajmera
 150:src/Riscv.cpp ****         PCB::timeSliceCounter++;
 151:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 152:src/Riscv.cpp ****        /* PCB::timeSliceCounter++;
 153:src/Riscv.cpp ****         if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 154:src/Riscv.cpp ****         {
 155:src/Riscv.cpp ****             uint64 volatile sepc = r_sepc();
 156:src/Riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 157:src/Riscv.cpp ****             PCB::timeSliceCounter = 0;
 158:src/Riscv.cpp ****             PCB::dispatch();
 159:src/Riscv.cpp ****           //  sstatus = previousPrivilege(sstatus);
 160:src/Riscv.cpp ****             w_sstatus(sstatus);
 161:src/Riscv.cpp ****             w_sepc(sepc);
 162:src/Riscv.cpp ****         }*/
 163:src/Riscv.cpp ****     }else if(scause == 0x8000000000000009UL){
 162              		.loc 1 163 11
 163 0090 9307F0FF 		li	a5,-1
 164 0094 9397F703 		slli	a5,a5,63
 165 0098 93879700 		addi	a5,a5,9
 166 009c 6380F430 		beq	s1,a5,.L36
 164:src/Riscv.cpp ****         //prekid od konzole
 165:src/Riscv.cpp ****         console_handler();
 166:src/Riscv.cpp ****     }else{
 167:src/Riscv.cpp ****         //neki neocekivani razlog za ulazak
 168:src/Riscv.cpp **** 
 169:src/Riscv.cpp ****         printString("scause: ");
 167              		.loc 1 169 9
 168              		.loc 1 169 20 is_stmt 0
 169 00a0 17050000 		lla	a0,.LC0
 169      13050500 
 170 00a8 97000000 		call	_Z11printStringPKc@plt
GAS LISTING /tmp/ccFGanzb.s 			page 10


 170      E7800000 
 171              	.LVL4:
 170:src/Riscv.cpp ****         printInt(scause);
 172              		.loc 1 170 9 is_stmt 1
 173              		.loc 1 170 17 is_stmt 0
 174 00b0 13060000 		li	a2,0
 175 00b4 9305A000 		li	a1,10
 176 00b8 1B850400 		sext.w	a0,s1
 177 00bc 97000000 		call	_Z8printIntiii@plt
 177      E7800000 
 178              	.LVL5:
 171:src/Riscv.cpp ****         printString("\n");
 179              		.loc 1 171 9 is_stmt 1
 180              		.loc 1 171 20 is_stmt 0
 181 00c4 17050000 		lla	a0,.LC1
 181      13050500 
 182 00cc 97000000 		call	_Z11printStringPKc@plt
 182      E7800000 
 183              	.LVL6:
 184              	.LBE111:
 172:src/Riscv.cpp ****     }
 173:src/Riscv.cpp **** }
 185              		.loc 1 173 1
 186 00d4 6F004007 		j	.L3
 187              	.L34:
 188              	.LBB201:
 189              	.LBB112:
  23:src/Riscv.cpp ****         volatile uint64 sstatus = r_sstatus();
 190              		.loc 1 23 9 is_stmt 1
 191              	.LBB113:
 192              	.LBB114:
  94:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 193              		.loc 2 94 5
  95:src/../h/Riscv.hpp ****     return sepc;
 194              		.loc 2 95 5
  95:src/../h/Riscv.hpp ****     return sepc;
 195              		.loc 2 95 64 is_stmt 0
 196              	#APP
 197              	# 95 "src/../h/Riscv.hpp" 1
 198              		csrr a5, sepc
 199              	# 0 "" 2
 200              	#NO_APP
 201 00dc 2338F4FA 		sd	a5,-80(s0)
  96:src/../h/Riscv.hpp **** }
 202              		.loc 2 96 5 is_stmt 1
  96:src/../h/Riscv.hpp **** }
 203              		.loc 2 96 12 is_stmt 0
 204 00e0 833704FB 		ld	a5,-80(s0)
 205              	.LBE114:
 206              	.LBE113:
  23:src/Riscv.cpp ****         volatile uint64 sstatus = r_sstatus();
 207              		.loc 1 23 41
 208 00e4 93874700 		addi	a5,a5,4
  23:src/Riscv.cpp ****         volatile uint64 sstatus = r_sstatus();
 209              		.loc 1 23 43
 210 00e8 2338F4F8 		sd	a5,-112(s0)
  24:src/Riscv.cpp **** 
GAS LISTING /tmp/ccFGanzb.s 			page 11


 211              		.loc 1 24 9 is_stmt 1
 212              	.LBB115:
 213              	.LBB116:
 159:src/../h/Riscv.hpp **** 
 160:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 161:src/../h/Riscv.hpp **** {
 162:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 214              		.loc 2 162 5
 163:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 215              		.loc 2 163 5
 216              		.loc 2 163 76 is_stmt 0
 217              	#APP
 218              	# 163 "src/../h/Riscv.hpp" 1
 164              	    return sstatus;
 219              		csrr a5, sstatus
 220              	# 0 "" 2
 221              	#NO_APP
 222 00f0 2334F4FA 		sd	a5,-88(s0)
 223              		.loc 2 164 5 is_stmt 1
 224              		.loc 2 164 12 is_stmt 0
 225 00f4 833784FA 		ld	a5,-88(s0)
 226              	.LBE116:
 227              	.LBE115:
  24:src/Riscv.cpp **** 
 228              		.loc 1 24 45
 229 00f8 233CF4F8 		sd	a5,-104(s0)
  26:src/Riscv.cpp ****             case 0x01:{
 230              		.loc 1 26 9 is_stmt 1
 231              	.LBB117:
  26:src/Riscv.cpp ****             case 0x01:{
 232              		.loc 1 26 28 is_stmt 0
 233 00fc 833784FB 		ld	a5,-72(s0)
 234 0100 13071005 		li	a4,81
 235 0104 6368F702 		bgtu	a5,a4,.L5
 236 0108 93972700 		slli	a5,a5,2
 237 010c 17070000 		lla	a4,.L7
 237      13070700 
 238 0114 B387E700 		add	a5,a5,a4
 239 0118 83A70700 		lw	a5,0(a5)
 240 011c B387E700 		add	a5,a5,a4
 241 0120 67800700 		jr	a5
 242              		.section	.rodata
 243              		.align	2
 244              		.align	2
 245              	.L7:
 246 0000 00000000 		.word	.L5-.L7
 247 0004 00000000 		.word	.L23-.L7
 248 0008 00000000 		.word	.L22-.L7
 249 000c 00000000 		.word	.L5-.L7
 250 0010 00000000 		.word	.L5-.L7
 251 0014 00000000 		.word	.L5-.L7
 252 0018 00000000 		.word	.L5-.L7
 253 001c 00000000 		.word	.L5-.L7
 254 0020 00000000 		.word	.L5-.L7
 255 0024 00000000 		.word	.L5-.L7
 256 0028 00000000 		.word	.L5-.L7
 257 002c 00000000 		.word	.L5-.L7
GAS LISTING /tmp/ccFGanzb.s 			page 12


 258 0030 00000000 		.word	.L5-.L7
 259 0034 00000000 		.word	.L5-.L7
 260 0038 00000000 		.word	.L5-.L7
 261 003c 00000000 		.word	.L5-.L7
 262 0040 00000000 		.word	.L5-.L7
 263 0044 00000000 		.word	.L21-.L7
 264 0048 00000000 		.word	.L20-.L7
 265 004c 00000000 		.word	.L19-.L7
 266 0050 00000000 		.word	.L18-.L7
 267 0054 00000000 		.word	.L17-.L7
 268 0058 00000000 		.word	.L16-.L7
 269 005c 00000000 		.word	.L15-.L7
 270 0060 00000000 		.word	.L5-.L7
 271 0064 00000000 		.word	.L5-.L7
 272 0068 00000000 		.word	.L5-.L7
 273 006c 00000000 		.word	.L5-.L7
 274 0070 00000000 		.word	.L5-.L7
 275 0074 00000000 		.word	.L5-.L7
 276 0078 00000000 		.word	.L5-.L7
 277 007c 00000000 		.word	.L5-.L7
 278 0080 00000000 		.word	.L5-.L7
 279 0084 00000000 		.word	.L14-.L7
 280 0088 00000000 		.word	.L13-.L7
 281 008c 00000000 		.word	.L12-.L7
 282 0090 00000000 		.word	.L11-.L7
 283 0094 00000000 		.word	.L5-.L7
 284 0098 00000000 		.word	.L5-.L7
 285 009c 00000000 		.word	.L5-.L7
 286 00a0 00000000 		.word	.L5-.L7
 287 00a4 00000000 		.word	.L5-.L7
 288 00a8 00000000 		.word	.L5-.L7
 289 00ac 00000000 		.word	.L5-.L7
 290 00b0 00000000 		.word	.L5-.L7
 291 00b4 00000000 		.word	.L5-.L7
 292 00b8 00000000 		.word	.L5-.L7
 293 00bc 00000000 		.word	.L5-.L7
 294 00c0 00000000 		.word	.L5-.L7
 295 00c4 00000000 		.word	.L5-.L7
 296 00c8 00000000 		.word	.L5-.L7
 297 00cc 00000000 		.word	.L5-.L7
 298 00d0 00000000 		.word	.L5-.L7
 299 00d4 00000000 		.word	.L5-.L7
 300 00d8 00000000 		.word	.L5-.L7
 301 00dc 00000000 		.word	.L5-.L7
 302 00e0 00000000 		.word	.L5-.L7
 303 00e4 00000000 		.word	.L5-.L7
 304 00e8 00000000 		.word	.L5-.L7
 305 00ec 00000000 		.word	.L5-.L7
 306 00f0 00000000 		.word	.L5-.L7
 307 00f4 00000000 		.word	.L5-.L7
 308 00f8 00000000 		.word	.L5-.L7
 309 00fc 00000000 		.word	.L5-.L7
 310 0100 00000000 		.word	.L5-.L7
 311 0104 00000000 		.word	.L10-.L7
 312 0108 00000000 		.word	.L9-.L7
 313 010c 00000000 		.word	.L5-.L7
 314 0110 00000000 		.word	.L5-.L7
GAS LISTING /tmp/ccFGanzb.s 			page 13


 315 0114 00000000 		.word	.L5-.L7
 316 0118 00000000 		.word	.L5-.L7
 317 011c 00000000 		.word	.L5-.L7
 318 0120 00000000 		.word	.L5-.L7
 319 0124 00000000 		.word	.L5-.L7
 320 0128 00000000 		.word	.L5-.L7
 321 012c 00000000 		.word	.L5-.L7
 322 0130 00000000 		.word	.L5-.L7
 323 0134 00000000 		.word	.L5-.L7
 324 0138 00000000 		.word	.L5-.L7
 325 013c 00000000 		.word	.L5-.L7
 326 0140 00000000 		.word	.L8-.L7
 327 0144 00000000 		.word	.L6-.L7
 328              		.text
 329              	.L23:
 330              	.LBB118:
  27:src/Riscv.cpp ****                 void* p = MemoryAllocator::mem_alloc(arguments[1]);
 331              		.loc 1 27 13 is_stmt 1
  27:src/Riscv.cpp ****                 void* p = MemoryAllocator::mem_alloc(arguments[1]);
 332              		.loc 1 27 23
 333              	.LBB119:
  28:src/Riscv.cpp ****                 w_a0((uint64)p);
 334              		.loc 1 28 17
  28:src/Riscv.cpp ****                 w_a0((uint64)p);
 335              		.loc 1 28 53 is_stmt 0
 336 0124 033504FC 		ld	a0,-64(s0)
 337 0128 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 337      E7800000 
 338              	.LVL7:
  29:src/Riscv.cpp ****                 break;
 339              		.loc 1 29 17 is_stmt 1
 340              	.LBB120:
 341              	.LBB121:
 165:src/../h/Riscv.hpp **** }
 166:src/../h/Riscv.hpp **** 
 167:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 168:src/../h/Riscv.hpp **** {
 169:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 170:src/../h/Riscv.hpp **** }
 171:src/../h/Riscv.hpp **** 
 172:src/../h/Riscv.hpp **** inline void Riscv::w_a0(uint64 p){
 173:src/../h/Riscv.hpp ****     __asm__ volatile("mv a0, %0" : : "r"(p)); //potrebna za ucitavanje rezultata pozi kernelske fun
 342              		.loc 2 173 5
 343              		.loc 2 173 45 is_stmt 0
 344              	#APP
 345              	# 173 "src/../h/Riscv.hpp" 1
 174              	}
 346              		mv a0, a0
 347              	# 0 "" 2
 348              	.LVL8:
 349              	#NO_APP
 350              	.L5:
 351              	.LBE121:
 352              	.LBE120:
 353              	.LBE119:
 354              	.LBE118:
 355              	.LBE117:
GAS LISTING /tmp/ccFGanzb.s 			page 14


 144:src/Riscv.cpp **** 
 356              		.loc 1 144 9 is_stmt 1
 144:src/Riscv.cpp **** 
 357              		.loc 1 144 42 is_stmt 0
 358              	#APP
 359              	# 144 "src/Riscv.cpp" 1
 146:src/Riscv.cpp ****         w_sepc(sepc);
 360              		sd a0, 80(s0)
 361              	# 0 "" 2
 362              		.loc 1 146 9 is_stmt 1
 146:src/Riscv.cpp ****         w_sepc(sepc);
 363              		.loc 1 146 18 is_stmt 0
 364              	#NO_APP
 365 0138 833784F9 		ld	a5,-104(s0)
 366              	.LVL9:
 367              	.LBB193:
 368              	.LBB194:
 169:src/../h/Riscv.hpp **** }
 369              		.loc 2 169 5 is_stmt 1
 169:src/../h/Riscv.hpp **** }
 370              		.loc 2 169 77 is_stmt 0
 371              	#APP
 372              	# 169 "src/../h/Riscv.hpp" 1
 373              		csrw sstatus, a5
 374              	# 0 "" 2
 375              	.LVL10:
 376              	#NO_APP
 377              	.LBE194:
 378              	.LBE193:
 147:src/Riscv.cpp ****     }else if(scause == 0x8000000000000001UL){
 379              		.loc 1 147 9 is_stmt 1
 147:src/Riscv.cpp ****     }else if(scause == 0x8000000000000001UL){
 380              		.loc 1 147 15 is_stmt 0
 381 0140 833704F9 		ld	a5,-112(s0)
 382              	.LVL11:
 383              	.LBB195:
 384              	.LBB196:
 101:src/../h/Riscv.hpp **** }
 385              		.loc 2 101 5 is_stmt 1
 101:src/../h/Riscv.hpp **** }
 386              		.loc 2 101 65 is_stmt 0
 387              	#APP
 388              	# 101 "src/../h/Riscv.hpp" 1
 389              		csrw sepc, a5
 390              	# 0 "" 2
 391              	.LVL12:
 392              	#NO_APP
 393              	.L3:
 394              	.LBE196:
 395              	.LBE195:
 396              	.LBE112:
 397              	.LBE201:
 398              		.loc 1 173 1
 399 0148 83308106 		ld	ra,104(sp)
 400              		.cfi_remember_state
 401              		.cfi_restore 1
 402 014c 03340106 		ld	s0,96(sp)
GAS LISTING /tmp/ccFGanzb.s 			page 15


 403              		.cfi_restore 8
 404              		.cfi_def_cfa 2, 112
 405 0150 83348105 		ld	s1,88(sp)
 406              		.cfi_restore 9
 407 0154 03390105 		ld	s2,80(sp)
 408              		.cfi_restore 18
 409 0158 13010107 		addi	sp,sp,112
 410              		.cfi_def_cfa_offset 0
 411 015c 67800000 		jr	ra
 412              	.LVL13:
 413              	.L22:
 414              		.cfi_restore_state
 415              	.LBB202:
 416              	.LBB198:
 417              	.LBB197:
 418              	.LBB192:
  32:src/Riscv.cpp ****                 int p = MemoryAllocator::mem_free((void*)arguments[1]);
 419              		.loc 1 32 13 is_stmt 1
  32:src/Riscv.cpp ****                 int p = MemoryAllocator::mem_free((void*)arguments[1]);
 420              		.loc 1 32 23
 421              	.LBB122:
  33:src/Riscv.cpp ****                 w_a0((uint64)p);
 422              		.loc 1 33 17
  33:src/Riscv.cpp ****                 w_a0((uint64)p);
 423              		.loc 1 33 50 is_stmt 0
 424 0160 033504FC 		ld	a0,-64(s0)
 425 0164 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 425      E7800000 
 426              	.LVL14:
  34:src/Riscv.cpp ****                 break;
 427              		.loc 1 34 17 is_stmt 1
 428              	.LBB123:
 429              	.LBB124:
 173:src/../h/Riscv.hpp **** }
 430              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 431              		.loc 2 173 45 is_stmt 0
 432              	#APP
 433              	# 173 "src/../h/Riscv.hpp" 1
 434              		mv a0, a0
 435              	# 0 "" 2
 436              		.loc 2 174 1
 437              	#NO_APP
 438 0170 6FF05FFC 		j	.L5
 439              	.LVL15:
 440              	.L21:
 441              	.LBE124:
 442              	.LBE123:
 443              	.LBE122:
  37:src/Riscv.cpp ****                 thread_t* handle = (thread_t*)arguments[1];
 444              		.loc 1 37 13 is_stmt 1
  37:src/Riscv.cpp ****                 thread_t* handle = (thread_t*)arguments[1];
 445              		.loc 1 37 23
 446              	.LBB125:
  38:src/Riscv.cpp ****                 PCB::Body body = (PCB::Body)arguments[2];
 447              		.loc 1 38 17
  38:src/Riscv.cpp ****                 PCB::Body body = (PCB::Body)arguments[2];
GAS LISTING /tmp/ccFGanzb.s 			page 16


 448              		.loc 1 38 58 is_stmt 0
 449 0174 833404FC 		ld	s1,-64(s0)
 450              	.LVL16:
  39:src/Riscv.cpp ****                 void* arg = (void*)arguments[3];
 451              		.loc 1 39 17 is_stmt 1
  40:src/Riscv.cpp ****                 uint64* stack = (uint64*)arguments[4];
 452              		.loc 1 40 17
  41:src/Riscv.cpp **** 
 453              		.loc 1 41 17
  43:src/Riscv.cpp ****                 //*handle = PCB::makeOnlyThread(body, arg, stack); //radi i ovako
 454              		.loc 1 43 17
  43:src/Riscv.cpp ****                 //*handle = PCB::makeOnlyThread(body, arg, stack); //radi i ovako
 455              		.loc 1 43 44 is_stmt 0
 456 0178 033684FD 		ld	a2,-40(s0)
 457 017c 833504FD 		ld	a1,-48(s0)
 458 0180 033584FC 		ld	a0,-56(s0)
 459 0184 97000000 		call	_ZN3PCB12createThreadEPFvPvES0_Pm@plt
 459      E7800000 
 460              	.LVL17:
  43:src/Riscv.cpp ****                 //*handle = PCB::makeOnlyThread(body, arg, stack); //radi i ovako
 461              		.loc 1 43 25
 462 018c 23B0A400 		sd	a0,0(s1)
  46:src/Riscv.cpp ****             }
 463              		.loc 1 46 17 is_stmt 1
 464              	.LVL18:
 465              	.LBB126:
 466              	.LBB127:
 173:src/../h/Riscv.hpp **** }
 467              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 468              		.loc 2 173 45 is_stmt 0
 469 0190 93070000 		li	a5,0
 470              	#APP
 471              	# 173 "src/../h/Riscv.hpp" 1
 472              		mv a0, a5
 473              	# 0 "" 2
 474              		.loc 2 174 1
 475              	#NO_APP
 476 0198 6FF0DFF9 		j	.L5
 477              	.LVL19:
 478              	.L20:
 479              	.LBE127:
 480              	.LBE126:
 481              	.LBE125:
  48:src/Riscv.cpp ****                 int p = PCB::exit();
 482              		.loc 1 48 13 is_stmt 1
  48:src/Riscv.cpp ****                 int p = PCB::exit();
 483              		.loc 1 48 24
 484              	.LBB128:
  49:src/Riscv.cpp ****                 w_a0(p); break;
 485              		.loc 1 49 17
  49:src/Riscv.cpp ****                 w_a0(p); break;
 486              		.loc 1 49 34 is_stmt 0
 487 019c 97000000 		call	_ZN3PCB4exitEv@plt
 487      E7800000 
 488              	.LVL20:
  50:src/Riscv.cpp ****             }
GAS LISTING /tmp/ccFGanzb.s 			page 17


 489              		.loc 1 50 17 is_stmt 1
 490              	.LBB129:
 491              	.LBB130:
 173:src/../h/Riscv.hpp **** }
 492              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 493              		.loc 2 173 45 is_stmt 0
 494              	#APP
 495              	# 173 "src/../h/Riscv.hpp" 1
 496              		mv a0, a0
 497              	# 0 "" 2
 498              		.loc 2 174 1
 499              	#NO_APP
 500 01a8 6FF0DFF8 		j	.L5
 501              	.LVL21:
 502              	.L19:
 503              	.LBE130:
 504              	.LBE129:
 505              	.LBE128:
  52:src/Riscv.cpp ****               //  PCB::timeSliceCounter = 0;
 506              		.loc 1 52 13 is_stmt 1
  52:src/Riscv.cpp ****               //  PCB::timeSliceCounter = 0;
 507              		.loc 1 52 23
  54:src/Riscv.cpp ****                 //sstatus = previousPrivilege(sstatus);
 508              		.loc 1 54 17
  54:src/Riscv.cpp ****                 //sstatus = previousPrivilege(sstatus);
 509              		.loc 1 54 30 is_stmt 0
 510 01ac 97000000 		call	_ZN3PCB8dispatchEv@plt
 510      E7800000 
 511              	.LVL22:
 512 01b4 6FF01FF8 		j	.L5
 513              	.L18:
  58:src/Riscv.cpp ****                 thread_t* handle = (thread_t*)arguments[1];
 514              		.loc 1 58 13 is_stmt 1
  58:src/Riscv.cpp ****                 thread_t* handle = (thread_t*)arguments[1];
 515              		.loc 1 58 24
 516              	.LBB131:
  59:src/Riscv.cpp ****                 PCB::Body body = (PCB::Body)arguments[2];
 517              		.loc 1 59 17
  59:src/Riscv.cpp ****                 PCB::Body body = (PCB::Body)arguments[2];
 518              		.loc 1 59 58 is_stmt 0
 519 01b8 833404FC 		ld	s1,-64(s0)
 520              	.LVL23:
  60:src/Riscv.cpp ****                 void* arg = (void*)arguments[3];
 521              		.loc 1 60 17 is_stmt 1
  61:src/Riscv.cpp ****                 uint64* stack = (uint64*)arguments[4];
 522              		.loc 1 61 17
  62:src/Riscv.cpp **** 
 523              		.loc 1 62 17
  64:src/Riscv.cpp ****                 w_a0(0);
 524              		.loc 1 64 17
  64:src/Riscv.cpp ****                 w_a0(0);
 525              		.loc 1 64 46 is_stmt 0
 526 01bc 033684FD 		ld	a2,-40(s0)
 527 01c0 833504FD 		ld	a1,-48(s0)
 528 01c4 033584FC 		ld	a0,-56(s0)
 529 01c8 97000000 		call	_ZN3PCB14makeOnlyThreadEPFvPvES0_Pm@plt
GAS LISTING /tmp/ccFGanzb.s 			page 18


 529      E7800000 
 530              	.LVL24:
  64:src/Riscv.cpp ****                 w_a0(0);
 531              		.loc 1 64 25
 532 01d0 23B0A400 		sd	a0,0(s1)
  65:src/Riscv.cpp ****                 break;
 533              		.loc 1 65 17 is_stmt 1
 534              	.LVL25:
 535              	.LBB132:
 536              	.LBB133:
 173:src/../h/Riscv.hpp **** }
 537              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 538              		.loc 2 173 45 is_stmt 0
 539 01d4 93070000 		li	a5,0
 540              	#APP
 541              	# 173 "src/../h/Riscv.hpp" 1
 542              		mv a0, a5
 543              	# 0 "" 2
 544              		.loc 2 174 1
 545              	#NO_APP
 546 01dc 6FF09FF5 		j	.L5
 547              	.LVL26:
 548              	.L17:
 549              	.LBE133:
 550              	.LBE132:
 551              	.LBE131:
  68:src/Riscv.cpp ****                 thread_t handle = (thread_t)arguments[1];
 552              		.loc 1 68 13 is_stmt 1
  68:src/Riscv.cpp ****                 thread_t handle = (thread_t)arguments[1];
 553              		.loc 1 68 23
 554              	.LBB134:
  69:src/Riscv.cpp ****                 int p = handle->start();
 555              		.loc 1 69 17
  70:src/Riscv.cpp ****                 w_a0(p);
 556              		.loc 1 70 17
  70:src/Riscv.cpp ****                 w_a0(p);
 557              		.loc 1 70 38 is_stmt 0
 558 01e0 033504FC 		ld	a0,-64(s0)
 559 01e4 97000000 		call	_ZN3PCB5startEv@plt
 559      E7800000 
 560              	.LVL27:
  71:src/Riscv.cpp ****                 break;
 561              		.loc 1 71 17 is_stmt 1
 562              	.LBB135:
 563              	.LBB136:
 173:src/../h/Riscv.hpp **** }
 564              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 565              		.loc 2 173 45 is_stmt 0
 566              	#APP
 567              	# 173 "src/../h/Riscv.hpp" 1
 568              		mv a0, a0
 569              	# 0 "" 2
 570              		.loc 2 174 1
 571              	#NO_APP
 572 01f0 6FF05FF4 		j	.L5
GAS LISTING /tmp/ccFGanzb.s 			page 19


 573              	.LVL28:
 574              	.L16:
 575              	.LBE136:
 576              	.LBE135:
 577              	.LBE134:
  74:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 578              		.loc 1 74 13 is_stmt 1
  74:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 579              		.loc 1 74 23
 580              	.LBB137:
  75:src/Riscv.cpp ****                 PCB::dispatch();
 581              		.loc 1 75 17
  75:src/Riscv.cpp ****                 PCB::dispatch();
 582              		.loc 1 75 39 is_stmt 0
 583 01f4 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 583      83B70700 
 584 01fc 23B00700 		sd	zero,0(a5)
  76:src/Riscv.cpp ****                 int p = PCB::running->getID();
 585              		.loc 1 76 17 is_stmt 1
  76:src/Riscv.cpp ****                 int p = PCB::running->getID();
 586              		.loc 1 76 30 is_stmt 0
 587 0200 97000000 		call	_ZN3PCB8dispatchEv@plt
 587      E7800000 
 588              	.LVL29:
  77:src/Riscv.cpp ****                 w_a0(p);
 589              		.loc 1 77 17 is_stmt 1
  77:src/Riscv.cpp ****                 w_a0(p);
 590              		.loc 1 77 44 is_stmt 0
 591 0208 97070000 		la	a5,_ZN3PCB7runningE
 591      83B70700 
 592 0210 83B70700 		ld	a5,0(a5)
 593              	.LVL30:
 594              	.LBB138:
 595              	.LBB139:
 596              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 8/2/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** 
   9:src/../h/PCB.hpp **** #include "../lib/hw.h"
  10:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  11:src/../h/PCB.hpp **** #include "syscall_c.h"
  12:src/../h/PCB.hpp **** 
  13:src/../h/PCB.hpp **** class PCB{
  14:src/../h/PCB.hpp **** 
  15:src/../h/PCB.hpp **** public:
  16:src/../h/PCB.hpp ****     bool waiting = false;
  17:src/../h/PCB.hpp **** 
  18:src/../h/PCB.hpp ****     sem_t sem = nullptr;
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     ~PCB(){ delete []stack; }
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     using Body = void(*)(void*);
GAS LISTING /tmp/ccFGanzb.s 			page 20


  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* createThread(Body body, void* arg, uint64* stack); //odmah zapocinje
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* makeOnlyThread(Body body, void* arg, uint64* stack); //napravi pa se posle moze pok
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static PCB* kernelThreadMaker();
  29:src/../h/PCB.hpp **** 
  30:src/../h/PCB.hpp ****     void* operator new(size_t size){ return MemoryAllocator::mem_alloc(size); }
  31:src/../h/PCB.hpp **** 
  32:src/../h/PCB.hpp ****     void operator delete(void* p){ MemoryAllocator::mem_free(p); }
  33:src/../h/PCB.hpp **** 
  34:src/../h/PCB.hpp ****     //static void yield();
  35:src/../h/PCB.hpp **** 
  36:src/../h/PCB.hpp ****     enum ThreadStatus{
  37:src/../h/PCB.hpp ****         RUNNING, READY,
  38:src/../h/PCB.hpp ****         FINISHED, CREATED,
  39:src/../h/PCB.hpp ****         BLOCKED_SEM
  40:src/../h/PCB.hpp ****     };
  41:src/../h/PCB.hpp **** 
  42:src/../h/PCB.hpp ****     bool isFinished() const{
  43:src/../h/PCB.hpp ****         return status == ThreadStatus::FINISHED;
  44:src/../h/PCB.hpp ****     }
  45:src/../h/PCB.hpp **** 
  46:src/../h/PCB.hpp ****     void setStatus(ThreadStatus ts){
  47:src/../h/PCB.hpp ****         status = ts;
  48:src/../h/PCB.hpp ****     }
  49:src/../h/PCB.hpp **** 
  50:src/../h/PCB.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  51:src/../h/PCB.hpp **** 
  52:src/../h/PCB.hpp ****     static PCB* running;
  53:src/../h/PCB.hpp **** 
  54:src/../h/PCB.hpp **** 
  55:src/../h/PCB.hpp ****     static PCB* kernel; //nit koja se izvrsava u privilegovanom rezimu
  56:src/../h/PCB.hpp **** 
  57:src/../h/PCB.hpp ****     int start();
  58:src/../h/PCB.hpp **** 
  59:src/../h/PCB.hpp ****     static int exit();
  60:src/../h/PCB.hpp **** 
  61:src/../h/PCB.hpp ****     static int ID;
  62:src/../h/PCB.hpp **** 
  63:src/../h/PCB.hpp ****     int getID() const { return id; }
 597              		.loc 3 63 25 is_stmt 1
 598              		.loc 3 63 32 is_stmt 0
 599 0214 83A78704 		lw	a5,72(a5)
 600              	.LVL31:
 601              	.LBE139:
 602              	.LBE138:
  78:src/Riscv.cpp ****                 break;
 603              		.loc 1 78 17 is_stmt 1
 604              	.LBB140:
 605              	.LBB141:
 173:src/../h/Riscv.hpp **** }
 606              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 607              		.loc 2 173 45 is_stmt 0
 608              	#APP
 609              	# 173 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccFGanzb.s 			page 21


 610              		mv a0, a5
 611              	# 0 "" 2
 612              		.loc 2 174 1
 613              	#NO_APP
 614 021c 6FF09FF1 		j	.L5
 615              	.LVL32:
 616              	.L15:
 617              	.LBE141:
 618              	.LBE140:
 619              	.LBE137:
  81:src/Riscv.cpp ****                 thread_t handle = (thread_t)arguments[1];
 620              		.loc 1 81 13 is_stmt 1
  81:src/Riscv.cpp ****                 thread_t handle = (thread_t)arguments[1];
 621              		.loc 1 81 23
 622              	.LBB142:
  82:src/Riscv.cpp ****                 /*while(!handle->isFinished()){
 623              		.loc 1 82 17
  82:src/Riscv.cpp ****                 /*while(!handle->isFinished()){
 624              		.loc 1 82 56 is_stmt 0
 625 0220 833404FC 		ld	s1,-64(s0)
 626              	.LVL33:
  86:src/Riscv.cpp ****                 delete handle;
 627              		.loc 1 86 17 is_stmt 1
 628              	.LBB143:
 629              	.LBB144:
  43:src/../h/PCB.hpp ****     }
 630              		.loc 3 43 9
  43:src/../h/PCB.hpp ****     }
 631              		.loc 3 43 16 is_stmt 0
 632 0224 03A78403 		lw	a4,56(s1)
 633              	.LVL34:
 634              	.LBE144:
 635              	.LBE143:
  86:src/Riscv.cpp ****                 delete handle;
 636              		.loc 1 86 17
 637 0228 93072000 		li	a5,2
 638 022c 6304F700 		beq	a4,a5,.L24
  86:src/Riscv.cpp ****                 delete handle;
 639              		.loc 1 86 43 is_stmt 1
 640              	.LVL35:
 641              	.LBB145:
 642              	.LBB146:
  47:src/../h/PCB.hpp ****     }
 643              		.loc 3 47 9
  47:src/../h/PCB.hpp ****     }
 644              		.loc 3 47 16 is_stmt 0
 645 0230 23ACF402 		sw	a5,56(s1)
 646              	.LVL36:
 647              	.L24:
 648              	.LBE146:
 649              	.LBE145:
  87:src/Riscv.cpp ****                 break;
 650              		.loc 1 87 17 is_stmt 1
  87:src/Riscv.cpp ****                 break;
 651              		.loc 1 87 30 is_stmt 0
 652 0234 E38004F0 		beqz	s1,.L5
 653              	.LVL37:
GAS LISTING /tmp/ccFGanzb.s 			page 22


 654              	.LBB147:
 655              	.LBB148:
  20:src/../h/PCB.hpp **** 
 656              		.loc 3 20 13 is_stmt 1
  20:src/../h/PCB.hpp **** 
 657              		.loc 3 20 22 is_stmt 0
 658 0238 03B58401 		ld	a0,24(s1)
  20:src/../h/PCB.hpp **** 
 659              		.loc 3 20 27
 660 023c 63060500 		beqz	a0,.L25
  20:src/../h/PCB.hpp **** 
 661              		.loc 3 20 22
 662 0240 97000000 		call	_ZdaPv@plt
 662      E7800000 
 663              	.LVL38:
 664              	.L25:
 665              	.LBE148:
 666              	.LBE147:
 667              	.LBB149:
 668              	.LBB150:
  32:src/../h/PCB.hpp **** 
 669              		.loc 3 32 36 is_stmt 1
  32:src/../h/PCB.hpp **** 
 670              		.loc 3 32 61 is_stmt 0
 671 0248 13850400 		mv	a0,s1
 672 024c 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 672      E7800000 
 673              	.LVL39:
  32:src/../h/PCB.hpp **** 
 674              		.loc 3 32 66
 675 0254 6FF01FEE 		j	.L5
 676              	.LVL40:
 677              	.L14:
 678              	.LBE150:
 679              	.LBE149:
 680              	.LBE142:
  90:src/Riscv.cpp ****                 sem_t *handle = (sem_t*)arguments[1];
 681              		.loc 1 90 13 is_stmt 1
  90:src/Riscv.cpp ****                 sem_t *handle = (sem_t*)arguments[1];
 682              		.loc 1 90 23
 683              	.LBB151:
  91:src/Riscv.cpp ****                 unsigned init = (unsigned)arguments[2];
 684              		.loc 1 91 17
  91:src/Riscv.cpp ****                 unsigned init = (unsigned)arguments[2];
 685              		.loc 1 91 52 is_stmt 0
 686 0258 833404FC 		ld	s1,-64(s0)
 687              	.LVL41:
  92:src/Riscv.cpp ****                 new SemDescription(handle, init);
 688              		.loc 1 92 17 is_stmt 1
  92:src/Riscv.cpp ****                 new SemDescription(handle, init);
 689              		.loc 1 92 54 is_stmt 0
 690 025c 033984FC 		ld	s2,-56(s0)
 691              	.LVL42:
  93:src/Riscv.cpp ****                 w_a0(0);
 692              		.loc 1 93 17 is_stmt 1
 693              	.LBB152:
 694              	.LBB153:
GAS LISTING /tmp/ccFGanzb.s 			page 23


 695              		.file 4 "src/../h/SemDescription.hpp"
   1:src/../h/SemDescription.hpp **** //
   2:src/../h/SemDescription.hpp **** // Created by os on 8/13/22.
   3:src/../h/SemDescription.hpp **** //
   4:src/../h/SemDescription.hpp **** 
   5:src/../h/SemDescription.hpp **** #ifndef PROJECT_BASE_SEMDESCRIPTION_HPP
   6:src/../h/SemDescription.hpp **** #define PROJECT_BASE_SEMDESCRIPTION_HPP
   7:src/../h/SemDescription.hpp **** //#include "../lib/mem.h"
   8:src/../h/SemDescription.hpp **** #include "Queue.hpp"
   9:src/../h/SemDescription.hpp **** #include "PCB.hpp"
  10:src/../h/SemDescription.hpp **** #include "syscall_c.h"
  11:src/../h/SemDescription.hpp **** #include "MemoryAllocator.hpp"
  12:src/../h/SemDescription.hpp **** 
  13:src/../h/SemDescription.hpp **** //kao klasa sa predavanja
  14:src/../h/SemDescription.hpp **** class SemDescription {
  15:src/../h/SemDescription.hpp **** public:
  16:src/../h/SemDescription.hpp ****     ~SemDescription(){ close(); }
  17:src/../h/SemDescription.hpp **** 
  18:src/../h/SemDescription.hpp ****     void* operator new(size_t size){ return MemoryAllocator::mem_alloc(size); }
 696              		.loc 4 18 38
 697              		.loc 4 18 71 is_stmt 0
 698 0260 13058002 		li	a0,40
 699 0264 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 699      E7800000 
 700              	.LVL43:
 701              	.LBE153:
 702              	.LBE152:
 703              	.LBB154:
 704              	.LBB155:
  19:src/../h/SemDescription.hpp **** 
  20:src/../h/SemDescription.hpp ****     void operator delete(void* p){ MemoryAllocator::mem_free(p); }
  21:src/../h/SemDescription.hpp **** 
  22:src/../h/SemDescription.hpp **** private:
  23:src/../h/SemDescription.hpp ****     int val; //ovde je bio problem sto sam stavio unsigned!
  24:src/../h/SemDescription.hpp ****     Queue blocked;
  25:src/../h/SemDescription.hpp ****     friend class Riscv;
  26:src/../h/SemDescription.hpp ****     friend class PCB;
  27:src/../h/SemDescription.hpp ****     bool isClosed;
  28:src/../h/SemDescription.hpp ****    // typedef SemDescription* sem_t;
  29:src/../h/SemDescription.hpp ****     SemDescription(sem_t* handle, unsigned val) : val(val){
 705              		.loc 4 29 58
 706 026c 23202501 		sw	s2,0(a0)
 707              	.LVL44:
 708              	.LBB156:
 709              	.LBB157:
 710              		.file 5 "src/../h/Queue.hpp"
   1:src/../h/Queue.hpp **** //
   2:src/../h/Queue.hpp **** // Created by os on 8/13/22.
   3:src/../h/Queue.hpp **** //
   4:src/../h/Queue.hpp **** 
   5:src/../h/Queue.hpp **** #ifndef PROJECT_BASE_QUEUE_HPP
   6:src/../h/Queue.hpp **** #define PROJECT_BASE_QUEUE_HPP
   7:src/../h/Queue.hpp **** 
   8:src/../h/Queue.hpp **** #include "PCB.hpp"
   9:src/../h/Queue.hpp **** 
  10:src/../h/Queue.hpp **** class Queue {
  11:src/../h/Queue.hpp **** public:
GAS LISTING /tmp/ccFGanzb.s 			page 24


  12:src/../h/Queue.hpp ****     struct Elem
  13:src/../h/Queue.hpp ****     {
  14:src/../h/Queue.hpp ****         PCB *data;
  15:src/../h/Queue.hpp ****         Elem *next;
  16:src/../h/Queue.hpp **** 
  17:src/../h/Queue.hpp ****         Elem(PCB *data, Elem *next) : data(data), next(next) {}
  18:src/../h/Queue.hpp **** 
  19:src/../h/Queue.hpp ****         void *operator new(size_t size) { return MemoryAllocator::mem_alloc(size); }
  20:src/../h/Queue.hpp ****         void operator delete(void *ptr) { MemoryAllocator::mem_free(ptr); }
  21:src/../h/Queue.hpp ****     };
  22:src/../h/Queue.hpp **** 
  23:src/../h/Queue.hpp ****     Elem *head, *tail;
  24:src/../h/Queue.hpp ****     int counter;
  25:src/../h/Queue.hpp **** 
  26:src/../h/Queue.hpp ****     Queue() : head(nullptr), tail(nullptr), counter(0) {}
 711              		.loc 5 26 54
 712 0270 23340500 		sd	zero,8(a0)
 713 0274 23380500 		sd	zero,16(a0)
 714 0278 232C0500 		sw	zero,24(a0)
 715              	.LVL45:
 716              	.LBE157:
 717              	.LBE156:
  30:src/../h/SemDescription.hpp ****         *handle = this; isClosed = false;
 718              		.loc 4 30 9 is_stmt 1
 719              		.loc 4 30 17 is_stmt 0
 720 027c 23B0A400 		sd	a0,0(s1)
 721              		.loc 4 30 25 is_stmt 1
 722              		.loc 4 30 34 is_stmt 0
 723 0280 23000502 		sb	zero,32(a0)
 724              	.LVL46:
 725              	.LBE155:
 726              	.LBE154:
  94:src/Riscv.cpp ****                 break;
 727              		.loc 1 94 17 is_stmt 1
 728              	.LBB158:
 729              	.LBB159:
 173:src/../h/Riscv.hpp **** }
 730              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 731              		.loc 2 173 45 is_stmt 0
 732 0284 93070000 		li	a5,0
 733              	#APP
 734              	# 173 "src/../h/Riscv.hpp" 1
 735              		mv a0, a5
 736              	# 0 "" 2
 737              		.loc 2 174 1
 738              	#NO_APP
 739 028c 6FF09FEA 		j	.L5
 740              	.LVL47:
 741              	.L13:
 742              	.LBE159:
 743              	.LBE158:
 744              	.LBE151:
  97:src/Riscv.cpp ****                 sem_t handle = (sem_t)arguments[1];
 745              		.loc 1 97 13 is_stmt 1
  97:src/Riscv.cpp ****                 sem_t handle = (sem_t)arguments[1];
 746              		.loc 1 97 23
GAS LISTING /tmp/ccFGanzb.s 			page 25


 747              	.LBB160:
  98:src/Riscv.cpp ****                 int p = handle->close();
 748              		.loc 1 98 17
  99:src/Riscv.cpp ****                 w_a0(p);
 749              		.loc 1 99 17
  99:src/Riscv.cpp ****                 w_a0(p);
 750              		.loc 1 99 38 is_stmt 0
 751 0290 033504FC 		ld	a0,-64(s0)
 752 0294 97000000 		call	_ZN14SemDescription5closeEv@plt
 752      E7800000 
 753              	.LVL48:
 100:src/Riscv.cpp ****                 break;
 754              		.loc 1 100 17 is_stmt 1
 755              	.LBB161:
 756              	.LBB162:
 173:src/../h/Riscv.hpp **** }
 757              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 758              		.loc 2 173 45 is_stmt 0
 759              	#APP
 760              	# 173 "src/../h/Riscv.hpp" 1
 761              		mv a0, a0
 762              	# 0 "" 2
 763              		.loc 2 174 1
 764              	#NO_APP
 765 02a0 6FF05FE9 		j	.L5
 766              	.LVL49:
 767              	.L12:
 768              	.LBE162:
 769              	.LBE161:
 770              	.LBE160:
 103:src/Riscv.cpp ****                 sem_t handle = (sem_t)arguments[1];
 771              		.loc 1 103 13 is_stmt 1
 103:src/Riscv.cpp ****                 sem_t handle = (sem_t)arguments[1];
 772              		.loc 1 103 23
 773              	.LBB163:
 104:src/Riscv.cpp ****                 int p = handle->wait();
 774              		.loc 1 104 17
 105:src/Riscv.cpp ****                 w_a0(p); break;
 775              		.loc 1 105 17
 105:src/Riscv.cpp ****                 w_a0(p); break;
 776              		.loc 1 105 37 is_stmt 0
 777 02a4 033504FC 		ld	a0,-64(s0)
 778 02a8 97000000 		call	_ZN14SemDescription4waitEv@plt
 778      E7800000 
 779              	.LVL50:
 106:src/Riscv.cpp ****             }
 780              		.loc 1 106 17 is_stmt 1
 781              	.LBB164:
 782              	.LBB165:
 173:src/../h/Riscv.hpp **** }
 783              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 784              		.loc 2 173 45 is_stmt 0
 785              	#APP
 786              	# 173 "src/../h/Riscv.hpp" 1
 787              		mv a0, a0
GAS LISTING /tmp/ccFGanzb.s 			page 26


 788              	# 0 "" 2
 789              		.loc 2 174 1
 790              	#NO_APP
 791 02b4 6FF01FE8 		j	.L5
 792              	.LVL51:
 793              	.L11:
 794              	.LBE165:
 795              	.LBE164:
 796              	.LBE163:
 108:src/Riscv.cpp ****                 sem_t handle = (sem_t)arguments[1];
 797              		.loc 1 108 13 is_stmt 1
 108:src/Riscv.cpp ****                 sem_t handle = (sem_t)arguments[1];
 798              		.loc 1 108 23
 799              	.LBB166:
 109:src/Riscv.cpp ****                 int p = handle->signal();
 800              		.loc 1 109 17
 110:src/Riscv.cpp ****                 w_a0(p); break;
 801              		.loc 1 110 17
 110:src/Riscv.cpp ****                 w_a0(p); break;
 802              		.loc 1 110 39 is_stmt 0
 803 02b8 033504FC 		ld	a0,-64(s0)
 804 02bc 97000000 		call	_ZN14SemDescription6signalEv@plt
 804      E7800000 
 805              	.LVL52:
 111:src/Riscv.cpp ****             }
 806              		.loc 1 111 17 is_stmt 1
 807              	.LBB167:
 808              	.LBB168:
 173:src/../h/Riscv.hpp **** }
 809              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 810              		.loc 2 173 45 is_stmt 0
 811              	#APP
 812              	# 173 "src/../h/Riscv.hpp" 1
 813              		mv a0, a0
 814              	# 0 "" 2
 815              		.loc 2 174 1
 816              	#NO_APP
 817 02c8 6FF0DFE6 		j	.L5
 818              	.LVL53:
 819              	.L10:
 820              	.LBE168:
 821              	.LBE167:
 822              	.LBE166:
 113:src/Riscv.cpp ****                 char c = __getc();
 823              		.loc 1 113 13 is_stmt 1
 113:src/Riscv.cpp ****                 char c = __getc();
 824              		.loc 1 113 23
 825              	.LBB169:
 114:src/Riscv.cpp ****                 w_a0(c);
 826              		.loc 1 114 17
 114:src/Riscv.cpp ****                 w_a0(c);
 827              		.loc 1 114 32 is_stmt 0
 828 02cc 97000000 		call	__getc@plt
 828      E7800000 
 829              	.LVL54:
 115:src/Riscv.cpp ****                 break;
GAS LISTING /tmp/ccFGanzb.s 			page 27


 830              		.loc 1 115 17 is_stmt 1
 831              	.LBB170:
 832              	.LBB171:
 173:src/../h/Riscv.hpp **** }
 833              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 834              		.loc 2 173 45 is_stmt 0
 835              	#APP
 836              	# 173 "src/../h/Riscv.hpp" 1
 837              		mv a0, a0
 838              	# 0 "" 2
 839              		.loc 2 174 1
 840              	#NO_APP
 841 02d8 6FF0DFE5 		j	.L5
 842              	.LVL55:
 843              	.L9:
 844              	.LBE171:
 845              	.LBE170:
 846              	.LBE169:
 118:src/Riscv.cpp ****                 char c = (char)arguments[1];
 847              		.loc 1 118 13 is_stmt 1
 118:src/Riscv.cpp ****                 char c = (char)arguments[1];
 848              		.loc 1 118 23
 849              	.LBB172:
 119:src/Riscv.cpp ****                 __putc(c);
 850              		.loc 1 119 17
 120:src/Riscv.cpp ****                 break;
 851              		.loc 1 120 17
 120:src/Riscv.cpp ****                 break;
 852              		.loc 1 120 23 is_stmt 0
 853 02dc 034504FC 		lbu	a0,-64(s0)
 854 02e0 97000000 		call	__putc@plt
 854      E7800000 
 855              	.LVL56:
 856 02e8 6FF0DFE4 		j	.L5
 857              	.LVL57:
 858              	.L8:
 859              	.LBE172:
 123:src/Riscv.cpp ****                 thread_t handle = (thread_t)arguments[1];
 860              		.loc 1 123 13 is_stmt 1
 123:src/Riscv.cpp ****                 thread_t handle = (thread_t)arguments[1];
 861              		.loc 1 123 23
 862              	.LBB173:
 124:src/Riscv.cpp ****                 bool flag = false;
 863              		.loc 1 124 17
 124:src/Riscv.cpp ****                 bool flag = false;
 864              		.loc 1 124 56 is_stmt 0
 865 02ec 833704FC 		ld	a5,-64(s0)
 866              	.LVL58:
 125:src/Riscv.cpp ****                 if(handle->status == PCB::ThreadStatus::RUNNING) flag = true;
 867              		.loc 1 125 17 is_stmt 1
 126:src/Riscv.cpp ****                 handle->setStatus(PCB::ThreadStatus::FINISHED);
 868              		.loc 1 126 17
 126:src/Riscv.cpp ****                 handle->setStatus(PCB::ThreadStatus::FINISHED);
 869              		.loc 1 126 28 is_stmt 0
 870 02f0 03A78703 		lw	a4,56(a5)
 126:src/Riscv.cpp ****                 handle->setStatus(PCB::ThreadStatus::FINISHED);
GAS LISTING /tmp/ccFGanzb.s 			page 28


 871              		.loc 1 126 17
 872 02f4 630C0700 		beqz	a4,.L26
 127:src/Riscv.cpp ****                 if(flag) PCB::dispatch();
 873              		.loc 1 127 17 is_stmt 1
 874              	.LVL59:
 875              	.LBB174:
 876              	.LBB175:
  47:src/../h/PCB.hpp ****     }
 877              		.loc 3 47 9
  47:src/../h/PCB.hpp ****     }
 878              		.loc 3 47 16 is_stmt 0
 879 02f8 13072000 		li	a4,2
 880 02fc 23ACE702 		sw	a4,56(a5)
 881              	.LVL60:
 882              	.LBE175:
 883              	.LBE174:
 128:src/Riscv.cpp ****                 w_a0(0);
 884              		.loc 1 128 17 is_stmt 1
 885              	.L27:
 129:src/Riscv.cpp ****                 break;
 886              		.loc 1 129 17
 887              	.LBB177:
 888              	.LBB178:
 173:src/../h/Riscv.hpp **** }
 889              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 890              		.loc 2 173 45 is_stmt 0
 891 0300 93070000 		li	a5,0
 892              	#APP
 893              	# 173 "src/../h/Riscv.hpp" 1
 894              		mv a0, a5
 895              	# 0 "" 2
 896              		.loc 2 174 1
 897              	#NO_APP
 898 0308 6FF0DFE2 		j	.L5
 899              	.LVL61:
 900              	.L26:
 901              	.LBE178:
 902              	.LBE177:
 126:src/Riscv.cpp ****                 handle->setStatus(PCB::ThreadStatus::FINISHED);
 903              		.loc 1 126 66 is_stmt 1
 127:src/Riscv.cpp ****                 if(flag) PCB::dispatch();
 904              		.loc 1 127 17
 905              	.LBB179:
 906              	.LBB176:
  47:src/../h/PCB.hpp ****     }
 907              		.loc 3 47 9
  47:src/../h/PCB.hpp ****     }
 908              		.loc 3 47 16 is_stmt 0
 909 030c 13072000 		li	a4,2
 910 0310 23ACE702 		sw	a4,56(a5)
 911              	.LVL62:
 912              	.LBE176:
 913              	.LBE179:
 128:src/Riscv.cpp ****                 w_a0(0);
 914              		.loc 1 128 17 is_stmt 1
 128:src/Riscv.cpp ****                 w_a0(0);
GAS LISTING /tmp/ccFGanzb.s 			page 29


 915              		.loc 1 128 26
 128:src/Riscv.cpp ****                 w_a0(0);
 916              		.loc 1 128 39 is_stmt 0
 917 0314 97000000 		call	_ZN3PCB8dispatchEv@plt
 917      E7800000 
 918              	.LVL63:
 919 031c 6FF05FFE 		j	.L27
 920              	.LVL64:
 921              	.L6:
 922              	.LBE173:
 132:src/Riscv.cpp ****                 thread_t handle = *(thread_t*)arguments[1];
 923              		.loc 1 132 13 is_stmt 1
 132:src/Riscv.cpp ****                 thread_t handle = *(thread_t*)arguments[1];
 924              		.loc 1 132 23
 925              	.LBB180:
 133:src/Riscv.cpp ****                 if(!handle->isFinished()){
 926              		.loc 1 133 17
 133:src/Riscv.cpp ****                 if(!handle->isFinished()){
 927              		.loc 1 133 58 is_stmt 0
 928 0320 833704FC 		ld	a5,-64(s0)
 133:src/Riscv.cpp ****                 if(!handle->isFinished()){
 929              		.loc 1 133 26
 930 0324 83B40700 		ld	s1,0(a5)
 931              	.LVL65:
 134:src/Riscv.cpp ****                     if(!handle->sem){
 932              		.loc 1 134 17 is_stmt 1
 933              	.LBB181:
 934              	.LBB182:
  43:src/../h/PCB.hpp ****     }
 935              		.loc 3 43 9
  43:src/../h/PCB.hpp ****     }
 936              		.loc 3 43 16 is_stmt 0
 937 0328 03A78403 		lw	a4,56(s1)
 938              	.LVL66:
 939              	.LBE182:
 940              	.LBE181:
 134:src/Riscv.cpp ****                     if(!handle->sem){
 941              		.loc 1 134 17
 942 032c 93072000 		li	a5,2
 943 0330 630CF700 		beq	a4,a5,.L28
 135:src/Riscv.cpp ****                         new SemDescription(&handle->sem, 0);
 944              		.loc 1 135 21 is_stmt 1
 135:src/Riscv.cpp ****                         new SemDescription(&handle->sem, 0);
 945              		.loc 1 135 33 is_stmt 0
 946 0334 83B78400 		ld	a5,8(s1)
 135:src/Riscv.cpp ****                         new SemDescription(&handle->sem, 0);
 947              		.loc 1 135 21
 948 0338 638E0700 		beqz	a5,.L37
 949              	.L29:
 138:src/Riscv.cpp ****                 }
 950              		.loc 1 138 21 is_stmt 1
 138:src/Riscv.cpp ****                 }
 951              		.loc 1 138 38 is_stmt 0
 952 033c 03B58400 		ld	a0,8(s1)
 953 0340 97000000 		call	_ZN14SemDescription4waitEv@plt
 953      E7800000 
 954              	.LVL67:
GAS LISTING /tmp/ccFGanzb.s 			page 30


 955              	.L28:
 140:src/Riscv.cpp ****                 break;
 956              		.loc 1 140 17 is_stmt 1
 957              	.LBB183:
 958              	.LBB184:
 173:src/../h/Riscv.hpp **** }
 959              		.loc 2 173 5
 173:src/../h/Riscv.hpp **** }
 960              		.loc 2 173 45 is_stmt 0
 961 0348 93070000 		li	a5,0
 962              	#APP
 963              	# 173 "src/../h/Riscv.hpp" 1
 964              		mv a0, a5
 965              	# 0 "" 2
 966              		.loc 2 174 1
 967              	#NO_APP
 968 0350 6FF05FDE 		j	.L5
 969              	.LVL68:
 970              	.L37:
 971              	.LBE184:
 972              	.LBE183:
 136:src/Riscv.cpp ****                     }
 973              		.loc 1 136 25 is_stmt 1
 974              	.LBB185:
 975              	.LBB186:
  18:src/../h/SemDescription.hpp **** 
 976              		.loc 4 18 38
  18:src/../h/SemDescription.hpp **** 
 977              		.loc 4 18 71 is_stmt 0
 978 0354 13058002 		li	a0,40
 979 0358 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 979      E7800000 
 980              	.LVL69:
 981              	.LBE186:
 982              	.LBE185:
 983              	.LBB187:
 984              	.LBB188:
 985              	.LBB189:
  29:src/../h/SemDescription.hpp ****         *handle = this; isClosed = false;
 986              		.loc 4 29 58
 987 0360 23200500 		sw	zero,0(a0)
 988              	.LVL70:
 989              	.LBB190:
 990              	.LBB191:
 991              		.loc 5 26 54
 992 0364 23340500 		sd	zero,8(a0)
 993 0368 23380500 		sd	zero,16(a0)
 994 036c 232C0500 		sw	zero,24(a0)
 995              	.LVL71:
 996              	.LBE191:
 997              	.LBE190:
 998              		.loc 4 30 9 is_stmt 1
 999              		.loc 4 30 17 is_stmt 0
 1000 0370 23B4A400 		sd	a0,8(s1)
 1001              		.loc 4 30 25 is_stmt 1
 1002              		.loc 4 30 34 is_stmt 0
 1003 0374 23000502 		sb	zero,32(a0)
GAS LISTING /tmp/ccFGanzb.s 			page 31


 1004              	.LBE189:
  31:src/../h/SemDescription.hpp ****     }
 1005              		.loc 4 31 5
 1006 0378 6FF05FFC 		j	.L29
 1007              	.LVL72:
 1008              	.L35:
 1009              	.LBE188:
 1010              	.LBE187:
 1011              	.LBE180:
 1012              	.LBE192:
 1013              	.LBE197:
 1014              	.LBE198:
 150:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 1015              		.loc 1 150 9 is_stmt 1
 150:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 1016              		.loc 1 150 30 is_stmt 0
 1017 037c 17070000 		la	a4,_ZN3PCB16timeSliceCounterE
 1017      03370700 
 1018 0384 83370700 		ld	a5,0(a4)
 1019 0388 93871700 		addi	a5,a5,1
 1020 038c 2330F700 		sd	a5,0(a4)
 151:src/Riscv.cpp ****        /* PCB::timeSliceCounter++;
 1021              		.loc 1 151 9 is_stmt 1
 1022              	.LVL73:
 1023              	.LBB199:
 1024              	.LBB200:
 135:src/../h/Riscv.hpp **** }
 1025              		.loc 2 135 5
 135:src/../h/Riscv.hpp **** }
 1026              		.loc 2 135 64 is_stmt 0
 1027 0390 93072000 		li	a5,2
 1028              	#APP
 1029              	# 135 "src/../h/Riscv.hpp" 1
 136:src/../h/Riscv.hpp **** 
 1030              		csrc sip, a5
 1031              	# 0 "" 2
 1032              		.loc 2 136 1
 1033              	#NO_APP
 1034 0398 6FF01FDB 		j	.L3
 1035              	.LVL74:
 1036              	.L36:
 1037              	.LBE200:
 1038              	.LBE199:
 165:src/Riscv.cpp ****     }else{
 1039              		.loc 1 165 9 is_stmt 1
 165:src/Riscv.cpp ****     }else{
 1040              		.loc 1 165 24 is_stmt 0
 1041 039c 97000000 		call	console_handler@plt
 1041      E7800000 
 1042              	.LVL75:
 1043 03a4 6FF05FDA 		j	.L3
 1044              	.LBE202:
 1045              		.cfi_endproc
 1046              	.LFE62:
 1048              		.align	2
 1049              		.globl	_ZN5Riscv17previousPrivilegeEm
 1051              	_ZN5Riscv17previousPrivilegeEm:
GAS LISTING /tmp/ccFGanzb.s 			page 32


 1052              	.LFB63:
 174:src/Riscv.cpp **** 
 175:src/Riscv.cpp **** uint64 Riscv::previousPrivilege(uint64 sstatus) { //prelazi u privilegovani rezim ako je u pitanju 
 1053              		.loc 1 175 49 is_stmt 1
 1054              		.cfi_startproc
 1055              	.LVL76:
 1056 03a8 130101FF 		addi	sp,sp,-16
 1057              		.cfi_def_cfa_offset 16
 1058 03ac 23348100 		sd	s0,8(sp)
 1059              		.cfi_offset 8, -8
 1060 03b0 13040101 		addi	s0,sp,16
 1061              		.cfi_def_cfa 8, 0
 176:src/Riscv.cpp ****     if(PCB::running == PCB::kernel){
 1062              		.loc 1 176 5
 1063              		.loc 1 176 21 is_stmt 0
 1064 03b4 97070000 		la	a5,_ZN3PCB7runningE
 1064      83B70700 
 1065 03bc 03B70700 		ld	a4,0(a5)
 1066 03c0 97070000 		la	a5,_ZN3PCB6kernelE
 1066      83B70700 
 1067 03c8 83B70700 		ld	a5,0(a5)
 1068              		.loc 1 176 5
 1069 03cc 630AF700 		beq	a4,a5,.L42
 177:src/Riscv.cpp ****         //vracanje u S rezim
 178:src/Riscv.cpp ****         return sstatus | SSTATUS_SPP;
 179:src/Riscv.cpp ****     }else{
 180:src/Riscv.cpp ****         //U rezim
 181:src/Riscv.cpp ****         return sstatus & ~(SSTATUS_SPP);
 1070              		.loc 1 181 9 is_stmt 1
 1071              		.loc 1 181 39 is_stmt 0
 1072 03d0 1375F5EF 		andi	a0,a0,-257
 1073              	.LVL77:
 1074              	.L38:
 182:src/Riscv.cpp ****     }
 183:src/Riscv.cpp **** }
 1075              		.loc 1 183 1
 1076 03d4 03348100 		ld	s0,8(sp)
 1077              		.cfi_remember_state
 1078              		.cfi_restore 8
 1079              		.cfi_def_cfa 2, 16
 1080 03d8 13010101 		addi	sp,sp,16
 1081              		.cfi_def_cfa_offset 0
 1082 03dc 67800000 		jr	ra
 1083              	.LVL78:
 1084              	.L42:
 1085              		.cfi_restore_state
 178:src/Riscv.cpp ****     }else{
 1086              		.loc 1 178 9 is_stmt 1
 178:src/Riscv.cpp ****     }else{
 1087              		.loc 1 178 26 is_stmt 0
 1088 03e0 13650510 		ori	a0,a0,256
 1089              	.LVL79:
 1090 03e4 6FF01FFF 		j	.L38
 1091              		.cfi_endproc
 1092              	.LFE63:
 1094              		.align	2
 1095              		.globl	_ZN5Riscv13prevPrivilegeEv
GAS LISTING /tmp/ccFGanzb.s 			page 33


 1097              	_ZN5Riscv13prevPrivilegeEv:
 1098              	.LFB64:
 184:src/Riscv.cpp **** 
 185:src/Riscv.cpp **** void Riscv::prevPrivilege() { //prelazi u privilegovani rezim ako je u pitanju kernelska nit
 1099              		.loc 1 185 29 is_stmt 1
 1100              		.cfi_startproc
 1101 03e8 130101FF 		addi	sp,sp,-16
 1102              		.cfi_def_cfa_offset 16
 1103 03ec 23348100 		sd	s0,8(sp)
 1104              		.cfi_offset 8, -8
 1105 03f0 13040101 		addi	s0,sp,16
 1106              		.cfi_def_cfa 8, 0
 186:src/Riscv.cpp ****     if(PCB::running == PCB::kernel){
 1107              		.loc 1 186 5
 1108              		.loc 1 186 21 is_stmt 0
 1109 03f4 97070000 		la	a5,_ZN3PCB7runningE
 1109      83B70700 
 1110 03fc 03B70700 		ld	a4,0(a5)
 1111 0400 97070000 		la	a5,_ZN3PCB6kernelE
 1111      83B70700 
 1112 0408 83B70700 		ld	a5,0(a5)
 1113              		.loc 1 186 5
 1114 040c 630CF700 		beq	a4,a5,.L47
 187:src/Riscv.cpp ****         //vracanje u S rezim
 188:src/Riscv.cpp ****         ms_sstatus(SSTATUS_SPP);
 189:src/Riscv.cpp ****     }else{
 190:src/Riscv.cpp ****         //U rezim
 191:src/Riscv.cpp ****         mc_sstatus(SSTATUS_SPP);
 1115              		.loc 1 191 9 is_stmt 1
 1116              	.LVL80:
 1117              	.LBB203:
 1118              	.LBB204:
 157:src/../h/Riscv.hpp **** }
 1119              		.loc 2 157 5
 157:src/../h/Riscv.hpp **** }
 1120              		.loc 2 157 68 is_stmt 0
 1121 0410 93070010 		li	a5,256
 1122              	#APP
 1123              	# 157 "src/../h/Riscv.hpp" 1
 1124              		csrc sstatus, a5
 1125              	# 0 "" 2
 1126              	.LVL81:
 1127              	#NO_APP
 1128              	.L43:
 1129              	.LBE204:
 1130              	.LBE203:
 192:src/Riscv.cpp ****     }
 193:src/Riscv.cpp **** }
 1131              		.loc 1 193 1
 1132 0418 03348100 		ld	s0,8(sp)
 1133              		.cfi_remember_state
 1134              		.cfi_restore 8
 1135              		.cfi_def_cfa 2, 16
 1136 041c 13010101 		addi	sp,sp,16
 1137              		.cfi_def_cfa_offset 0
 1138 0420 67800000 		jr	ra
 1139              	.L47:
GAS LISTING /tmp/ccFGanzb.s 			page 34


 1140              		.cfi_restore_state
 188:src/Riscv.cpp ****     }else{
 1141              		.loc 1 188 9 is_stmt 1
 1142              	.LVL82:
 1143              	.LBB205:
 1144              	.LBB206:
 152:src/../h/Riscv.hpp **** }
 1145              		.loc 2 152 5
 152:src/../h/Riscv.hpp **** }
 1146              		.loc 2 152 68 is_stmt 0
 1147 0424 93070010 		li	a5,256
 1148              	#APP
 1149              	# 152 "src/../h/Riscv.hpp" 1
 153:src/../h/Riscv.hpp **** 
 1150              		csrs sstatus, a5
 1151              	# 0 "" 2
 1152              		.loc 2 153 1
 1153              	#NO_APP
 1154 042c 6FF0DFFE 		j	.L43
 1155              	.LBE206:
 1156              	.LBE205:
 1157              		.cfi_endproc
 1158              	.LFE64:
 1160              	.Letext0:
 1161              		.file 6 "src/../h/../lib/hw.h"
 1162              		.file 7 "src/../h/MemoryAllocator.hpp"
 1163              		.file 8 "src/../h/syscall_c.h"
 1164              		.file 9 "src/../lib/console.h"
 1165              		.file 10 "src/../test/printing.hpp"
GAS LISTING /tmp/ccFGanzb.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccFGanzb.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccFGanzb.s:13     .text:0000000000000000 .L0 
     /tmp/ccFGanzb.s:14     .text:0000000000000000 .L0 
     /tmp/ccFGanzb.s:15     .text:0000000000000004 .L0 
     /tmp/ccFGanzb.s:17     .text:0000000000000008 .L0 
     /tmp/ccFGanzb.s:19     .text:000000000000000c .L0 
     /tmp/ccFGanzb.s:25     .text:000000000000000c .L0 
     /tmp/ccFGanzb.s:26     .text:000000000000000c .L0 
     /tmp/ccFGanzb.s:27     .text:000000000000000c .L0 
     /tmp/ccFGanzb.s:37     .text:0000000000000014 .L0 
       src/Riscv.cpp:12     .text:0000000000000014 .L0 
     /tmp/ccFGanzb.s:43     .text:0000000000000018 .L0 
       src/Riscv.cpp:13     .text:0000000000000018 .L0 
     /tmp/ccFGanzb.s:49     .text:000000000000001c .L0 
     /tmp/ccFGanzb.s:50     .text:0000000000000020 .L0 
     /tmp/ccFGanzb.s:51     .text:0000000000000020 .L0 
     /tmp/ccFGanzb.s:53     .text:0000000000000024 .L0 
     /tmp/ccFGanzb.s:55     .text:0000000000000028 .L0 
     /tmp/ccFGanzb.s:69     .text:0000000000000028 _ZN5Riscv10handleTrapEv
     /tmp/ccFGanzb.s:72     .text:0000000000000028 .L0 
     /tmp/ccFGanzb.s:73     .text:0000000000000028 .L0 
     /tmp/ccFGanzb.s:74     .text:000000000000002c .L0 
     /tmp/ccFGanzb.s:79     .text:000000000000003c .L0 
     /tmp/ccFGanzb.s:80     .text:000000000000003c .L0 
     /tmp/ccFGanzb.s:81     .text:000000000000003c .L0 
     /tmp/ccFGanzb.s:82     .text:000000000000003c .L0 
     /tmp/ccFGanzb.s:84     .text:0000000000000040 .L0 
     /tmp/ccFGanzb.s:88     .text:0000000000000040 .L0 
     /tmp/ccFGanzb.s:89     .text:0000000000000040 .L0 
     /tmp/ccFGanzb.s:90     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:83     .text:0000000000000040 .L0 
     /tmp/ccFGanzb.s:98     .text:0000000000000048 .L0 
     /tmp/ccFGanzb.s:99     .text:0000000000000048 .L0 
     /tmp/ccFGanzb.s:104    .text:000000000000004c .L0 
     /tmp/ccFGanzb.s:107    .text:000000000000004c .L0 
     /tmp/ccFGanzb.s:108    .text:000000000000004c .L0 
  src/../h/Riscv.hpp:68     .text:000000000000004c .L0 
     /tmp/ccFGanzb.s:116    .text:0000000000000054 .L0 
  src/../h/Riscv.hpp:69     .text:0000000000000054 .L0 
     /tmp/ccFGanzb.s:124    .text:000000000000005c .L0 
  src/../h/Riscv.hpp:70     .text:000000000000005c .L0 
     /tmp/ccFGanzb.s:132    .text:0000000000000064 .L0 
  src/../h/Riscv.hpp:71     .text:0000000000000064 .L0 
     /tmp/ccFGanzb.s:140    .text:000000000000006c .L0 
  src/../h/Riscv.hpp:72     .text:000000000000006c .L0 
     /tmp/ccFGanzb.s:152    .text:0000000000000074 .L0 
     /tmp/ccFGanzb.s:153    .text:0000000000000074 .L0 
     /tmp/ccFGanzb.s:155    .text:0000000000000078 .L0 
     /tmp/ccFGanzb.s:158    .text:0000000000000080 .L0 
     /tmp/ccFGanzb.s:163    .text:0000000000000090 .L0 
     /tmp/ccFGanzb.s:168    .text:00000000000000a0 .L0 
     /tmp/ccFGanzb.s:169    .text:00000000000000a0 .L0 
     /tmp/ccFGanzb.s:173    .text:00000000000000b0 .L0 
     /tmp/ccFGanzb.s:174    .text:00000000000000b0 .L0 
     /tmp/ccFGanzb.s:180    .text:00000000000000c4 .L0 
GAS LISTING /tmp/ccFGanzb.s 			page 36


     /tmp/ccFGanzb.s:181    .text:00000000000000c4 .L0 
     /tmp/ccFGanzb.s:186    .text:00000000000000d4 .L0 
     /tmp/ccFGanzb.s:193    .text:00000000000000d8 .L0 
     /tmp/ccFGanzb.s:194    .text:00000000000000d8 .L0 
     /tmp/ccFGanzb.s:195    .text:00000000000000d8 .L0 
  src/../h/Riscv.hpp:95     .text:00000000000000d8 .L0 
     /tmp/ccFGanzb.s:203    .text:00000000000000e0 .L0 
     /tmp/ccFGanzb.s:204    .text:00000000000000e0 .L0 
     /tmp/ccFGanzb.s:208    .text:00000000000000e4 .L0 
     /tmp/ccFGanzb.s:210    .text:00000000000000e8 .L0 
     /tmp/ccFGanzb.s:214    .text:00000000000000ec .L0 
     /tmp/ccFGanzb.s:215    .text:00000000000000ec .L0 
     /tmp/ccFGanzb.s:216    .text:00000000000000ec .L0 
  src/../h/Riscv.hpp:163    .text:00000000000000ec .L0 
     /tmp/ccFGanzb.s:224    .text:00000000000000f4 .L0 
     /tmp/ccFGanzb.s:225    .text:00000000000000f4 .L0 
     /tmp/ccFGanzb.s:229    .text:00000000000000f8 .L0 
     /tmp/ccFGanzb.s:232    .text:00000000000000fc .L0 
     /tmp/ccFGanzb.s:233    .text:00000000000000fc .L0 
     /tmp/ccFGanzb.s:332    .text:0000000000000124 .L0 
     /tmp/ccFGanzb.s:334    .text:0000000000000124 .L0 
     /tmp/ccFGanzb.s:335    .text:0000000000000124 .L0 
     /tmp/ccFGanzb.s:336    .text:0000000000000124 .L0 
     /tmp/ccFGanzb.s:342    .text:0000000000000130 .L0 
     /tmp/ccFGanzb.s:343    .text:0000000000000130 .L0 
  src/../h/Riscv.hpp:173    .text:0000000000000130 .L0 
     /tmp/ccFGanzb.s:357    .text:0000000000000134 .L0 
       src/Riscv.cpp:144    .text:0000000000000134 .L0 
     /tmp/ccFGanzb.s:363    .text:0000000000000138 .L0 
     /tmp/ccFGanzb.s:365    .text:0000000000000138 .L0 
     /tmp/ccFGanzb.s:370    .text:000000000000013c .L0 
  src/../h/Riscv.hpp:169    .text:000000000000013c .L0 
     /tmp/ccFGanzb.s:380    .text:0000000000000140 .L0 
     /tmp/ccFGanzb.s:381    .text:0000000000000140 .L0 
     /tmp/ccFGanzb.s:386    .text:0000000000000144 .L0 
  src/../h/Riscv.hpp:101    .text:0000000000000144 .L0 
     /tmp/ccFGanzb.s:399    .text:0000000000000148 .L0 
     /tmp/ccFGanzb.s:400    .text:000000000000014c .L0 
     /tmp/ccFGanzb.s:401    .text:000000000000014c .L0 
     /tmp/ccFGanzb.s:403    .text:0000000000000150 .L0 
     /tmp/ccFGanzb.s:404    .text:0000000000000150 .L0 
     /tmp/ccFGanzb.s:406    .text:0000000000000154 .L0 
     /tmp/ccFGanzb.s:408    .text:0000000000000158 .L0 
     /tmp/ccFGanzb.s:410    .text:000000000000015c .L0 
     /tmp/ccFGanzb.s:414    .text:0000000000000160 .L0 
     /tmp/ccFGanzb.s:420    .text:0000000000000160 .L0 
     /tmp/ccFGanzb.s:422    .text:0000000000000160 .L0 
     /tmp/ccFGanzb.s:423    .text:0000000000000160 .L0 
     /tmp/ccFGanzb.s:424    .text:0000000000000160 .L0 
     /tmp/ccFGanzb.s:430    .text:000000000000016c .L0 
     /tmp/ccFGanzb.s:431    .text:000000000000016c .L0 
  src/../h/Riscv.hpp:173    .text:000000000000016c .L0 
     /tmp/ccFGanzb.s:438    .text:0000000000000170 .L0 
     /tmp/ccFGanzb.s:445    .text:0000000000000174 .L0 
     /tmp/ccFGanzb.s:447    .text:0000000000000174 .L0 
     /tmp/ccFGanzb.s:448    .text:0000000000000174 .L0 
     /tmp/ccFGanzb.s:449    .text:0000000000000174 .L0 
GAS LISTING /tmp/ccFGanzb.s 			page 37


     /tmp/ccFGanzb.s:452    .text:0000000000000178 .L0 
     /tmp/ccFGanzb.s:453    .text:0000000000000178 .L0 
     /tmp/ccFGanzb.s:454    .text:0000000000000178 .L0 
     /tmp/ccFGanzb.s:455    .text:0000000000000178 .L0 
     /tmp/ccFGanzb.s:456    .text:0000000000000178 .L0 
     /tmp/ccFGanzb.s:462    .text:000000000000018c .L0 
     /tmp/ccFGanzb.s:467    .text:0000000000000190 .L0 
     /tmp/ccFGanzb.s:468    .text:0000000000000190 .L0 
     /tmp/ccFGanzb.s:469    .text:0000000000000190 .L0 
     /tmp/ccFGanzb.s:476    .text:0000000000000198 .L0 
     /tmp/ccFGanzb.s:483    .text:000000000000019c .L0 
     /tmp/ccFGanzb.s:485    .text:000000000000019c .L0 
     /tmp/ccFGanzb.s:486    .text:000000000000019c .L0 
     /tmp/ccFGanzb.s:487    .text:000000000000019c .L0 
     /tmp/ccFGanzb.s:492    .text:00000000000001a4 .L0 
     /tmp/ccFGanzb.s:493    .text:00000000000001a4 .L0 
  src/../h/Riscv.hpp:173    .text:00000000000001a4 .L0 
     /tmp/ccFGanzb.s:500    .text:00000000000001a8 .L0 
     /tmp/ccFGanzb.s:507    .text:00000000000001ac .L0 
     /tmp/ccFGanzb.s:508    .text:00000000000001ac .L0 
     /tmp/ccFGanzb.s:509    .text:00000000000001ac .L0 
     /tmp/ccFGanzb.s:510    .text:00000000000001ac .L0 
     /tmp/ccFGanzb.s:515    .text:00000000000001b8 .L0 
     /tmp/ccFGanzb.s:517    .text:00000000000001b8 .L0 
     /tmp/ccFGanzb.s:518    .text:00000000000001b8 .L0 
     /tmp/ccFGanzb.s:519    .text:00000000000001b8 .L0 
     /tmp/ccFGanzb.s:522    .text:00000000000001bc .L0 
     /tmp/ccFGanzb.s:523    .text:00000000000001bc .L0 
     /tmp/ccFGanzb.s:524    .text:00000000000001bc .L0 
     /tmp/ccFGanzb.s:525    .text:00000000000001bc .L0 
     /tmp/ccFGanzb.s:526    .text:00000000000001bc .L0 
     /tmp/ccFGanzb.s:532    .text:00000000000001d0 .L0 
     /tmp/ccFGanzb.s:537    .text:00000000000001d4 .L0 
     /tmp/ccFGanzb.s:538    .text:00000000000001d4 .L0 
     /tmp/ccFGanzb.s:539    .text:00000000000001d4 .L0 
     /tmp/ccFGanzb.s:546    .text:00000000000001dc .L0 
     /tmp/ccFGanzb.s:553    .text:00000000000001e0 .L0 
     /tmp/ccFGanzb.s:555    .text:00000000000001e0 .L0 
     /tmp/ccFGanzb.s:556    .text:00000000000001e0 .L0 
     /tmp/ccFGanzb.s:557    .text:00000000000001e0 .L0 
     /tmp/ccFGanzb.s:558    .text:00000000000001e0 .L0 
     /tmp/ccFGanzb.s:564    .text:00000000000001ec .L0 
     /tmp/ccFGanzb.s:565    .text:00000000000001ec .L0 
  src/../h/Riscv.hpp:173    .text:00000000000001ec .L0 
     /tmp/ccFGanzb.s:572    .text:00000000000001f0 .L0 
     /tmp/ccFGanzb.s:579    .text:00000000000001f4 .L0 
     /tmp/ccFGanzb.s:581    .text:00000000000001f4 .L0 
     /tmp/ccFGanzb.s:582    .text:00000000000001f4 .L0 
     /tmp/ccFGanzb.s:583    .text:00000000000001f4 .L0 
     /tmp/ccFGanzb.s:586    .text:0000000000000200 .L0 
     /tmp/ccFGanzb.s:587    .text:0000000000000200 .L0 
     /tmp/ccFGanzb.s:590    .text:0000000000000208 .L0 
     /tmp/ccFGanzb.s:591    .text:0000000000000208 .L0 
     /tmp/ccFGanzb.s:598    .text:0000000000000214 .L0 
     /tmp/ccFGanzb.s:599    .text:0000000000000214 .L0 
     /tmp/ccFGanzb.s:606    .text:0000000000000218 .L0 
     /tmp/ccFGanzb.s:607    .text:0000000000000218 .L0 
GAS LISTING /tmp/ccFGanzb.s 			page 38


  src/../h/Riscv.hpp:173    .text:0000000000000218 .L0 
     /tmp/ccFGanzb.s:614    .text:000000000000021c .L0 
     /tmp/ccFGanzb.s:621    .text:0000000000000220 .L0 
     /tmp/ccFGanzb.s:623    .text:0000000000000220 .L0 
     /tmp/ccFGanzb.s:624    .text:0000000000000220 .L0 
     /tmp/ccFGanzb.s:625    .text:0000000000000220 .L0 
     /tmp/ccFGanzb.s:630    .text:0000000000000224 .L0 
     /tmp/ccFGanzb.s:631    .text:0000000000000224 .L0 
     /tmp/ccFGanzb.s:632    .text:0000000000000224 .L0 
     /tmp/ccFGanzb.s:637    .text:0000000000000228 .L0 
     /tmp/ccFGanzb.s:643    .text:0000000000000230 .L0 
     /tmp/ccFGanzb.s:644    .text:0000000000000230 .L0 
     /tmp/ccFGanzb.s:645    .text:0000000000000230 .L0 
     /tmp/ccFGanzb.s:651    .text:0000000000000234 .L0 
     /tmp/ccFGanzb.s:652    .text:0000000000000234 .L0 
     /tmp/ccFGanzb.s:657    .text:0000000000000238 .L0 
     /tmp/ccFGanzb.s:658    .text:0000000000000238 .L0 
     /tmp/ccFGanzb.s:660    .text:000000000000023c .L0 
     /tmp/ccFGanzb.s:662    .text:0000000000000240 .L0 
     /tmp/ccFGanzb.s:670    .text:0000000000000248 .L0 
     /tmp/ccFGanzb.s:671    .text:0000000000000248 .L0 
     /tmp/ccFGanzb.s:675    .text:0000000000000254 .L0 
     /tmp/ccFGanzb.s:682    .text:0000000000000258 .L0 
     /tmp/ccFGanzb.s:684    .text:0000000000000258 .L0 
     /tmp/ccFGanzb.s:685    .text:0000000000000258 .L0 
     /tmp/ccFGanzb.s:686    .text:0000000000000258 .L0 
     /tmp/ccFGanzb.s:689    .text:000000000000025c .L0 
     /tmp/ccFGanzb.s:690    .text:000000000000025c .L0 
     /tmp/ccFGanzb.s:696    .text:0000000000000260 .L0 
     /tmp/ccFGanzb.s:697    .text:0000000000000260 .L0 
     /tmp/ccFGanzb.s:698    .text:0000000000000260 .L0 
     /tmp/ccFGanzb.s:706    .text:000000000000026c .L0 
     /tmp/ccFGanzb.s:712    .text:0000000000000270 .L0 
     /tmp/ccFGanzb.s:719    .text:000000000000027c .L0 
     /tmp/ccFGanzb.s:720    .text:000000000000027c .L0 
     /tmp/ccFGanzb.s:722    .text:0000000000000280 .L0 
     /tmp/ccFGanzb.s:723    .text:0000000000000280 .L0 
     /tmp/ccFGanzb.s:730    .text:0000000000000284 .L0 
     /tmp/ccFGanzb.s:731    .text:0000000000000284 .L0 
     /tmp/ccFGanzb.s:732    .text:0000000000000284 .L0 
     /tmp/ccFGanzb.s:739    .text:000000000000028c .L0 
     /tmp/ccFGanzb.s:746    .text:0000000000000290 .L0 
     /tmp/ccFGanzb.s:748    .text:0000000000000290 .L0 
     /tmp/ccFGanzb.s:749    .text:0000000000000290 .L0 
     /tmp/ccFGanzb.s:750    .text:0000000000000290 .L0 
     /tmp/ccFGanzb.s:751    .text:0000000000000290 .L0 
     /tmp/ccFGanzb.s:757    .text:000000000000029c .L0 
     /tmp/ccFGanzb.s:758    .text:000000000000029c .L0 
  src/../h/Riscv.hpp:173    .text:000000000000029c .L0 
     /tmp/ccFGanzb.s:765    .text:00000000000002a0 .L0 
     /tmp/ccFGanzb.s:772    .text:00000000000002a4 .L0 
     /tmp/ccFGanzb.s:774    .text:00000000000002a4 .L0 
     /tmp/ccFGanzb.s:775    .text:00000000000002a4 .L0 
     /tmp/ccFGanzb.s:776    .text:00000000000002a4 .L0 
     /tmp/ccFGanzb.s:777    .text:00000000000002a4 .L0 
     /tmp/ccFGanzb.s:783    .text:00000000000002b0 .L0 
     /tmp/ccFGanzb.s:784    .text:00000000000002b0 .L0 
GAS LISTING /tmp/ccFGanzb.s 			page 39


  src/../h/Riscv.hpp:173    .text:00000000000002b0 .L0 
     /tmp/ccFGanzb.s:791    .text:00000000000002b4 .L0 
     /tmp/ccFGanzb.s:798    .text:00000000000002b8 .L0 
     /tmp/ccFGanzb.s:800    .text:00000000000002b8 .L0 
     /tmp/ccFGanzb.s:801    .text:00000000000002b8 .L0 
     /tmp/ccFGanzb.s:802    .text:00000000000002b8 .L0 
     /tmp/ccFGanzb.s:803    .text:00000000000002b8 .L0 
     /tmp/ccFGanzb.s:809    .text:00000000000002c4 .L0 
     /tmp/ccFGanzb.s:810    .text:00000000000002c4 .L0 
  src/../h/Riscv.hpp:173    .text:00000000000002c4 .L0 
     /tmp/ccFGanzb.s:817    .text:00000000000002c8 .L0 
     /tmp/ccFGanzb.s:824    .text:00000000000002cc .L0 
     /tmp/ccFGanzb.s:826    .text:00000000000002cc .L0 
     /tmp/ccFGanzb.s:827    .text:00000000000002cc .L0 
     /tmp/ccFGanzb.s:828    .text:00000000000002cc .L0 
     /tmp/ccFGanzb.s:833    .text:00000000000002d4 .L0 
     /tmp/ccFGanzb.s:834    .text:00000000000002d4 .L0 
  src/../h/Riscv.hpp:173    .text:00000000000002d4 .L0 
     /tmp/ccFGanzb.s:841    .text:00000000000002d8 .L0 
     /tmp/ccFGanzb.s:848    .text:00000000000002dc .L0 
     /tmp/ccFGanzb.s:850    .text:00000000000002dc .L0 
     /tmp/ccFGanzb.s:851    .text:00000000000002dc .L0 
     /tmp/ccFGanzb.s:852    .text:00000000000002dc .L0 
     /tmp/ccFGanzb.s:853    .text:00000000000002dc .L0 
     /tmp/ccFGanzb.s:861    .text:00000000000002ec .L0 
     /tmp/ccFGanzb.s:863    .text:00000000000002ec .L0 
     /tmp/ccFGanzb.s:864    .text:00000000000002ec .L0 
     /tmp/ccFGanzb.s:865    .text:00000000000002ec .L0 
     /tmp/ccFGanzb.s:868    .text:00000000000002f0 .L0 
     /tmp/ccFGanzb.s:869    .text:00000000000002f0 .L0 
     /tmp/ccFGanzb.s:870    .text:00000000000002f0 .L0 
     /tmp/ccFGanzb.s:872    .text:00000000000002f4 .L0 
     /tmp/ccFGanzb.s:877    .text:00000000000002f8 .L0 
     /tmp/ccFGanzb.s:878    .text:00000000000002f8 .L0 
     /tmp/ccFGanzb.s:879    .text:00000000000002f8 .L0 
     /tmp/ccFGanzb.s:886    .text:0000000000000300 .L0 
     /tmp/ccFGanzb.s:889    .text:0000000000000300 .L0 
     /tmp/ccFGanzb.s:890    .text:0000000000000300 .L0 
     /tmp/ccFGanzb.s:891    .text:0000000000000300 .L0 
     /tmp/ccFGanzb.s:898    .text:0000000000000308 .L0 
     /tmp/ccFGanzb.s:904    .text:000000000000030c .L0 
     /tmp/ccFGanzb.s:907    .text:000000000000030c .L0 
     /tmp/ccFGanzb.s:908    .text:000000000000030c .L0 
     /tmp/ccFGanzb.s:909    .text:000000000000030c .L0 
     /tmp/ccFGanzb.s:915    .text:0000000000000314 .L0 
     /tmp/ccFGanzb.s:916    .text:0000000000000314 .L0 
     /tmp/ccFGanzb.s:917    .text:0000000000000314 .L0 
     /tmp/ccFGanzb.s:924    .text:0000000000000320 .L0 
     /tmp/ccFGanzb.s:926    .text:0000000000000320 .L0 
     /tmp/ccFGanzb.s:927    .text:0000000000000320 .L0 
     /tmp/ccFGanzb.s:928    .text:0000000000000320 .L0 
     /tmp/ccFGanzb.s:930    .text:0000000000000324 .L0 
     /tmp/ccFGanzb.s:935    .text:0000000000000328 .L0 
     /tmp/ccFGanzb.s:936    .text:0000000000000328 .L0 
     /tmp/ccFGanzb.s:937    .text:0000000000000328 .L0 
     /tmp/ccFGanzb.s:942    .text:000000000000032c .L0 
     /tmp/ccFGanzb.s:945    .text:0000000000000334 .L0 
GAS LISTING /tmp/ccFGanzb.s 			page 40


     /tmp/ccFGanzb.s:946    .text:0000000000000334 .L0 
     /tmp/ccFGanzb.s:948    .text:0000000000000338 .L0 
     /tmp/ccFGanzb.s:951    .text:000000000000033c .L0 
     /tmp/ccFGanzb.s:952    .text:000000000000033c .L0 
     /tmp/ccFGanzb.s:959    .text:0000000000000348 .L0 
     /tmp/ccFGanzb.s:960    .text:0000000000000348 .L0 
     /tmp/ccFGanzb.s:961    .text:0000000000000348 .L0 
     /tmp/ccFGanzb.s:968    .text:0000000000000350 .L0 
     /tmp/ccFGanzb.s:976    .text:0000000000000354 .L0 
     /tmp/ccFGanzb.s:977    .text:0000000000000354 .L0 
     /tmp/ccFGanzb.s:978    .text:0000000000000354 .L0 
     /tmp/ccFGanzb.s:987    .text:0000000000000360 .L0 
     /tmp/ccFGanzb.s:992    .text:0000000000000364 .L0 
     /tmp/ccFGanzb.s:999    .text:0000000000000370 .L0 
     /tmp/ccFGanzb.s:1000   .text:0000000000000370 .L0 
     /tmp/ccFGanzb.s:1002   .text:0000000000000374 .L0 
     /tmp/ccFGanzb.s:1003   .text:0000000000000374 .L0 
     /tmp/ccFGanzb.s:1006   .text:0000000000000378 .L0 
     /tmp/ccFGanzb.s:1016   .text:000000000000037c .L0 
     /tmp/ccFGanzb.s:1017   .text:000000000000037c .L0 
     /tmp/ccFGanzb.s:1025   .text:0000000000000390 .L0 
     /tmp/ccFGanzb.s:1026   .text:0000000000000390 .L0 
     /tmp/ccFGanzb.s:1027   .text:0000000000000390 .L0 
     /tmp/ccFGanzb.s:1034   .text:0000000000000398 .L0 
     /tmp/ccFGanzb.s:1040   .text:000000000000039c .L0 
     /tmp/ccFGanzb.s:1041   .text:000000000000039c .L0 
     /tmp/ccFGanzb.s:1045   .text:00000000000003a8 .L0 
     /tmp/ccFGanzb.s:1051   .text:00000000000003a8 _ZN5Riscv17previousPrivilegeEm
     /tmp/ccFGanzb.s:1054   .text:00000000000003a8 .L0 
     /tmp/ccFGanzb.s:1056   .text:00000000000003a8 .L0 
     /tmp/ccFGanzb.s:1057   .text:00000000000003ac .L0 
     /tmp/ccFGanzb.s:1059   .text:00000000000003b0 .L0 
     /tmp/ccFGanzb.s:1061   .text:00000000000003b4 .L0 
     /tmp/ccFGanzb.s:1063   .text:00000000000003b4 .L0 
     /tmp/ccFGanzb.s:1064   .text:00000000000003b4 .L0 
     /tmp/ccFGanzb.s:1069   .text:00000000000003cc .L0 
     /tmp/ccFGanzb.s:1071   .text:00000000000003d0 .L0 
     /tmp/ccFGanzb.s:1072   .text:00000000000003d0 .L0 
     /tmp/ccFGanzb.s:1076   .text:00000000000003d4 .L0 
     /tmp/ccFGanzb.s:1077   .text:00000000000003d8 .L0 
     /tmp/ccFGanzb.s:1078   .text:00000000000003d8 .L0 
     /tmp/ccFGanzb.s:1079   .text:00000000000003d8 .L0 
     /tmp/ccFGanzb.s:1081   .text:00000000000003dc .L0 
     /tmp/ccFGanzb.s:1085   .text:00000000000003e0 .L0 
     /tmp/ccFGanzb.s:1087   .text:00000000000003e0 .L0 
     /tmp/ccFGanzb.s:1088   .text:00000000000003e0 .L0 
     /tmp/ccFGanzb.s:1091   .text:00000000000003e8 .L0 
     /tmp/ccFGanzb.s:1097   .text:00000000000003e8 _ZN5Riscv13prevPrivilegeEv
     /tmp/ccFGanzb.s:1100   .text:00000000000003e8 .L0 
     /tmp/ccFGanzb.s:1101   .text:00000000000003e8 .L0 
     /tmp/ccFGanzb.s:1102   .text:00000000000003ec .L0 
     /tmp/ccFGanzb.s:1104   .text:00000000000003f0 .L0 
     /tmp/ccFGanzb.s:1106   .text:00000000000003f4 .L0 
     /tmp/ccFGanzb.s:1108   .text:00000000000003f4 .L0 
     /tmp/ccFGanzb.s:1109   .text:00000000000003f4 .L0 
     /tmp/ccFGanzb.s:1114   .text:000000000000040c .L0 
     /tmp/ccFGanzb.s:1119   .text:0000000000000410 .L0 
GAS LISTING /tmp/ccFGanzb.s 			page 41


     /tmp/ccFGanzb.s:1120   .text:0000000000000410 .L0 
     /tmp/ccFGanzb.s:1121   .text:0000000000000410 .L0 
     /tmp/ccFGanzb.s:1132   .text:0000000000000418 .L0 
     /tmp/ccFGanzb.s:1133   .text:000000000000041c .L0 
     /tmp/ccFGanzb.s:1134   .text:000000000000041c .L0 
     /tmp/ccFGanzb.s:1135   .text:000000000000041c .L0 
     /tmp/ccFGanzb.s:1137   .text:0000000000000420 .L0 
     /tmp/ccFGanzb.s:1140   .text:0000000000000424 .L0 
     /tmp/ccFGanzb.s:1145   .text:0000000000000424 .L0 
     /tmp/ccFGanzb.s:1146   .text:0000000000000424 .L0 
     /tmp/ccFGanzb.s:1147   .text:0000000000000424 .L0 
     /tmp/ccFGanzb.s:1154   .text:000000000000042c .L0 
     /tmp/ccFGanzb.s:1157   .text:0000000000000430 .L0 
     /tmp/ccFGanzb.s:1166   .text:0000000000000430 .L0 
     /tmp/ccFGanzb.s:60     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccFGanzb.s:169    .text:00000000000000a0 .L0 
     /tmp/ccFGanzb.s:63     .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccFGanzb.s:181    .text:00000000000000c4 .L0 
     /tmp/ccFGanzb.s:245    .rodata:0000000000000000 .L7
     /tmp/ccFGanzb.s:237    .text:000000000000010c .L0 
     /tmp/ccFGanzb.s:583    .text:00000000000001f4 .L0 
     /tmp/ccFGanzb.s:591    .text:0000000000000208 .L0 
     /tmp/ccFGanzb.s:1017   .text:000000000000037c .L0 
     /tmp/ccFGanzb.s:1064   .text:00000000000003b4 .L0 
     /tmp/ccFGanzb.s:1066   .text:00000000000003c0 .L0 
     /tmp/ccFGanzb.s:1109   .text:00000000000003f4 .L0 
     /tmp/ccFGanzb.s:1111   .text:0000000000000400 .L0 
     /tmp/ccFGanzb.s:187    .text:00000000000000d8 .L34
     /tmp/ccFGanzb.s:1008   .text:000000000000037c .L35
     /tmp/ccFGanzb.s:1036   .text:000000000000039c .L36
     /tmp/ccFGanzb.s:393    .text:0000000000000148 .L3
     /tmp/ccFGanzb.s:350    .text:0000000000000134 .L5
     /tmp/ccFGanzb.s:647    .text:0000000000000234 .L24
     /tmp/ccFGanzb.s:664    .text:0000000000000248 .L25
     /tmp/ccFGanzb.s:900    .text:000000000000030c .L26
     /tmp/ccFGanzb.s:885    .text:0000000000000300 .L27
     /tmp/ccFGanzb.s:955    .text:0000000000000348 .L28
     /tmp/ccFGanzb.s:970    .text:0000000000000354 .L37
     /tmp/ccFGanzb.s:949    .text:000000000000033c .L29
     /tmp/ccFGanzb.s:1084   .text:00000000000003e0 .L42
     /tmp/ccFGanzb.s:1074   .text:00000000000003d4 .L38
     /tmp/ccFGanzb.s:1139   .text:0000000000000424 .L47
     /tmp/ccFGanzb.s:1128   .text:0000000000000418 .L43
     /tmp/ccFGanzb.s:329    .text:0000000000000124 .L23
     /tmp/ccFGanzb.s:413    .text:0000000000000160 .L22
     /tmp/ccFGanzb.s:440    .text:0000000000000174 .L21
     /tmp/ccFGanzb.s:478    .text:000000000000019c .L20
     /tmp/ccFGanzb.s:502    .text:00000000000001ac .L19
     /tmp/ccFGanzb.s:513    .text:00000000000001b8 .L18
     /tmp/ccFGanzb.s:548    .text:00000000000001e0 .L17
     /tmp/ccFGanzb.s:574    .text:00000000000001f4 .L16
     /tmp/ccFGanzb.s:616    .text:0000000000000220 .L15
     /tmp/ccFGanzb.s:677    .text:0000000000000258 .L14
     /tmp/ccFGanzb.s:741    .text:0000000000000290 .L13
     /tmp/ccFGanzb.s:767    .text:00000000000002a4 .L12
     /tmp/ccFGanzb.s:793    .text:00000000000002b8 .L11
     /tmp/ccFGanzb.s:819    .text:00000000000002cc .L10
GAS LISTING /tmp/ccFGanzb.s 			page 42


     /tmp/ccFGanzb.s:843    .text:00000000000002dc .L9
     /tmp/ccFGanzb.s:858    .text:00000000000002ec .L8
     /tmp/ccFGanzb.s:921    .text:0000000000000320 .L6
     /tmp/ccFGanzb.s:3766   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccFGanzb.s:5960   .debug_str:0000000000000918 .LASF192
     /tmp/ccFGanzb.s:5704   .debug_str:000000000000019b .LASF193
     /tmp/ccFGanzb.s:5754   .debug_str:0000000000000341 .LASF194
     /tmp/ccFGanzb.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccFGanzb.s:1160   .text:0000000000000430 .Letext0
     /tmp/ccFGanzb.s:5642   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccFGanzb.s:5784   .debug_str:0000000000000437 .LASF0
     /tmp/ccFGanzb.s:5808   .debug_str:00000000000004e5 .LASF1
     /tmp/ccFGanzb.s:5880   .debug_str:00000000000006e6 .LASF2
     /tmp/ccFGanzb.s:5892   .debug_str:000000000000074b .LASF4
     /tmp/ccFGanzb.s:5792   .debug_str:0000000000000470 .LASF3
     /tmp/ccFGanzb.s:5654   .debug_str:000000000000003f .LASF5
     /tmp/ccFGanzb.s:5850   .debug_str:000000000000060e .LASF6
     /tmp/ccFGanzb.s:5798   .debug_str:00000000000004b0 .LASF7
     /tmp/ccFGanzb.s:5750   .debug_str:0000000000000319 .LASF8
     /tmp/ccFGanzb.s:5762   .debug_str:000000000000038d .LASF9
     /tmp/ccFGanzb.s:5692   .debug_str:000000000000014c .LASF10
     /tmp/ccFGanzb.s:5740   .debug_str:00000000000002ca .LASF11
     /tmp/ccFGanzb.s:5706   .debug_str:00000000000001a9 .LASF12
     /tmp/ccFGanzb.s:5690   .debug_str:000000000000013c .LASF13
     /tmp/ccFGanzb.s:5940   .debug_str:000000000000088b .LASF14
     /tmp/ccFGanzb.s:5732   .debug_str:0000000000000293 .LASF15
     /tmp/ccFGanzb.s:5928   .debug_str:0000000000000846 .LASF16
     /tmp/ccFGanzb.s:5868   .debug_str:00000000000006a3 .LASF33
     /tmp/ccFGanzb.s:5806   .debug_str:00000000000004e0 .LASF17
     /tmp/ccFGanzb.s:5694   .debug_str:000000000000015b .LASF18
     /tmp/ccFGanzb.s:5666   .debug_str:00000000000000a3 .LASF19
     /tmp/ccFGanzb.s:5846   .debug_str:00000000000005f0 .LASF27
     /tmp/ccFGanzb.s:5900   .debug_str:000000000000077b .LASF20
     /tmp/ccFGanzb.s:5710   .debug_str:00000000000001c0 .LASF22
     /tmp/ccFGanzb.s:6022   .debug_str:0000000000000b77 .LASF21
     /tmp/ccFGanzb.s:5954   .debug_str:00000000000008d3 .LASF23
     /tmp/ccFGanzb.s:5870   .debug_str:00000000000006ac .LASF24
     /tmp/ccFGanzb.s:5948   .debug_str:00000000000008ac .LASF25
     /tmp/ccFGanzb.s:5828   .debug_str:000000000000057e .LASF36
     /tmp/ccFGanzb.s:5658   .debug_str:0000000000000051 .LASF38
     /tmp/ccFGanzb.s:5946   .debug_str:00000000000008a3 .LASF46
     /tmp/ccFGanzb.s:5830   .debug_str:0000000000000588 .LASF48
     /tmp/ccFGanzb.s:5818   .debug_str:000000000000051e .LASF26
     /tmp/ccFGanzb.s:5914   .debug_str:00000000000007f5 .LASF116
     /tmp/ccFGanzb.s:5918   .debug_str:0000000000000812 .LASF28
     /tmp/ccFGanzb.s:5686   .debug_str:000000000000012d .LASF29
     /tmp/ccFGanzb.s:5680   .debug_str:0000000000000105 .LASF30
     /tmp/ccFGanzb.s:5860   .debug_str:000000000000066d .LASF31
     /tmp/ccFGanzb.s:5912   .debug_str:00000000000007e9 .LASF32
     /tmp/ccFGanzb.s:5700   .debug_str:000000000000017d .LASF34
     /tmp/ccFGanzb.s:5768   .debug_str:00000000000003c8 .LASF35
     /tmp/ccFGanzb.s:6008   .debug_str:0000000000000b07 .LASF37
     /tmp/ccFGanzb.s:6034   .debug_str:0000000000000bbb .LASF39
     /tmp/ccFGanzb.s:5938   .debug_str:000000000000087e .LASF40
     /tmp/ccFGanzb.s:6002   .debug_str:0000000000000ac9 .LASF41
     /tmp/ccFGanzb.s:5844   .debug_str:00000000000005eb .LASF195
     /tmp/ccFGanzb.s:5874   .debug_str:00000000000006c3 .LASF42
GAS LISTING /tmp/ccFGanzb.s 			page 43


     /tmp/ccFGanzb.s:6020   .debug_str:0000000000000b53 .LASF43
     /tmp/ccFGanzb.s:6004   .debug_str:0000000000000aeb .LASF60
     /tmp/ccFGanzb.s:5962   .debug_str:00000000000009dc .LASF62
     /tmp/ccFGanzb.s:6038   .debug_str:0000000000000bdf .LASF44
     /tmp/ccFGanzb.s:5734   .debug_str:00000000000002a9 .LASF45
     /tmp/ccFGanzb.s:5648   .debug_str:000000000000001d .LASF47
     /tmp/ccFGanzb.s:5790   .debug_str:0000000000000463 .LASF49
     /tmp/ccFGanzb.s:5766   .debug_str:00000000000003bd .LASF52
     /tmp/ccFGanzb.s:6012   .debug_str:0000000000000b14 .LASF54
     /tmp/ccFGanzb.s:5696   .debug_str:0000000000000160 .LASF50
     /tmp/ccFGanzb.s:5794   .debug_str:0000000000000482 .LASF51
     /tmp/ccFGanzb.s:5812   .debug_str:0000000000000502 .LASF53
     /tmp/ccFGanzb.s:5822   .debug_str:000000000000053e .LASF55
     /tmp/ccFGanzb.s:5956   .debug_str:0000000000000903 .LASF56
     /tmp/ccFGanzb.s:6032   .debug_str:0000000000000bb4 .LASF57
     /tmp/ccFGanzb.s:6030   .debug_str:0000000000000bae .LASF58
     /tmp/ccFGanzb.s:5966   .debug_str:00000000000009fe .LASF59
     /tmp/ccFGanzb.s:5924   .debug_str:000000000000082e .LASF61
     /tmp/ccFGanzb.s:5884   .debug_str:000000000000070c .LASF63
     /tmp/ccFGanzb.s:5982   .debug_str:0000000000000a5d .LASF64
     /tmp/ccFGanzb.s:5836   .debug_str:00000000000005b6 .LASF65
     /tmp/ccFGanzb.s:5904   .debug_str:0000000000000799 .LASF66
     /tmp/ccFGanzb.s:5646   .debug_str:0000000000000018 .LASF67
     /tmp/ccFGanzb.s:5922   .debug_str:0000000000000828 .LASF68
     /tmp/ccFGanzb.s:5978   .debug_str:0000000000000a40 .LASF69
     /tmp/ccFGanzb.s:5996   .debug_str:0000000000000aaf .LASF70
     /tmp/ccFGanzb.s:5970   .debug_str:0000000000000a22 .LASF71
     /tmp/ccFGanzb.s:5888   .debug_str:000000000000072d .LASF72
     /tmp/ccFGanzb.s:5748   .debug_str:000000000000030e .LASF73
     /tmp/ccFGanzb.s:5722   .debug_str:000000000000023f .LASF76
     /tmp/ccFGanzb.s:5662   .debug_str:0000000000000078 .LASF78
     /tmp/ccFGanzb.s:5712   .debug_str:00000000000001ec .LASF74
     /tmp/ccFGanzb.s:5672   .debug_str:00000000000000c7 .LASF75
     /tmp/ccFGanzb.s:5682   .debug_str:000000000000010e .LASF77
     /tmp/ccFGanzb.s:5668   .debug_str:00000000000000a8 .LASF79
     /tmp/ccFGanzb.s:5902   .debug_str:0000000000000783 .LASF112
     /tmp/ccFGanzb.s:5678   .debug_str:00000000000000f9 .LASF196
     /tmp/ccFGanzb.s:5998   .debug_str:0000000000000ab6 .LASF80
     /tmp/ccFGanzb.s:6024   .debug_str:0000000000000b82 .LASF81
     /tmp/ccFGanzb.s:5930   .debug_str:000000000000085c .LASF82
     /tmp/ccFGanzb.s:5916   .debug_str:0000000000000802 .LASF83
     /tmp/ccFGanzb.s:5644   .debug_str:0000000000000000 .LASF84
     /tmp/ccFGanzb.s:5664   .debug_str:000000000000008b .LASF85
     /tmp/ccFGanzb.s:6018   .debug_str:0000000000000b3a .LASF86
     /tmp/ccFGanzb.s:5840   .debug_str:00000000000005ce .LASF87
     /tmp/ccFGanzb.s:5688   .debug_str:0000000000000133 .LASF88
     /tmp/ccFGanzb.s:5858   .debug_str:0000000000000651 .LASF89
     /tmp/ccFGanzb.s:5774   .debug_str:00000000000003fa .LASF90
     /tmp/ccFGanzb.s:6028   .debug_str:0000000000000b91 .LASF91
     /tmp/ccFGanzb.s:5724   .debug_str:0000000000000248 .LASF92
     /tmp/ccFGanzb.s:5720   .debug_str:0000000000000224 .LASF93
     /tmp/ccFGanzb.s:5942   .debug_str:0000000000000897 .LASF94
     /tmp/ccFGanzb.s:5730   .debug_str:0000000000000276 .LASF95
     /tmp/ccFGanzb.s:5660   .debug_str:0000000000000072 .LASF96
     /tmp/ccFGanzb.s:5906   .debug_str:00000000000007aa .LASF97
     /tmp/ccFGanzb.s:5782   .debug_str:0000000000000431 .LASF98
     /tmp/ccFGanzb.s:5984   .debug_str:0000000000000a63 .LASF99
GAS LISTING /tmp/ccFGanzb.s 			page 44


     /tmp/ccFGanzb.s:5650   .debug_str:000000000000002d .LASF100
     /tmp/ccFGanzb.s:5764   .debug_str:000000000000039b .LASF101
     /tmp/ccFGanzb.s:5974   .debug_str:0000000000000a34 .LASF102
     /tmp/ccFGanzb.s:5992   .debug_str:0000000000000aa5 .LASF104
     /tmp/ccFGanzb.s:5804   .debug_str:00000000000004db .LASF103
     /tmp/ccFGanzb.s:5726   .debug_str:000000000000024d .LASF105
     /tmp/ccFGanzb.s:5890   .debug_str:0000000000000738 .LASF106
     /tmp/ccFGanzb.s:5856   .debug_str:000000000000063d .LASF197
     /tmp/ccFGanzb.s:5934   .debug_str:0000000000000872 .LASF107
     /tmp/ccFGanzb.s:5834   .debug_str:00000000000005b1 .LASF108
     /tmp/ccFGanzb.s:5972   .debug_str:0000000000000a2c .LASF109
     /tmp/ccFGanzb.s:5728   .debug_str:0000000000000268 .LASF110
     /tmp/ccFGanzb.s:5760   .debug_str:000000000000037b .LASF111
     /tmp/ccFGanzb.s:5908   .debug_str:00000000000007c6 .LASF113
     /tmp/ccFGanzb.s:5894   .debug_str:0000000000000752 .LASF114
     /tmp/ccFGanzb.s:5670   .debug_str:00000000000000c1 .LASF115
     /tmp/ccFGanzb.s:5786   .debug_str:0000000000000444 .LASF117
     /tmp/ccFGanzb.s:5796   .debug_str:00000000000004a7 .LASF118
     /tmp/ccFGanzb.s:5736   .debug_str:00000000000002b5 .LASF119
     /tmp/ccFGanzb.s:6026   .debug_str:0000000000000b88 .LASF120
     /tmp/ccFGanzb.s:5990   .debug_str:0000000000000a96 .LASF121
     /tmp/ccFGanzb.s:5738   .debug_str:00000000000002be .LASF122
     /tmp/ccFGanzb.s:5958   .debug_str:000000000000090b .LASF123
     /tmp/ccFGanzb.s:5716   .debug_str:0000000000000206 .LASF124
     /tmp/ccFGanzb.s:5802   .debug_str:00000000000004d6 .LASF125
     /tmp/ccFGanzb.s:5824   .debug_str:0000000000000557 .LASF127
     /tmp/ccFGanzb.s:5770   .debug_str:00000000000003d0 .LASF126
     /tmp/ccFGanzb.s:5780   .debug_str:0000000000000419 .LASF128
     /tmp/ccFGanzb.s:5886   .debug_str:000000000000071b .LASF129
     /tmp/ccFGanzb.s:5772   .debug_str:00000000000003db .LASF130
     /tmp/ccFGanzb.s:5848   .debug_str:0000000000000600 .LASF131
     /tmp/ccFGanzb.s:5820   .debug_str:0000000000000523 .LASF132
     /tmp/ccFGanzb.s:5872   .debug_str:00000000000006b8 .LASF133
     /tmp/ccFGanzb.s:5752   .debug_str:0000000000000329 .LASF134
     /tmp/ccFGanzb.s:5988   .debug_str:0000000000000a8d .LASF135
     /tmp/ccFGanzb.s:5980   .debug_str:0000000000000a48 .LASF136
     /tmp/ccFGanzb.s:5876   .debug_str:00000000000006d2 .LASF137
     /tmp/ccFGanzb.s:5842   .debug_str:00000000000005d6 .LASF138
     /tmp/ccFGanzb.s:5862   .debug_str:0000000000000675 .LASF139
     /tmp/ccFGanzb.s:5864   .debug_str:000000000000067c .LASF140
     /tmp/ccFGanzb.s:5708   .debug_str:00000000000001b9 .LASF141
     /tmp/ccFGanzb.s:5800   .debug_str:00000000000004c3 .LASF142
     /tmp/ccFGanzb.s:6014   .debug_str:0000000000000b2b .LASF143
     /tmp/ccFGanzb.s:5968   .debug_str:0000000000000a0e .LASF144
     /tmp/ccFGanzb.s:5832   .debug_str:00000000000005a9 .LASF145
     /tmp/ccFGanzb.s:5742   .debug_str:00000000000002d9 .LASF146
     /tmp/ccFGanzb.s:5814   .debug_str:000000000000050f .LASF147
     /tmp/ccFGanzb.s:5866   .debug_str:000000000000068f .LASF148
     /tmp/ccFGanzb.s:6040   .debug_str:0000000000000bec .LASF149
     /tmp/ccFGanzb.s:5788   .debug_str:000000000000044f .LASF150
     /tmp/ccFGanzb.s:5936   .debug_str:0000000000000877 .LASF151
     /tmp/ccFGanzb.s:5898   .debug_str:0000000000000768 .LASF152
     /tmp/ccFGanzb.s:6016   .debug_str:0000000000000b33 .LASF153
     /tmp/ccFGanzb.s:5698   .debug_str:000000000000016a .LASF154
     /tmp/ccFGanzb.s:5896   .debug_str:0000000000000762 .LASF155
     /tmp/ccFGanzb.s:5778   .debug_str:0000000000000407 .LASF156
     /tmp/ccFGanzb.s:5976   .debug_str:0000000000000a3a .LASF157
GAS LISTING /tmp/ccFGanzb.s 			page 45


     /tmp/ccFGanzb.s:5718   .debug_str:0000000000000212 .LASF158
     /tmp/ccFGanzb.s:5656   .debug_str:0000000000000046 .LASF159
     /tmp/ccFGanzb.s:5882   .debug_str:00000000000006f4 .LASF160
     /tmp/ccFGanzb.s:5878   .debug_str:00000000000006db .LASF161
     /tmp/ccFGanzb.s:6036   .debug_str:0000000000000bc7 .LASF162
     /tmp/ccFGanzb.s:6006   .debug_str:0000000000000afd .LASF163
     /tmp/ccFGanzb.s:5702   .debug_str:0000000000000185 .LASF164
     /tmp/ccFGanzb.s:6000   .debug_str:0000000000000abf .LASF165
     /tmp/ccFGanzb.s:5826   .debug_str:0000000000000568 .LASF166
     /tmp/ccFGanzb.s:5920   .debug_str:000000000000081a .LASF167
     /tmp/ccFGanzb.s:5950   .debug_str:00000000000008b2 .LASF168
     /tmp/ccFGanzb.s:5674   .debug_str:00000000000000ef .LASF169
     /tmp/ccFGanzb.s:5684   .debug_str:000000000000011c .LASF170
     /tmp/ccFGanzb.s:1098   .text:00000000000003e8 .LFB64
     /tmp/ccFGanzb.s:1158   .text:0000000000000430 .LFE64
     /tmp/ccFGanzb.s:1117   .text:0000000000000410 .LBB203
     /tmp/ccFGanzb.s:1130   .text:0000000000000418 .LBE203
     /tmp/ccFGanzb.s:5088   .debug_loc:0000000000000000 .LLST68
     /tmp/ccFGanzb.s:1143   .text:0000000000000424 .LBB205
     /tmp/ccFGanzb.s:1156   .text:0000000000000430 .LBE205
     /tmp/ccFGanzb.s:1052   .text:00000000000003a8 .LFB63
     /tmp/ccFGanzb.s:1092   .text:00000000000003e8 .LFE63
     /tmp/ccFGanzb.s:6010   .debug_str:0000000000000b0c .LASF174
     /tmp/ccFGanzb.s:5097   .debug_loc:0000000000000026 .LLST67
     /tmp/ccFGanzb.s:70     .text:0000000000000028 .LFB62
     /tmp/ccFGanzb.s:1046   .text:00000000000003a8 .LFE62
     /tmp/ccFGanzb.s:5932   .debug_str:000000000000086b .LASF171
     /tmp/ccFGanzb.s:5122   .debug_loc:0000000000000088 .LLST1
     /tmp/ccFGanzb.s:5810   .debug_str:00000000000004f8 .LASF172
     /tmp/ccFGanzb.s:5628   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccFGanzb.s:5964   .debug_str:00000000000009f9 .LASF173
     /tmp/ccFGanzb.s:333    .text:0000000000000124 .LBB119
     /tmp/ccFGanzb.s:353    .text:0000000000000134 .LBE119
     /tmp/ccFGanzb.s:5153   .debug_loc:000000000000011d .LLST3
     /tmp/ccFGanzb.s:340    .text:0000000000000130 .LBB120
     /tmp/ccFGanzb.s:352    .text:0000000000000134 .LBE120
     /tmp/ccFGanzb.s:338    .text:0000000000000130 .LVL7
     /tmp/ccFGanzb.s:421    .text:0000000000000160 .LBB122
     /tmp/ccFGanzb.s:443    .text:0000000000000174 .LBE122
     /tmp/ccFGanzb.s:5160   .debug_loc:0000000000000140 .LLST5
     /tmp/ccFGanzb.s:428    .text:000000000000016c .LBB123
     /tmp/ccFGanzb.s:442    .text:0000000000000174 .LBE123
     /tmp/ccFGanzb.s:426    .text:000000000000016c .LVL14
     /tmp/ccFGanzb.s:446    .text:0000000000000174 .LBB125
     /tmp/ccFGanzb.s:481    .text:000000000000019c .LBE125
     /tmp/ccFGanzb.s:6042   .debug_str:0000000000000bf4 .LASF175
     /tmp/ccFGanzb.s:5167   .debug_loc:0000000000000163 .LLST7
     /tmp/ccFGanzb.s:5174   .debug_loc:0000000000000186 .LLST8
     /tmp/ccFGanzb.s:5182   .debug_loc:00000000000001aa .LLST9
     /tmp/ccFGanzb.s:5190   .debug_loc:00000000000001ce .LLST10
     /tmp/ccFGanzb.s:465    .text:0000000000000190 .LBB126
     /tmp/ccFGanzb.s:480    .text:000000000000019c .LBE126
     /tmp/ccFGanzb.s:5198   .debug_loc:00000000000001f2 .LLST11
     /tmp/ccFGanzb.s:460    .text:000000000000018c .LVL17
     /tmp/ccFGanzb.s:484    .text:000000000000019c .LBB128
     /tmp/ccFGanzb.s:505    .text:00000000000001ac .LBE128
     /tmp/ccFGanzb.s:5206   .debug_loc:0000000000000216 .LLST12
GAS LISTING /tmp/ccFGanzb.s 			page 46


     /tmp/ccFGanzb.s:490    .text:00000000000001a4 .LBB129
     /tmp/ccFGanzb.s:504    .text:00000000000001ac .LBE129
     /tmp/ccFGanzb.s:488    .text:00000000000001a4 .LVL20
     /tmp/ccFGanzb.s:516    .text:00000000000001b8 .LBB131
     /tmp/ccFGanzb.s:551    .text:00000000000001e0 .LBE131
     /tmp/ccFGanzb.s:5213   .debug_loc:0000000000000239 .LLST14
     /tmp/ccFGanzb.s:5220   .debug_loc:000000000000025c .LLST15
     /tmp/ccFGanzb.s:5228   .debug_loc:0000000000000280 .LLST16
     /tmp/ccFGanzb.s:5236   .debug_loc:00000000000002a4 .LLST17
     /tmp/ccFGanzb.s:535    .text:00000000000001d4 .LBB132
     /tmp/ccFGanzb.s:550    .text:00000000000001e0 .LBE132
     /tmp/ccFGanzb.s:5244   .debug_loc:00000000000002c8 .LLST18
     /tmp/ccFGanzb.s:530    .text:00000000000001d0 .LVL24
     /tmp/ccFGanzb.s:554    .text:00000000000001e0 .LBB134
     /tmp/ccFGanzb.s:577    .text:00000000000001f4 .LBE134
     /tmp/ccFGanzb.s:5252   .debug_loc:00000000000002ec .LLST19
     /tmp/ccFGanzb.s:5260   .debug_loc:0000000000000310 .LLST20
     /tmp/ccFGanzb.s:562    .text:00000000000001ec .LBB135
     /tmp/ccFGanzb.s:576    .text:00000000000001f4 .LBE135
     /tmp/ccFGanzb.s:560    .text:00000000000001ec .LVL27
     /tmp/ccFGanzb.s:580    .text:00000000000001f4 .LBB137
     /tmp/ccFGanzb.s:619    .text:0000000000000220 .LBE137
     /tmp/ccFGanzb.s:5267   .debug_loc:0000000000000333 .LLST22
     /tmp/ccFGanzb.s:594    .text:0000000000000214 .LBB138
     /tmp/ccFGanzb.s:602    .text:0000000000000218 .LBE138
     /tmp/ccFGanzb.s:5274   .debug_loc:0000000000000356 .LLST23
     /tmp/ccFGanzb.s:604    .text:0000000000000218 .LBB140
     /tmp/ccFGanzb.s:618    .text:0000000000000220 .LBE140
     /tmp/ccFGanzb.s:588    .text:0000000000000208 .LVL29
     /tmp/ccFGanzb.s:622    .text:0000000000000220 .LBB142
     /tmp/ccFGanzb.s:680    .text:0000000000000258 .LBE142
     /tmp/ccFGanzb.s:5281   .debug_loc:0000000000000379 .LLST25
     /tmp/ccFGanzb.s:628    .text:0000000000000224 .LBB143
     /tmp/ccFGanzb.s:635    .text:0000000000000228 .LBE143
     /tmp/ccFGanzb.s:5288   .debug_loc:000000000000039c .LLST26
     /tmp/ccFGanzb.s:641    .text:0000000000000230 .LBB145
     /tmp/ccFGanzb.s:649    .text:0000000000000234 .LBE145
     /tmp/ccFGanzb.s:5295   .debug_loc:00000000000003bf .LLST27
     /tmp/ccFGanzb.s:5303   .debug_loc:00000000000003e3 .LLST28
     /tmp/ccFGanzb.s:654    .text:0000000000000238 .LBB147
     /tmp/ccFGanzb.s:666    .text:0000000000000248 .LBE147
     /tmp/ccFGanzb.s:5310   .debug_loc:0000000000000406 .LLST29
     /tmp/ccFGanzb.s:663    .text:0000000000000248 .LVL38
     /tmp/ccFGanzb.s:667    .text:0000000000000248 .LBB149
     /tmp/ccFGanzb.s:679    .text:0000000000000258 .LBE149
     /tmp/ccFGanzb.s:5317   .debug_loc:0000000000000429 .LLST30
     /tmp/ccFGanzb.s:673    .text:0000000000000254 .LVL39
     /tmp/ccFGanzb.s:683    .text:0000000000000258 .LBB151
     /tmp/ccFGanzb.s:744    .text:0000000000000290 .LBE151
     /tmp/ccFGanzb.s:5324   .debug_loc:000000000000044c .LLST31
     /tmp/ccFGanzb.s:5676   .debug_str:00000000000000f4 .LASF176
     /tmp/ccFGanzb.s:5331   .debug_loc:000000000000046f .LLST32
     /tmp/ccFGanzb.s:693    .text:0000000000000260 .LBB152
     /tmp/ccFGanzb.s:702    .text:000000000000026c .LBE152
     /tmp/ccFGanzb.s:5338   .debug_loc:0000000000000492 .LLST33
     /tmp/ccFGanzb.s:700    .text:000000000000026c .LVL43
     /tmp/ccFGanzb.s:703    .text:000000000000026c .LBB154
GAS LISTING /tmp/ccFGanzb.s 			page 47


     /tmp/ccFGanzb.s:726    .text:0000000000000284 .LBE154
     /tmp/ccFGanzb.s:5347   .debug_loc:00000000000004b7 .LLST34
     /tmp/ccFGanzb.s:5354   .debug_loc:00000000000004da .LLST35
     /tmp/ccFGanzb.s:5361   .debug_loc:00000000000004fd .LLST36
     /tmp/ccFGanzb.s:708    .text:0000000000000270 .LBB156
     /tmp/ccFGanzb.s:717    .text:000000000000027c .LBE156
     /tmp/ccFGanzb.s:5368   .debug_loc:0000000000000520 .LLST37
     /tmp/ccFGanzb.s:728    .text:0000000000000284 .LBB158
     /tmp/ccFGanzb.s:743    .text:0000000000000290 .LBE158
     /tmp/ccFGanzb.s:5377   .debug_loc:0000000000000545 .LLST38
     /tmp/ccFGanzb.s:747    .text:0000000000000290 .LBB160
     /tmp/ccFGanzb.s:770    .text:00000000000002a4 .LBE160
     /tmp/ccFGanzb.s:5385   .debug_loc:0000000000000569 .LLST39
     /tmp/ccFGanzb.s:5393   .debug_loc:000000000000058d .LLST40
     /tmp/ccFGanzb.s:755    .text:000000000000029c .LBB161
     /tmp/ccFGanzb.s:769    .text:00000000000002a4 .LBE161
     /tmp/ccFGanzb.s:753    .text:000000000000029c .LVL48
     /tmp/ccFGanzb.s:773    .text:00000000000002a4 .LBB163
     /tmp/ccFGanzb.s:796    .text:00000000000002b8 .LBE163
     /tmp/ccFGanzb.s:5400   .debug_loc:00000000000005b0 .LLST42
     /tmp/ccFGanzb.s:5408   .debug_loc:00000000000005d4 .LLST43
     /tmp/ccFGanzb.s:781    .text:00000000000002b0 .LBB164
     /tmp/ccFGanzb.s:795    .text:00000000000002b8 .LBE164
     /tmp/ccFGanzb.s:779    .text:00000000000002b0 .LVL50
     /tmp/ccFGanzb.s:799    .text:00000000000002b8 .LBB166
     /tmp/ccFGanzb.s:822    .text:00000000000002cc .LBE166
     /tmp/ccFGanzb.s:5415   .debug_loc:00000000000005f7 .LLST45
     /tmp/ccFGanzb.s:5423   .debug_loc:000000000000061b .LLST46
     /tmp/ccFGanzb.s:807    .text:00000000000002c4 .LBB167
     /tmp/ccFGanzb.s:821    .text:00000000000002cc .LBE167
     /tmp/ccFGanzb.s:805    .text:00000000000002c4 .LVL52
     /tmp/ccFGanzb.s:825    .text:00000000000002cc .LBB169
     /tmp/ccFGanzb.s:846    .text:00000000000002dc .LBE169
     /tmp/ccFGanzb.s:5430   .debug_loc:000000000000063e .LLST48
     /tmp/ccFGanzb.s:831    .text:00000000000002d4 .LBB170
     /tmp/ccFGanzb.s:845    .text:00000000000002dc .LBE170
     /tmp/ccFGanzb.s:829    .text:00000000000002d4 .LVL54
     /tmp/ccFGanzb.s:849    .text:00000000000002dc .LBB172
     /tmp/ccFGanzb.s:859    .text:00000000000002ec .LBE172
     /tmp/ccFGanzb.s:5437   .debug_loc:0000000000000661 .LLST50
     /tmp/ccFGanzb.s:855    .text:00000000000002e8 .LVL56
     /tmp/ccFGanzb.s:862    .text:00000000000002ec .LBB173
     /tmp/ccFGanzb.s:922    .text:0000000000000320 .LBE173
     /tmp/ccFGanzb.s:5445   .debug_loc:0000000000000685 .LLST51
     /tmp/ccFGanzb.s:5944   .debug_str:000000000000089e .LASF177
     /tmp/ccFGanzb.s:5466   .debug_loc:00000000000006e3 .LLST52
     /tmp/ccFGanzb.s:875    .text:00000000000002f8 .LBB174
     /tmp/ccFGanzb.s:5479   .debug_loc:000000000000071b .LLST53
     /tmp/ccFGanzb.s:5492   .debug_loc:0000000000000753 .LLST54
     /tmp/ccFGanzb.s:887    .text:0000000000000300 .LBB177
     /tmp/ccFGanzb.s:902    .text:000000000000030c .LBE177
     /tmp/ccFGanzb.s:5503   .debug_loc:0000000000000789 .LLST55
     /tmp/ccFGanzb.s:918    .text:000000000000031c .LVL63
     /tmp/ccFGanzb.s:925    .text:0000000000000320 .LBB180
     /tmp/ccFGanzb.s:1011   .text:000000000000037c .LBE180
     /tmp/ccFGanzb.s:5511   .debug_loc:00000000000007ad .LLST56
     /tmp/ccFGanzb.s:933    .text:0000000000000328 .LBB181
GAS LISTING /tmp/ccFGanzb.s 			page 48


     /tmp/ccFGanzb.s:940    .text:000000000000032c .LBE181
     /tmp/ccFGanzb.s:5518   .debug_loc:00000000000007d0 .LLST57
     /tmp/ccFGanzb.s:957    .text:0000000000000348 .LBB183
     /tmp/ccFGanzb.s:972    .text:0000000000000354 .LBE183
     /tmp/ccFGanzb.s:5525   .debug_loc:00000000000007f3 .LLST58
     /tmp/ccFGanzb.s:974    .text:0000000000000354 .LBB185
     /tmp/ccFGanzb.s:982    .text:0000000000000360 .LBE185
     /tmp/ccFGanzb.s:5533   .debug_loc:0000000000000817 .LLST59
     /tmp/ccFGanzb.s:980    .text:0000000000000360 .LVL69
     /tmp/ccFGanzb.s:983    .text:0000000000000360 .LBB187
     /tmp/ccFGanzb.s:1010   .text:000000000000037c .LBE187
     /tmp/ccFGanzb.s:5542   .debug_loc:000000000000083c .LLST60
     /tmp/ccFGanzb.s:5550   .debug_loc:0000000000000860 .LLST61
     /tmp/ccFGanzb.s:5559   .debug_loc:0000000000000885 .LLST62
     /tmp/ccFGanzb.s:989    .text:0000000000000364 .LBB190
     /tmp/ccFGanzb.s:997    .text:0000000000000370 .LBE190
     /tmp/ccFGanzb.s:5566   .debug_loc:00000000000008a8 .LLST63
     /tmp/ccFGanzb.s:954    .text:0000000000000348 .LVL67
     /tmp/ccFGanzb.s:191    .text:00000000000000d8 .LBB113
     /tmp/ccFGanzb.s:206    .text:00000000000000e4 .LBE113
     /tmp/ccFGanzb.s:212    .text:00000000000000ec .LBB115
     /tmp/ccFGanzb.s:227    .text:00000000000000f8 .LBE115
     /tmp/ccFGanzb.s:367    .text:000000000000013c .LBB193
     /tmp/ccFGanzb.s:378    .text:0000000000000140 .LBE193
     /tmp/ccFGanzb.s:5575   .debug_loc:00000000000008cd .LLST64
     /tmp/ccFGanzb.s:383    .text:0000000000000144 .LBB195
     /tmp/ccFGanzb.s:395    .text:0000000000000148 .LBE195
     /tmp/ccFGanzb.s:5582   .debug_loc:00000000000008f0 .LLST65
     /tmp/ccFGanzb.s:511    .text:00000000000001b4 .LVL22
     /tmp/ccFGanzb.s:86     .text:0000000000000040 .LBB107
     /tmp/ccFGanzb.s:102    .text:000000000000004c .LBE107
     /tmp/ccFGanzb.s:105    .text:000000000000004c .LBB109
     /tmp/ccFGanzb.s:149    .text:0000000000000074 .LBE109
     /tmp/ccFGanzb.s:5589   .debug_loc:0000000000000913 .LLST2
     /tmp/ccFGanzb.s:1023   .text:0000000000000390 .LBB199
     /tmp/ccFGanzb.s:1038   .text:000000000000039c .LBE199
     /tmp/ccFGanzb.s:5598   .debug_loc:0000000000000939 .LLST66
     /tmp/ccFGanzb.s:171    .text:00000000000000b0 .LVL4
     /tmp/ccFGanzb.s:178    .text:00000000000000c4 .LVL5
     /tmp/ccFGanzb.s:183    .text:00000000000000d4 .LVL6
     /tmp/ccFGanzb.s:1042   .text:00000000000003a4 .LVL75
     /tmp/ccFGanzb.s:5952   .debug_str:00000000000008ce .LASF178
     /tmp/ccFGanzb.s:10     .text:0000000000000000 .LFB61
     /tmp/ccFGanzb.s:56     .text:0000000000000028 .LFE61
     /tmp/ccFGanzb.s:22     .text:000000000000000c .LBB105
     /tmp/ccFGanzb.s:35     .text:0000000000000014 .LBE105
     /tmp/ccFGanzb.s:5606   .debug_loc:000000000000095d .LLST0
     /tmp/ccFGanzb.s:5994   .debug_str:0000000000000aaa .LASF179
     /tmp/ccFGanzb.s:5744   .debug_str:00000000000002ed .LASF180
     /tmp/ccFGanzb.s:5746   .debug_str:00000000000002f2 .LASF181
     /tmp/ccFGanzb.s:5986   .debug_str:0000000000000a7f .LASF182
     /tmp/ccFGanzb.s:5652   .debug_str:0000000000000035 .LASF183
     /tmp/ccFGanzb.s:5714   .debug_str:00000000000001fa .LASF184
     /tmp/ccFGanzb.s:5838   .debug_str:00000000000005c7 .LASF198
     /tmp/ccFGanzb.s:5926   .debug_str:0000000000000833 .LASF199
     /tmp/ccFGanzb.s:5776   .debug_str:0000000000000400 .LASF185
     /tmp/ccFGanzb.s:5816   .debug_str:0000000000000517 .LASF186
GAS LISTING /tmp/ccFGanzb.s 			page 49


     /tmp/ccFGanzb.s:5854   .debug_str:000000000000062a .LASF187
     /tmp/ccFGanzb.s:5758   .debug_str:000000000000036f .LASF188
     /tmp/ccFGanzb.s:5910   .debug_str:00000000000007da .LASF189
     /tmp/ccFGanzb.s:5852   .debug_str:0000000000000621 .LASF190
     /tmp/ccFGanzb.s:5756   .debug_str:000000000000035f .LASF191
     /tmp/ccFGanzb.s:1116   .text:0000000000000410 .LVL80
     /tmp/ccFGanzb.s:1126   .text:0000000000000418 .LVL81
     /tmp/ccFGanzb.s:1055   .text:00000000000003a8 .LVL76
     /tmp/ccFGanzb.s:1073   .text:00000000000003d4 .LVL77
     /tmp/ccFGanzb.s:1083   .text:00000000000003e0 .LVL78
     /tmp/ccFGanzb.s:1089   .text:00000000000003e4 .LVL79
     /tmp/ccFGanzb.s:100    .text:000000000000004c .LVL2
     /tmp/ccFGanzb.s:348    .text:0000000000000134 .LVL8
     /tmp/ccFGanzb.s:412    .text:0000000000000160 .LVL13
     /tmp/ccFGanzb.s:450    .text:0000000000000178 .LVL16
     /tmp/ccFGanzb.s:477    .text:000000000000019c .LVL19
     /tmp/ccFGanzb.s:520    .text:00000000000001bc .LVL23
     /tmp/ccFGanzb.s:547    .text:00000000000001e0 .LVL26
     /tmp/ccFGanzb.s:626    .text:0000000000000224 .LVL33
     /tmp/ccFGanzb.s:676    .text:0000000000000258 .LVL40
     /tmp/ccFGanzb.s:687    .text:000000000000025c .LVL41
     /tmp/ccFGanzb.s:740    .text:0000000000000290 .LVL47
     /tmp/ccFGanzb.s:931    .text:0000000000000328 .LVL65
     /tmp/ccFGanzb.s:1007   .text:000000000000037c .LVL72
     /tmp/ccFGanzb.s:439    .text:0000000000000174 .LVL15
     /tmp/ccFGanzb.s:464    .text:0000000000000190 .LVL18
     /tmp/ccFGanzb.s:501    .text:00000000000001ac .LVL21
     /tmp/ccFGanzb.s:534    .text:00000000000001d4 .LVL25
     /tmp/ccFGanzb.s:573    .text:00000000000001f4 .LVL28
     /tmp/ccFGanzb.s:600    .text:0000000000000218 .LVL31
     /tmp/ccFGanzb.s:615    .text:0000000000000220 .LVL32
     /tmp/ccFGanzb.s:593    .text:0000000000000214 .LVL30
     /tmp/ccFGanzb.s:633    .text:0000000000000228 .LVL34
     /tmp/ccFGanzb.s:640    .text:0000000000000230 .LVL35
     /tmp/ccFGanzb.s:646    .text:0000000000000234 .LVL36
     /tmp/ccFGanzb.s:653    .text:0000000000000238 .LVL37
     /tmp/ccFGanzb.s:691    .text:0000000000000260 .LVL42
     /tmp/ccFGanzb.s:724    .text:0000000000000284 .LVL46
     /tmp/ccFGanzb.s:707    .text:0000000000000270 .LVL44
     /tmp/ccFGanzb.s:715    .text:000000000000027c .LVL45
     /tmp/ccFGanzb.s:766    .text:00000000000002a4 .LVL49
     /tmp/ccFGanzb.s:792    .text:00000000000002b8 .LVL51
     /tmp/ccFGanzb.s:818    .text:00000000000002cc .LVL53
     /tmp/ccFGanzb.s:842    .text:00000000000002dc .LVL55
     /tmp/ccFGanzb.s:857    .text:00000000000002ec .LVL57
     /tmp/ccFGanzb.s:866    .text:00000000000002f0 .LVL58
     /tmp/ccFGanzb.s:881    .text:0000000000000300 .LVL60
     /tmp/ccFGanzb.s:899    .text:000000000000030c .LVL61
     /tmp/ccFGanzb.s:920    .text:0000000000000320 .LVL64
     /tmp/ccFGanzb.s:874    .text:00000000000002f8 .LVL59
     /tmp/ccFGanzb.s:911    .text:0000000000000314 .LVL62
     /tmp/ccFGanzb.s:938    .text:000000000000032c .LVL66
     /tmp/ccFGanzb.s:969    .text:0000000000000354 .LVL68
     /tmp/ccFGanzb.s:988    .text:0000000000000364 .LVL70
     /tmp/ccFGanzb.s:995    .text:0000000000000370 .LVL71
     /tmp/ccFGanzb.s:366    .text:000000000000013c .LVL9
     /tmp/ccFGanzb.s:375    .text:0000000000000140 .LVL10
GAS LISTING /tmp/ccFGanzb.s 			page 50


     /tmp/ccFGanzb.s:382    .text:0000000000000144 .LVL11
     /tmp/ccFGanzb.s:391    .text:0000000000000148 .LVL12
     /tmp/ccFGanzb.s:147    .text:0000000000000074 .LVL3
     /tmp/ccFGanzb.s:1022   .text:0000000000000390 .LVL73
     /tmp/ccFGanzb.s:1035   .text:000000000000039c .LVL74
     /tmp/ccFGanzb.s:21     .text:000000000000000c .LVL0
     /tmp/ccFGanzb.s:32     .text:0000000000000014 .LVL1
     /tmp/ccFGanzb.s:1167   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccFGanzb.s:189    .text:00000000000000d8 .LBB112
     /tmp/ccFGanzb.s:396    .text:0000000000000148 .LBE112
     /tmp/ccFGanzb.s:416    .text:0000000000000160 .LBB198
     /tmp/ccFGanzb.s:1014   .text:000000000000037c .LBE198
     /tmp/ccFGanzb.s:883    .text:0000000000000300 .LBE174
     /tmp/ccFGanzb.s:905    .text:000000000000030c .LBB179
     /tmp/ccFGanzb.s:913    .text:0000000000000314 .LBE179

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z8printIntiii
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3PCB12createThreadEPFvPvES0_Pm
_ZN3PCB4exitEv
_ZN3PCB8dispatchEv
_ZN3PCB14makeOnlyThreadEPFvPvES0_Pm
_ZN3PCB5startEv
_ZN3PCB16timeSliceCounterE
_ZN3PCB7runningE
_ZdaPv
_ZN14SemDescription5closeEv
_ZN14SemDescription4waitEv
_ZN14SemDescription6signalEv
__getc
__putc
console_handler
_ZN3PCB6kernelE
