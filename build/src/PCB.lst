GAS LISTING /tmp/ccRsKVJK.s 			page 1


   1              		.file	"PCB.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3PCB13threadWrapperEv
   9              	_ZN3PCB13threadWrapperEv:
  10              	.LFB65:
  11              		.file 1 "src/PCB.cpp"
   1:src/PCB.cpp   **** //
   2:src/PCB.cpp   **** // Created by os on 8/2/22.
   3:src/PCB.cpp   **** //
   4:src/PCB.cpp   **** 
   5:src/PCB.cpp   **** #include "../h/PCB.hpp"
   6:src/PCB.cpp   **** #include "../h/Riscv.hpp"
   7:src/PCB.cpp   **** 
   8:src/PCB.cpp   **** PCB* PCB::running = nullptr;
   9:src/PCB.cpp   **** uint64 PCB::timeSliceCounter = 0;
  10:src/PCB.cpp   **** PCB* PCB::kernel = nullptr;
  11:src/PCB.cpp   **** int PCB::ID = 0;
  12:src/PCB.cpp   **** 
  13:src/PCB.cpp   **** PCB *PCB::createThread(PCB::Body body, void* arg, uint64* stack) {
  14:src/PCB.cpp   ****     PCB* thread = makeOnlyThread(body, arg, stack);
  15:src/PCB.cpp   ****     thread->status = ThreadStatus::READY;
  16:src/PCB.cpp   ****     Scheduler::put(thread);
  17:src/PCB.cpp   ****     return thread;
  18:src/PCB.cpp   **** }
  19:src/PCB.cpp   **** 
  20:src/PCB.cpp   **** PCB *PCB::makeOnlyThread(Body body, void *arg, uint64 *stack) {
  21:src/PCB.cpp   ****     return new PCB(body, arg, stack);
  22:src/PCB.cpp   **** }
  23:src/PCB.cpp   **** 
  24:src/PCB.cpp   **** /*void PCB::yield() {
  25:src/PCB.cpp   ****     __asm__ volatile("ecall");
  26:src/PCB.cpp   **** }*/
  27:src/PCB.cpp   **** 
  28:src/PCB.cpp   **** void PCB::dispatch() {
  29:src/PCB.cpp   ****     PCB* old = running;
  30:src/PCB.cpp   ****     if(old->status == ThreadStatus::RUNNING) { old->status = ThreadStatus::READY; Scheduler::put(ol
  31:src/PCB.cpp   ****     running = Scheduler::get();
  32:src/PCB.cpp   ****     /*if(running->waiting & !Scheduler::isEmpty()){ //mozda while
  33:src/PCB.cpp   ****         old = running; Scheduler::put(old); running = Scheduler::get();
  34:src/PCB.cpp   ****     }*/
  35:src/PCB.cpp   ****     running->status = ThreadStatus::RUNNING;
  36:src/PCB.cpp   ****     Riscv::prevPrivilege();
  37:src/PCB.cpp   ****     PCB::contextSwitch(&old->context, &running->context);
  38:src/PCB.cpp   **** }
  39:src/PCB.cpp   **** 
  40:src/PCB.cpp   **** PCB* PCB::kernelThreadMaker() {
  41:src/PCB.cpp   ****     if(!kernel){
  42:src/PCB.cpp   ****         PCB* kernelThread = new PCB(); //default konstruktor potreban
  43:src/PCB.cpp   ****         PCB::kernel = PCB::running = kernelThread;
  44:src/PCB.cpp   ****     }
  45:src/PCB.cpp   ****     return kernel;
  46:src/PCB.cpp   **** }
  47:src/PCB.cpp   **** 
GAS LISTING /tmp/ccRsKVJK.s 			page 2


  48:src/PCB.cpp   **** void PCB::threadWrapper() {
  12              		.loc 1 48 27
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18 000c 23349100 		sd	s1,8(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040102 		addi	s0,sp,32
  23              		.cfi_def_cfa 8, 0
  49:src/PCB.cpp   ****     Riscv::popSppSpie();
  24              		.loc 1 49 5
  25              		.loc 1 49 22 is_stmt 0
  26 0014 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  26      E7800000 
  27              	.LVL0:
  50:src/PCB.cpp   ****     running->body(running->arg);
  28              		.loc 1 50 5 is_stmt 1
  29              		.loc 1 50 14 is_stmt 0
  30 001c 97040000 		lla	s1,.LANCHOR0
  30      93840400 
  31 0024 83B70400 		ld	a5,0(s1)
  32 0028 03B70701 		ld	a4,16(a5)
  33              		.loc 1 50 18
  34 002c 03B50702 		ld	a0,32(a5)
  35 0030 E7000700 		jalr	a4
  36              	.LVL1:
  51:src/PCB.cpp   ****     running->setStatus(ThreadStatus::FINISHED); //kada se zavrsi moze signal niti koja ceka preko j
  37              		.loc 1 51 5 is_stmt 1
  38              		.loc 1 51 23 is_stmt 0
  39 0034 83B70400 		ld	a5,0(s1)
  40              	.LVL2:
  41              	.LBB20:
  42              	.LBB21:
  43              		.file 2 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 8/2/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** 
   9:src/../h/PCB.hpp **** #include "../lib/hw.h"
  10:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  11:src/../h/PCB.hpp **** #include "syscall_c.h"
  12:src/../h/PCB.hpp **** 
  13:src/../h/PCB.hpp **** class PCB{
  14:src/../h/PCB.hpp **** 
  15:src/../h/PCB.hpp **** public:
  16:src/../h/PCB.hpp ****     bool waiting = false;
  17:src/../h/PCB.hpp **** 
  18:src/../h/PCB.hpp ****     sem_t sem = nullptr;
  19:src/../h/PCB.hpp **** 
GAS LISTING /tmp/ccRsKVJK.s 			page 3


  20:src/../h/PCB.hpp ****     ~PCB(){ delete []stack; }
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     using Body = void(*)(void*);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* createThread(Body body, void* arg, uint64* stack); //odmah zapocinje
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* makeOnlyThread(Body body, void* arg, uint64* stack); //napravi pa se posle moze pok
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static PCB* kernelThreadMaker();
  29:src/../h/PCB.hpp **** 
  30:src/../h/PCB.hpp ****     void* operator new(size_t size){ return MemoryAllocator::mem_alloc(size); }
  31:src/../h/PCB.hpp **** 
  32:src/../h/PCB.hpp ****     void operator delete(void* p){ MemoryAllocator::mem_free(p); }
  33:src/../h/PCB.hpp **** 
  34:src/../h/PCB.hpp ****     //static void yield();
  35:src/../h/PCB.hpp **** 
  36:src/../h/PCB.hpp ****     enum ThreadStatus{
  37:src/../h/PCB.hpp ****         RUNNING, READY,
  38:src/../h/PCB.hpp ****         FINISHED, CREATED,
  39:src/../h/PCB.hpp ****         BLOCKED_SEM
  40:src/../h/PCB.hpp ****     };
  41:src/../h/PCB.hpp **** 
  42:src/../h/PCB.hpp ****     bool isFinished() const{
  43:src/../h/PCB.hpp ****         return status == ThreadStatus::FINISHED;
  44:src/../h/PCB.hpp ****     }
  45:src/../h/PCB.hpp **** 
  46:src/../h/PCB.hpp ****     void setStatus(ThreadStatus ts){
  47:src/../h/PCB.hpp ****         status = ts;
  44              		.loc 2 47 9 is_stmt 1
  45              		.loc 2 47 16 is_stmt 0
  46 0038 13072000 		li	a4,2
  47 003c 23ACE702 		sw	a4,56(a5)
  48              	.LVL3:
  49              	.LBE21:
  50              	.LBE20:
  52:src/PCB.cpp   ****     if(running->sem != nullptr){
  51              		.loc 1 52 5 is_stmt 1
  52              	.LBB22:
  53              		.loc 1 52 17 is_stmt 0
  54 0040 83B78700 		ld	a5,8(a5)
  55              		.loc 1 52 5
  56 0044 63840702 		beqz	a5,.L2
  57              	.LBB23:
  53:src/PCB.cpp   ****         int i = running->sem->value();
  58              		.loc 1 53 9 is_stmt 1
  59              	.LVL4:
  60              	.LBB24:
  61              	.LBB25:
  62              		.file 3 "src/../h/SemDescription.hpp"
   1:src/../h/SemDescription.hpp **** //
   2:src/../h/SemDescription.hpp **** // Created by os on 8/13/22.
   3:src/../h/SemDescription.hpp **** //
   4:src/../h/SemDescription.hpp **** 
   5:src/../h/SemDescription.hpp **** #ifndef PROJECT_BASE_SEMDESCRIPTION_HPP
   6:src/../h/SemDescription.hpp **** #define PROJECT_BASE_SEMDESCRIPTION_HPP
   7:src/../h/SemDescription.hpp **** //#include "../lib/mem.h"
   8:src/../h/SemDescription.hpp **** #include "Queue.hpp"
GAS LISTING /tmp/ccRsKVJK.s 			page 4


   9:src/../h/SemDescription.hpp **** #include "PCB.hpp"
  10:src/../h/SemDescription.hpp **** #include "syscall_c.h"
  11:src/../h/SemDescription.hpp **** #include "MemoryAllocator.hpp"
  12:src/../h/SemDescription.hpp **** 
  13:src/../h/SemDescription.hpp **** //kao klasa sa predavanja
  14:src/../h/SemDescription.hpp **** class SemDescription {
  15:src/../h/SemDescription.hpp **** public:
  16:src/../h/SemDescription.hpp ****     ~SemDescription(){ close(); }
  17:src/../h/SemDescription.hpp **** 
  18:src/../h/SemDescription.hpp ****     void* operator new(size_t size){ return MemoryAllocator::mem_alloc(size); }
  19:src/../h/SemDescription.hpp **** 
  20:src/../h/SemDescription.hpp ****     void operator delete(void* p){ MemoryAllocator::mem_free(p); }
  21:src/../h/SemDescription.hpp **** 
  22:src/../h/SemDescription.hpp **** private:
  23:src/../h/SemDescription.hpp ****     int val; //ovde je bio problem sto sam stavio unsigned!
  24:src/../h/SemDescription.hpp ****     Queue blocked;
  25:src/../h/SemDescription.hpp ****     friend class Riscv;
  26:src/../h/SemDescription.hpp ****     friend class PCB;
  27:src/../h/SemDescription.hpp ****     bool isClosed;
  28:src/../h/SemDescription.hpp ****    // typedef SemDescription* sem_t;
  29:src/../h/SemDescription.hpp ****     SemDescription(sem_t* handle, unsigned val) : val(val){
  30:src/../h/SemDescription.hpp ****         *handle = this; isClosed = false;
  31:src/../h/SemDescription.hpp ****     }
  32:src/../h/SemDescription.hpp ****     int value() const{ return val; }
  63              		.loc 3 32 24
  64              		.loc 3 32 31 is_stmt 0
  65 0048 83A40700 		lw	s1,0(a5)
  66              	.LVL5:
  67 004c 6F00C001 		j	.L3
  68              	.L5:
  69              	.LBE25:
  70              	.LBE24:
  54:src/PCB.cpp   ****         while(i < 0) {
  55:src/PCB.cpp   ****             running->sem->signal();
  71              		.loc 1 55 13 is_stmt 1
  72              		.loc 1 55 33 is_stmt 0
  73 0050 97070000 		ld	a5,.LANCHOR0
  73      83B70700 
  74 0058 03B58700 		ld	a0,8(a5)
  75 005c 97000000 		call	_ZN14SemDescription6signalEv@plt
  75      E7800000 
  76              	.LVL6:
  56:src/PCB.cpp   ****             i++;
  77              		.loc 1 56 13 is_stmt 1
  78              		.loc 1 56 14 is_stmt 0
  79 0064 9B841400 		addiw	s1,s1,1
  80              	.LVL7:
  81              	.L3:
  54:src/PCB.cpp   ****         while(i < 0) {
  82              		.loc 1 54 9 is_stmt 1
  54:src/PCB.cpp   ****         while(i < 0) {
  83              		.loc 1 54 17
  84 0068 E3C404FE 		bltz	s1,.L5
  85              	.LVL8:
  86              	.L2:
  87              	.LBE23:
  88              	.LBE22:
GAS LISTING /tmp/ccRsKVJK.s 			page 5


  57:src/PCB.cpp   ****         }
  58:src/PCB.cpp   ****     }
  59:src/PCB.cpp   ****     thread_dispatch();
  89              		.loc 1 59 5
  90              		.loc 1 59 20 is_stmt 0
  91 006c 97000000 		call	_Z15thread_dispatchv@plt
  91      E7800000 
  92              	.LVL9:
  60:src/PCB.cpp   ****     //dispatch();
  61:src/PCB.cpp   **** }
  93              		.loc 1 61 1
  94 0074 83308101 		ld	ra,24(sp)
  95              		.cfi_restore 1
  96 0078 03340101 		ld	s0,16(sp)
  97              		.cfi_restore 8
  98              		.cfi_def_cfa 2, 32
  99 007c 83348100 		ld	s1,8(sp)
 100              		.cfi_restore 9
 101 0080 13010102 		addi	sp,sp,32
 102              		.cfi_def_cfa_offset 0
 103 0084 67800000 		jr	ra
 104              		.cfi_endproc
 105              	.LFE65:
 107              		.align	2
 108              		.globl	_ZN3PCB14makeOnlyThreadEPFvPvES0_Pm
 110              	_ZN3PCB14makeOnlyThreadEPFvPvES0_Pm:
 111              	.LFB62:
  20:src/PCB.cpp   ****     return new PCB(body, arg, stack);
 112              		.loc 1 20 63 is_stmt 1
 113              		.cfi_startproc
 114              	.LVL10:
 115 0088 130101FD 		addi	sp,sp,-48
 116              		.cfi_def_cfa_offset 48
 117 008c 23341102 		sd	ra,40(sp)
 118 0090 23308102 		sd	s0,32(sp)
 119 0094 233C9100 		sd	s1,24(sp)
 120 0098 23382101 		sd	s2,16(sp)
 121 009c 23343101 		sd	s3,8(sp)
 122              		.cfi_offset 1, -8
 123              		.cfi_offset 8, -16
 124              		.cfi_offset 9, -24
 125              		.cfi_offset 18, -32
 126              		.cfi_offset 19, -40
 127 00a0 13040103 		addi	s0,sp,48
 128              		.cfi_def_cfa 8, 0
 129 00a4 93090500 		mv	s3,a0
 130 00a8 13890500 		mv	s2,a1
 131 00ac 93040600 		mv	s1,a2
  21:src/PCB.cpp   **** }
 132              		.loc 1 21 5
 133              	.LVL11:
 134              	.LBB26:
 135              	.LBB27:
  30:src/../h/PCB.hpp **** 
 136              		.loc 2 30 38
  30:src/../h/PCB.hpp **** 
 137              		.loc 2 30 71 is_stmt 0
GAS LISTING /tmp/ccRsKVJK.s 			page 6


 138 00b0 13050005 		li	a0,80
 139              	.LVL12:
 140 00b4 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 140      E7800000 
 141              	.LVL13:
 142              	.LBE27:
 143              	.LBE26:
 144              	.LBB28:
 145              	.LBB29:
  48:src/../h/PCB.hpp ****     }
  49:src/../h/PCB.hpp **** 
  50:src/../h/PCB.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  51:src/../h/PCB.hpp **** 
  52:src/../h/PCB.hpp ****     static PCB* running;
  53:src/../h/PCB.hpp **** 
  54:src/../h/PCB.hpp **** 
  55:src/../h/PCB.hpp ****     static PCB* kernel; //nit koja se izvrsava u privilegovanom rezimu
  56:src/../h/PCB.hpp **** 
  57:src/../h/PCB.hpp ****     int start();
  58:src/../h/PCB.hpp **** 
  59:src/../h/PCB.hpp ****     static int exit();
  60:src/../h/PCB.hpp **** 
  61:src/../h/PCB.hpp ****     static int ID;
  62:src/../h/PCB.hpp **** 
  63:src/../h/PCB.hpp ****     int getID() const { return id; }
  64:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  65:src/../h/PCB.hpp **** private:
  66:src/../h/PCB.hpp ****     struct Context{
  67:src/../h/PCB.hpp ****         uint64 ra;
  68:src/../h/PCB.hpp ****         uint64 sp;
  69:src/../h/PCB.hpp ****     };
  70:src/../h/PCB.hpp ****     Body body;
  71:src/../h/PCB.hpp ****     uint64* stack;
  72:src/../h/PCB.hpp ****     void* arg;
  73:src/../h/PCB.hpp ****     Context context;
  74:src/../h/PCB.hpp ****    // bool finished;
  75:src/../h/PCB.hpp ****     ThreadStatus status;
  76:src/../h/PCB.hpp ****     uint64 timeSlice;
  77:src/../h/PCB.hpp ****     int id;
  78:src/../h/PCB.hpp **** 
  79:src/../h/PCB.hpp **** 
  80:src/../h/PCB.hpp **** 
  81:src/../h/PCB.hpp ****     static uint64 constexpr STACK_SIZE = 1024;
  82:src/../h/PCB.hpp ****     static uint64 constexpr TIME_SLICE = 2;
  83:src/../h/PCB.hpp ****     static void dispatch();
  84:src/../h/PCB.hpp ****     static void contextSwitch(Context* oldC, Context* newC);
  85:src/../h/PCB.hpp ****     static void threadWrapper();
  86:src/../h/PCB.hpp **** 
  87:src/../h/PCB.hpp ****     explicit PCB(Body body, void* arg, uint64* stack) : body(body), stack(stack), arg(arg),
  88:src/../h/PCB.hpp ****     context({(uint64)&threadWrapper,(uint64)&stack[DEFAULT_STACK_SIZE]}), status(ThreadStatus::CREA
 146              		.loc 2 88 136
 147 00bc 23000500 		sb	zero,0(a0)
 148 00c0 23340500 		sd	zero,8(a0)
 149 00c4 23383501 		sd	s3,16(a0)
 150 00c8 233C9500 		sd	s1,24(a0)
 151 00cc 23302503 		sd	s2,32(a0)
 152 00d0 17070000 		lla	a4,_ZN3PCB13threadWrapperEv
GAS LISTING /tmp/ccRsKVJK.s 			page 7


 152      13070700 
 153 00d8 2334E502 		sd	a4,40(a0)
 154              		.loc 2 88 45
 155 00dc 37860000 		li	a2,32768
 156 00e0 B384C400 		add	s1,s1,a2
 157              	.LVL14:
 158              		.loc 2 88 136
 159 00e4 23389502 		sd	s1,48(a0)
 160 00e8 13073000 		li	a4,3
 161 00ec 232CE502 		sw	a4,56(a0)
 162 00f0 13072000 		li	a4,2
 163 00f4 2330E504 		sd	a4,64(a0)
 164              		.loc 2 88 134
 165 00f8 97060000 		lla	a3,.LANCHOR0
 165      93860600 
 166 0100 03A78600 		lw	a4,8(a3)
 167 0104 1B061700 		addiw	a2,a4,1
 168 0108 23A4C600 		sw	a2,8(a3)
 169              		.loc 2 88 136
 170 010c 2324E504 		sw	a4,72(a0)
 171              	.LVL15:
 172              	.LBE29:
 173              	.LBE28:
  22:src/PCB.cpp   **** 
 174              		.loc 1 22 1
 175 0110 83308102 		ld	ra,40(sp)
 176              		.cfi_restore 1
 177 0114 03340102 		ld	s0,32(sp)
 178              		.cfi_restore 8
 179              		.cfi_def_cfa 2, 48
 180 0118 83348101 		ld	s1,24(sp)
 181              		.cfi_restore 9
 182 011c 03390101 		ld	s2,16(sp)
 183              		.cfi_restore 18
 184              	.LVL16:
 185 0120 83398100 		ld	s3,8(sp)
 186              		.cfi_restore 19
 187              	.LVL17:
 188 0124 13010103 		addi	sp,sp,48
 189              		.cfi_def_cfa_offset 0
 190 0128 67800000 		jr	ra
 191              		.cfi_endproc
 192              	.LFE62:
 194              		.align	2
 195              		.globl	_ZN3PCB12createThreadEPFvPvES0_Pm
 197              	_ZN3PCB12createThreadEPFvPvES0_Pm:
 198              	.LFB61:
  13:src/PCB.cpp   ****     PCB* thread = makeOnlyThread(body, arg, stack);
 199              		.loc 1 13 66 is_stmt 1
 200              		.cfi_startproc
 201              	.LVL18:
 202 012c 130101FE 		addi	sp,sp,-32
 203              		.cfi_def_cfa_offset 32
 204 0130 233C1100 		sd	ra,24(sp)
 205 0134 23388100 		sd	s0,16(sp)
 206 0138 23349100 		sd	s1,8(sp)
 207              		.cfi_offset 1, -8
GAS LISTING /tmp/ccRsKVJK.s 			page 8


 208              		.cfi_offset 8, -16
 209              		.cfi_offset 9, -24
 210 013c 13040102 		addi	s0,sp,32
 211              		.cfi_def_cfa 8, 0
  14:src/PCB.cpp   ****     thread->status = ThreadStatus::READY;
 212              		.loc 1 14 5
  14:src/PCB.cpp   ****     thread->status = ThreadStatus::READY;
 213              		.loc 1 14 33 is_stmt 0
 214 0140 97000000 		call	_ZN3PCB14makeOnlyThreadEPFvPvES0_Pm
 214      E7800000 
 215              	.LVL19:
 216 0148 93040500 		mv	s1,a0
 217              	.LVL20:
  15:src/PCB.cpp   ****     Scheduler::put(thread);
 218              		.loc 1 15 5 is_stmt 1
  15:src/PCB.cpp   ****     Scheduler::put(thread);
 219              		.loc 1 15 20 is_stmt 0
 220 014c 93071000 		li	a5,1
 221 0150 232CF502 		sw	a5,56(a0)
  16:src/PCB.cpp   ****     return thread;
 222              		.loc 1 16 5 is_stmt 1
  16:src/PCB.cpp   ****     return thread;
 223              		.loc 1 16 19 is_stmt 0
 224 0154 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 224      E7800000 
 225              	.LVL21:
  17:src/PCB.cpp   **** }
 226              		.loc 1 17 5 is_stmt 1
  18:src/PCB.cpp   **** 
 227              		.loc 1 18 1 is_stmt 0
 228 015c 13850400 		mv	a0,s1
 229 0160 83308101 		ld	ra,24(sp)
 230              		.cfi_restore 1
 231 0164 03340101 		ld	s0,16(sp)
 232              		.cfi_restore 8
 233              		.cfi_def_cfa 2, 32
 234 0168 83348100 		ld	s1,8(sp)
 235              		.cfi_restore 9
 236              	.LVL22:
 237 016c 13010102 		addi	sp,sp,32
 238              		.cfi_def_cfa_offset 0
 239 0170 67800000 		jr	ra
 240              		.cfi_endproc
 241              	.LFE61:
 243              		.align	2
 244              		.globl	_ZN3PCB8dispatchEv
 246              	_ZN3PCB8dispatchEv:
 247              	.LFB63:
  28:src/PCB.cpp   ****     PCB* old = running;
 248              		.loc 1 28 22 is_stmt 1
 249              		.cfi_startproc
 250 0174 130101FE 		addi	sp,sp,-32
 251              		.cfi_def_cfa_offset 32
 252 0178 233C1100 		sd	ra,24(sp)
 253 017c 23388100 		sd	s0,16(sp)
 254 0180 23349100 		sd	s1,8(sp)
 255 0184 23302101 		sd	s2,0(sp)
GAS LISTING /tmp/ccRsKVJK.s 			page 9


 256              		.cfi_offset 1, -8
 257              		.cfi_offset 8, -16
 258              		.cfi_offset 9, -24
 259              		.cfi_offset 18, -32
 260 0188 13040102 		addi	s0,sp,32
 261              		.cfi_def_cfa 8, 0
  29:src/PCB.cpp   ****     if(old->status == ThreadStatus::RUNNING) { old->status = ThreadStatus::READY; Scheduler::put(ol
 262              		.loc 1 29 5
  29:src/PCB.cpp   ****     if(old->status == ThreadStatus::RUNNING) { old->status = ThreadStatus::READY; Scheduler::put(ol
 263              		.loc 1 29 10 is_stmt 0
 264 018c 97040000 		ld	s1,.LANCHOR0
 264      83B40400 
 265              	.LVL23:
  30:src/PCB.cpp   ****     running = Scheduler::get();
 266              		.loc 1 30 5 is_stmt 1
  30:src/PCB.cpp   ****     running = Scheduler::get();
 267              		.loc 1 30 13 is_stmt 0
 268 0194 83A78403 		lw	a5,56(s1)
  30:src/PCB.cpp   ****     running = Scheduler::get();
 269              		.loc 1 30 5
 270 0198 63880704 		beqz	a5,.L13
 271              	.L11:
  31:src/PCB.cpp   ****     /*if(running->waiting & !Scheduler::isEmpty()){ //mozda while
 272              		.loc 1 31 5 is_stmt 1
  31:src/PCB.cpp   ****     /*if(running->waiting & !Scheduler::isEmpty()){ //mozda while
 273              		.loc 1 31 29 is_stmt 0
 274 019c 97000000 		call	_ZN9Scheduler3getEv@plt
 274      E7800000 
 275              	.LVL24:
  31:src/PCB.cpp   ****     /*if(running->waiting & !Scheduler::isEmpty()){ //mozda while
 276              		.loc 1 31 13
 277 01a4 17090000 		lla	s2,.LANCHOR0
 277      13090900 
 278 01ac 2330A900 		sd	a0,0(s2)
  35:src/PCB.cpp   ****     Riscv::prevPrivilege();
 279              		.loc 1 35 5 is_stmt 1
  35:src/PCB.cpp   ****     Riscv::prevPrivilege();
 280              		.loc 1 35 21 is_stmt 0
 281 01b0 232C0502 		sw	zero,56(a0)
  36:src/PCB.cpp   ****     PCB::contextSwitch(&old->context, &running->context);
 282              		.loc 1 36 5 is_stmt 1
  36:src/PCB.cpp   ****     PCB::contextSwitch(&old->context, &running->context);
 283              		.loc 1 36 25 is_stmt 0
 284 01b4 97000000 		call	_ZN5Riscv13prevPrivilegeEv@plt
 284      E7800000 
 285              	.LVL25:
  37:src/PCB.cpp   **** }
 286              		.loc 1 37 5 is_stmt 1
  37:src/PCB.cpp   **** }
 287              		.loc 1 37 49 is_stmt 0
 288 01bc 83350900 		ld	a1,0(s2)
  37:src/PCB.cpp   **** }
 289              		.loc 1 37 23
 290 01c0 93858502 		addi	a1,a1,40
 291 01c4 13858402 		addi	a0,s1,40
 292 01c8 97000000 		call	_ZN3PCB13contextSwitchEPNS_7ContextES1_@plt
 292      E7800000 
GAS LISTING /tmp/ccRsKVJK.s 			page 10


 293              	.LVL26:
  38:src/PCB.cpp   **** 
 294              		.loc 1 38 1
 295 01d0 83308101 		ld	ra,24(sp)
 296              		.cfi_remember_state
 297              		.cfi_restore 1
 298 01d4 03340101 		ld	s0,16(sp)
 299              		.cfi_restore 8
 300              		.cfi_def_cfa 2, 32
 301 01d8 83348100 		ld	s1,8(sp)
 302              		.cfi_restore 9
 303              	.LVL27:
 304 01dc 03390100 		ld	s2,0(sp)
 305              		.cfi_restore 18
 306 01e0 13010102 		addi	sp,sp,32
 307              		.cfi_def_cfa_offset 0
 308 01e4 67800000 		jr	ra
 309              	.LVL28:
 310              	.L13:
 311              		.cfi_restore_state
  30:src/PCB.cpp   ****     running = Scheduler::get();
 312              		.loc 1 30 48 is_stmt 1 discriminator 1
  30:src/PCB.cpp   ****     running = Scheduler::get();
 313              		.loc 1 30 60 is_stmt 0 discriminator 1
 314 01e8 93071000 		li	a5,1
 315 01ec 23ACF402 		sw	a5,56(s1)
  30:src/PCB.cpp   ****     running = Scheduler::get();
 316              		.loc 1 30 83 is_stmt 1 discriminator 1
  30:src/PCB.cpp   ****     running = Scheduler::get();
 317              		.loc 1 30 97 is_stmt 0 discriminator 1
 318 01f0 13850400 		mv	a0,s1
 319 01f4 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 319      E7800000 
 320              	.LVL29:
 321 01fc 6FF01FFA 		j	.L11
 322              		.cfi_endproc
 323              	.LFE63:
 325              		.align	2
 326              		.globl	_ZN3PCB17kernelThreadMakerEv
 328              	_ZN3PCB17kernelThreadMakerEv:
 329              	.LFB64:
  40:src/PCB.cpp   ****     if(!kernel){
 330              		.loc 1 40 31 is_stmt 1
 331              		.cfi_startproc
  41:src/PCB.cpp   ****         PCB* kernelThread = new PCB(); //default konstruktor potreban
 332              		.loc 1 41 5
 333              	.LBB30:
  41:src/PCB.cpp   ****         PCB* kernelThread = new PCB(); //default konstruktor potreban
 334              		.loc 1 41 8 is_stmt 0
 335 0200 97070000 		ld	a5,.LANCHOR0+16
 335      83B70700 
  41:src/PCB.cpp   ****         PCB* kernelThread = new PCB(); //default konstruktor potreban
 336              		.loc 1 41 5
 337 0208 63880700 		beqz	a5,.L20
 338              	.LBE30:
  45:src/PCB.cpp   **** }
 339              		.loc 1 45 5 is_stmt 1
GAS LISTING /tmp/ccRsKVJK.s 			page 11


  46:src/PCB.cpp   **** 
 340              		.loc 1 46 1 is_stmt 0
 341 020c 17050000 		ld	a0,.LANCHOR0+16
 341      03350500 
 342 0214 67800000 		ret
 343              	.L20:
  40:src/PCB.cpp   ****     if(!kernel){
 344              		.loc 1 40 31
 345 0218 130101FF 		addi	sp,sp,-16
 346              		.cfi_def_cfa_offset 16
 347 021c 23341100 		sd	ra,8(sp)
 348 0220 23308100 		sd	s0,0(sp)
 349              		.cfi_offset 1, -8
 350              		.cfi_offset 8, -16
 351 0224 13040101 		addi	s0,sp,16
 352              		.cfi_def_cfa 8, 0
 353              	.LBB36:
 354              	.LBB31:
  42:src/PCB.cpp   ****         PCB::kernel = PCB::running = kernelThread;
 355              		.loc 1 42 9 is_stmt 1
 356              	.LVL30:
 357              	.LBB32:
 358              	.LBB33:
  30:src/../h/PCB.hpp **** 
 359              		.loc 2 30 38
  30:src/../h/PCB.hpp **** 
 360              		.loc 2 30 71 is_stmt 0
 361 0228 13050005 		li	a0,80
 362 022c 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 362      E7800000 
 363              	.LVL31:
 364              	.LBE33:
 365              	.LBE32:
 366              	.LBB34:
 367              	.LBB35:
  89:src/../h/PCB.hpp ****     {
  90:src/../h/PCB.hpp ****       //  if(body != nullptr) Scheduler::put(this);
  91:src/../h/PCB.hpp ****     }
  92:src/../h/PCB.hpp ****     PCB() : context({0, 0}) {
 368              		.loc 2 92 27
 369 0234 23000500 		sb	zero,0(a0)
 370 0238 23340500 		sd	zero,8(a0)
 371 023c 23340502 		sd	zero,40(a0)
 372 0240 23380502 		sd	zero,48(a0)
  93:src/../h/PCB.hpp ****         body = nullptr; arg = nullptr; stack = nullptr;
 373              		.loc 2 93 9 is_stmt 1
 374              		.loc 2 93 14 is_stmt 0
 375 0244 23380500 		sd	zero,16(a0)
 376              		.loc 2 93 25 is_stmt 1
 377              		.loc 2 93 29 is_stmt 0
 378 0248 23300502 		sd	zero,32(a0)
 379              		.loc 2 93 40 is_stmt 1
 380              		.loc 2 93 46 is_stmt 0
 381 024c 233C0500 		sd	zero,24(a0)
  94:src/../h/PCB.hpp ****         timeSlice = DEFAULT_TIME_SLICE; status = ThreadStatus::RUNNING;
 382              		.loc 2 94 9 is_stmt 1
 383              		.loc 2 94 19 is_stmt 0
GAS LISTING /tmp/ccRsKVJK.s 			page 12


 384 0250 93072000 		li	a5,2
 385 0254 2330F504 		sd	a5,64(a0)
 386              		.loc 2 94 41 is_stmt 1
 387              		.loc 2 94 48 is_stmt 0
 388 0258 232C0502 		sw	zero,56(a0)
 389              	.LVL32:
 390              	.LBE35:
 391              	.LBE34:
  43:src/PCB.cpp   ****     }
 392              		.loc 1 43 9 is_stmt 1
  43:src/PCB.cpp   ****     }
 393              		.loc 1 43 36 is_stmt 0
 394 025c 97070000 		lla	a5,.LANCHOR0
 394      93870700 
 395 0264 23B0A700 		sd	a0,0(a5)
  43:src/PCB.cpp   ****     }
 396              		.loc 1 43 21
 397 0268 23B8A700 		sd	a0,16(a5)
 398              	.LBE31:
 399              	.LBE36:
  45:src/PCB.cpp   **** }
 400              		.loc 1 45 5 is_stmt 1
  46:src/PCB.cpp   **** 
 401              		.loc 1 46 1 is_stmt 0
 402 026c 17050000 		ld	a0,.LANCHOR0+16
 402      03350500 
 403              	.LVL33:
 404 0274 83308100 		ld	ra,8(sp)
 405              		.cfi_restore 1
 406 0278 03340100 		ld	s0,0(sp)
 407              		.cfi_restore 8
 408              		.cfi_def_cfa 2, 16
 409 027c 13010101 		addi	sp,sp,16
 410              		.cfi_def_cfa_offset 0
 411 0280 67800000 		jr	ra
 412              		.cfi_endproc
 413              	.LFE64:
 415              		.align	2
 416              		.globl	_ZN3PCB5startEv
 418              	_ZN3PCB5startEv:
 419              	.LFB66:
  62:src/PCB.cpp   **** 
  63:src/PCB.cpp   **** int PCB::start() { //kreiranu nit stavlja u scheduler
 420              		.loc 1 63 18 is_stmt 1
 421              		.cfi_startproc
 422              	.LVL34:
  64:src/PCB.cpp   ****     if(status == ThreadStatus::CREATED){
 423              		.loc 1 64 5
 424              		.loc 1 64 8 is_stmt 0
 425 0284 03278503 		lw	a4,56(a0)
 426              		.loc 1 64 5
 427 0288 93073000 		li	a5,3
 428 028c 631CF702 		bne	a4,a5,.L23
  63:src/PCB.cpp   ****     if(status == ThreadStatus::CREATED){
 429              		.loc 1 63 18
 430 0290 130101FF 		addi	sp,sp,-16
 431              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccRsKVJK.s 			page 13


 432 0294 23341100 		sd	ra,8(sp)
 433 0298 23308100 		sd	s0,0(sp)
 434              		.cfi_offset 1, -8
 435              		.cfi_offset 8, -16
 436 029c 13040101 		addi	s0,sp,16
 437              		.cfi_def_cfa 8, 0
  65:src/PCB.cpp   ****         status = ThreadStatus::READY;
 438              		.loc 1 65 9 is_stmt 1
 439              		.loc 1 65 16 is_stmt 0
 440 02a0 93071000 		li	a5,1
 441 02a4 232CF502 		sw	a5,56(a0)
  66:src/PCB.cpp   ****         Scheduler::put(this);
 442              		.loc 1 66 9 is_stmt 1
 443              		.loc 1 66 23 is_stmt 0
 444 02a8 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 444      E7800000 
 445              	.LVL35:
  67:src/PCB.cpp   ****         return 0;
 446              		.loc 1 67 9 is_stmt 1
 447              		.loc 1 67 16 is_stmt 0
 448 02b0 13050000 		li	a0,0
  68:src/PCB.cpp   ****     }else return -1;
  69:src/PCB.cpp   **** }
 449              		.loc 1 69 1
 450 02b4 83308100 		ld	ra,8(sp)
 451              		.cfi_restore 1
 452 02b8 03340100 		ld	s0,0(sp)
 453              		.cfi_restore 8
 454              		.cfi_def_cfa 2, 16
 455 02bc 13010101 		addi	sp,sp,16
 456              		.cfi_def_cfa_offset 0
 457 02c0 67800000 		jr	ra
 458              	.LVL36:
 459              	.L23:
  68:src/PCB.cpp   ****     }else return -1;
 460              		.loc 1 68 19
 461 02c4 1305F0FF 		li	a0,-1
 462              	.LVL37:
 463              		.loc 1 69 1
 464 02c8 67800000 		ret
 465              		.cfi_endproc
 466              	.LFE66:
 468              		.align	2
 469              		.globl	_ZN3PCB4exitEv
 471              	_ZN3PCB4exitEv:
 472              	.LFB67:
  70:src/PCB.cpp   **** 
  71:src/PCB.cpp   **** int PCB::exit() { //zavrsava nit
 473              		.loc 1 71 17 is_stmt 1
 474              		.cfi_startproc
  72:src/PCB.cpp   ****     if(running->status == ThreadStatus::RUNNING){
 475              		.loc 1 72 5
 476              		.loc 1 72 17 is_stmt 0
 477 02cc 97070000 		ld	a5,.LANCHOR0
 477      83B70700 
 478 02d4 03A78703 		lw	a4,56(a5)
 479              		.loc 1 72 5
GAS LISTING /tmp/ccRsKVJK.s 			page 14


 480 02d8 631C0702 		bnez	a4,.L30
  71:src/PCB.cpp   ****     if(running->status == ThreadStatus::RUNNING){
 481              		.loc 1 71 17
 482 02dc 130101FF 		addi	sp,sp,-16
 483              		.cfi_def_cfa_offset 16
 484 02e0 23341100 		sd	ra,8(sp)
 485 02e4 23308100 		sd	s0,0(sp)
 486              		.cfi_offset 1, -8
 487              		.cfi_offset 8, -16
 488 02e8 13040101 		addi	s0,sp,16
 489              		.cfi_def_cfa 8, 0
  73:src/PCB.cpp   ****         running->status = ThreadStatus::FINISHED;
 490              		.loc 1 73 9 is_stmt 1
 491              		.loc 1 73 25 is_stmt 0
 492 02ec 13072000 		li	a4,2
 493 02f0 23ACE702 		sw	a4,56(a5)
  74:src/PCB.cpp   ****         dispatch();
 494              		.loc 1 74 9 is_stmt 1
 495              		.loc 1 74 17 is_stmt 0
 496 02f4 97000000 		call	_ZN3PCB8dispatchEv
 496      E7800000 
 497              	.LVL38:
  75:src/PCB.cpp   ****         return 0;
 498              		.loc 1 75 9 is_stmt 1
 499              		.loc 1 75 16 is_stmt 0
 500 02fc 13050000 		li	a0,0
  76:src/PCB.cpp   ****     }else return -1;
  77:src/PCB.cpp   **** }
 501              		.loc 1 77 1
 502 0300 83308100 		ld	ra,8(sp)
 503              		.cfi_restore 1
 504 0304 03340100 		ld	s0,0(sp)
 505              		.cfi_restore 8
 506              		.cfi_def_cfa 2, 16
 507 0308 13010101 		addi	sp,sp,16
 508              		.cfi_def_cfa_offset 0
 509 030c 67800000 		jr	ra
 510              	.L30:
  76:src/PCB.cpp   ****     }else return -1;
 511              		.loc 1 76 19
 512 0310 1305F0FF 		li	a0,-1
 513              		.loc 1 77 1
 514 0314 67800000 		ret
 515              		.cfi_endproc
 516              	.LFE67:
 518              		.globl	_ZN3PCB2IDE
 519              		.globl	_ZN3PCB6kernelE
 520              		.globl	_ZN3PCB16timeSliceCounterE
 521              		.globl	_ZN3PCB7runningE
 522              		.bss
 523              		.align	3
 524              		.set	.LANCHOR0,. + 0
 527              	_ZN3PCB7runningE:
 528 0000 00000000 		.zero	8
 528      00000000 
 531              	_ZN3PCB2IDE:
 532 0008 00000000 		.zero	4
GAS LISTING /tmp/ccRsKVJK.s 			page 15


 533 000c 00000000 		.zero	4
 536              	_ZN3PCB6kernelE:
 537 0010 00000000 		.zero	8
 537      00000000 
 540              	_ZN3PCB16timeSliceCounterE:
 541 0018 00000000 		.zero	8
 541      00000000 
 542              		.text
 543              	.Letext0:
 544              		.file 4 "src/../h/../lib/hw.h"
 545              		.file 5 "src/../h/MemoryAllocator.hpp"
 546              		.file 6 "src/../h/Scheduler.hpp"
 547              		.file 7 "src/../h/syscall_c.h"
 548              		.file 8 "src/../h/Queue.hpp"
 549              		.file 9 "src/../h/Riscv.hpp"
GAS LISTING /tmp/ccRsKVJK.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 PCB.cpp
     /tmp/ccRsKVJK.s:9      .text:0000000000000000 _ZN3PCB13threadWrapperEv
     /tmp/ccRsKVJK.s:13     .text:0000000000000000 .L0 
     /tmp/ccRsKVJK.s:14     .text:0000000000000000 .L0 
     /tmp/ccRsKVJK.s:15     .text:0000000000000004 .L0 
     /tmp/ccRsKVJK.s:19     .text:0000000000000010 .L0 
     /tmp/ccRsKVJK.s:20     .text:0000000000000010 .L0 
     /tmp/ccRsKVJK.s:21     .text:0000000000000010 .L0 
     /tmp/ccRsKVJK.s:23     .text:0000000000000014 .L0 
     /tmp/ccRsKVJK.s:25     .text:0000000000000014 .L0 
     /tmp/ccRsKVJK.s:26     .text:0000000000000014 .L0 
     /tmp/ccRsKVJK.s:29     .text:000000000000001c .L0 
     /tmp/ccRsKVJK.s:30     .text:000000000000001c .L0 
     /tmp/ccRsKVJK.s:34     .text:000000000000002c .L0 
     /tmp/ccRsKVJK.s:38     .text:0000000000000034 .L0 
     /tmp/ccRsKVJK.s:39     .text:0000000000000034 .L0 
     /tmp/ccRsKVJK.s:45     .text:0000000000000038 .L0 
     /tmp/ccRsKVJK.s:46     .text:0000000000000038 .L0 
     /tmp/ccRsKVJK.s:53     .text:0000000000000040 .L0 
     /tmp/ccRsKVJK.s:54     .text:0000000000000040 .L0 
     /tmp/ccRsKVJK.s:56     .text:0000000000000044 .L0 
     /tmp/ccRsKVJK.s:63     .text:0000000000000048 .L0 
     /tmp/ccRsKVJK.s:64     .text:0000000000000048 .L0 
     /tmp/ccRsKVJK.s:65     .text:0000000000000048 .L0 
     /tmp/ccRsKVJK.s:72     .text:0000000000000050 .L0 
     /tmp/ccRsKVJK.s:73     .text:0000000000000050 .L0 
     /tmp/ccRsKVJK.s:78     .text:0000000000000064 .L0 
     /tmp/ccRsKVJK.s:79     .text:0000000000000064 .L0 
     /tmp/ccRsKVJK.s:83     .text:0000000000000068 .L0 
     /tmp/ccRsKVJK.s:84     .text:0000000000000068 .L0 
     /tmp/ccRsKVJK.s:90     .text:000000000000006c .L0 
     /tmp/ccRsKVJK.s:91     .text:000000000000006c .L0 
     /tmp/ccRsKVJK.s:94     .text:0000000000000074 .L0 
     /tmp/ccRsKVJK.s:95     .text:0000000000000078 .L0 
     /tmp/ccRsKVJK.s:97     .text:000000000000007c .L0 
     /tmp/ccRsKVJK.s:98     .text:000000000000007c .L0 
     /tmp/ccRsKVJK.s:100    .text:0000000000000080 .L0 
     /tmp/ccRsKVJK.s:102    .text:0000000000000084 .L0 
     /tmp/ccRsKVJK.s:104    .text:0000000000000088 .L0 
     /tmp/ccRsKVJK.s:110    .text:0000000000000088 _ZN3PCB14makeOnlyThreadEPFvPvES0_Pm
     /tmp/ccRsKVJK.s:113    .text:0000000000000088 .L0 
     /tmp/ccRsKVJK.s:115    .text:0000000000000088 .L0 
     /tmp/ccRsKVJK.s:116    .text:000000000000008c .L0 
     /tmp/ccRsKVJK.s:122    .text:00000000000000a0 .L0 
     /tmp/ccRsKVJK.s:123    .text:00000000000000a0 .L0 
     /tmp/ccRsKVJK.s:124    .text:00000000000000a0 .L0 
     /tmp/ccRsKVJK.s:125    .text:00000000000000a0 .L0 
     /tmp/ccRsKVJK.s:126    .text:00000000000000a0 .L0 
     /tmp/ccRsKVJK.s:128    .text:00000000000000a4 .L0 
     /tmp/ccRsKVJK.s:136    .text:00000000000000b0 .L0 
     /tmp/ccRsKVJK.s:137    .text:00000000000000b0 .L0 
     /tmp/ccRsKVJK.s:138    .text:00000000000000b0 .L0 
     /tmp/ccRsKVJK.s:147    .text:00000000000000bc .L0 
     /tmp/ccRsKVJK.s:155    .text:00000000000000dc .L0 
     /tmp/ccRsKVJK.s:159    .text:00000000000000e4 .L0 
     /tmp/ccRsKVJK.s:165    .text:00000000000000f8 .L0 
GAS LISTING /tmp/ccRsKVJK.s 			page 17


     /tmp/ccRsKVJK.s:170    .text:000000000000010c .L0 
     /tmp/ccRsKVJK.s:175    .text:0000000000000110 .L0 
     /tmp/ccRsKVJK.s:176    .text:0000000000000114 .L0 
     /tmp/ccRsKVJK.s:178    .text:0000000000000118 .L0 
     /tmp/ccRsKVJK.s:179    .text:0000000000000118 .L0 
     /tmp/ccRsKVJK.s:181    .text:000000000000011c .L0 
     /tmp/ccRsKVJK.s:183    .text:0000000000000120 .L0 
     /tmp/ccRsKVJK.s:186    .text:0000000000000124 .L0 
     /tmp/ccRsKVJK.s:189    .text:0000000000000128 .L0 
     /tmp/ccRsKVJK.s:191    .text:000000000000012c .L0 
     /tmp/ccRsKVJK.s:197    .text:000000000000012c _ZN3PCB12createThreadEPFvPvES0_Pm
     /tmp/ccRsKVJK.s:200    .text:000000000000012c .L0 
     /tmp/ccRsKVJK.s:202    .text:000000000000012c .L0 
     /tmp/ccRsKVJK.s:203    .text:0000000000000130 .L0 
     /tmp/ccRsKVJK.s:207    .text:000000000000013c .L0 
     /tmp/ccRsKVJK.s:208    .text:000000000000013c .L0 
     /tmp/ccRsKVJK.s:209    .text:000000000000013c .L0 
     /tmp/ccRsKVJK.s:211    .text:0000000000000140 .L0 
     /tmp/ccRsKVJK.s:213    .text:0000000000000140 .L0 
     /tmp/ccRsKVJK.s:214    .text:0000000000000140 .L0 
     /tmp/ccRsKVJK.s:219    .text:000000000000014c .L0 
     /tmp/ccRsKVJK.s:220    .text:000000000000014c .L0 
     /tmp/ccRsKVJK.s:223    .text:0000000000000154 .L0 
     /tmp/ccRsKVJK.s:224    .text:0000000000000154 .L0 
     /tmp/ccRsKVJK.s:227    .text:000000000000015c .L0 
     /tmp/ccRsKVJK.s:228    .text:000000000000015c .L0 
     /tmp/ccRsKVJK.s:230    .text:0000000000000164 .L0 
     /tmp/ccRsKVJK.s:232    .text:0000000000000168 .L0 
     /tmp/ccRsKVJK.s:233    .text:0000000000000168 .L0 
     /tmp/ccRsKVJK.s:235    .text:000000000000016c .L0 
     /tmp/ccRsKVJK.s:238    .text:0000000000000170 .L0 
     /tmp/ccRsKVJK.s:240    .text:0000000000000174 .L0 
     /tmp/ccRsKVJK.s:246    .text:0000000000000174 _ZN3PCB8dispatchEv
     /tmp/ccRsKVJK.s:249    .text:0000000000000174 .L0 
     /tmp/ccRsKVJK.s:250    .text:0000000000000174 .L0 
     /tmp/ccRsKVJK.s:251    .text:0000000000000178 .L0 
     /tmp/ccRsKVJK.s:256    .text:0000000000000188 .L0 
     /tmp/ccRsKVJK.s:257    .text:0000000000000188 .L0 
     /tmp/ccRsKVJK.s:258    .text:0000000000000188 .L0 
     /tmp/ccRsKVJK.s:259    .text:0000000000000188 .L0 
     /tmp/ccRsKVJK.s:261    .text:000000000000018c .L0 
     /tmp/ccRsKVJK.s:263    .text:000000000000018c .L0 
     /tmp/ccRsKVJK.s:264    .text:000000000000018c .L0 
     /tmp/ccRsKVJK.s:267    .text:0000000000000194 .L0 
     /tmp/ccRsKVJK.s:268    .text:0000000000000194 .L0 
     /tmp/ccRsKVJK.s:270    .text:0000000000000198 .L0 
     /tmp/ccRsKVJK.s:273    .text:000000000000019c .L0 
     /tmp/ccRsKVJK.s:274    .text:000000000000019c .L0 
     /tmp/ccRsKVJK.s:277    .text:00000000000001a4 .L0 
     /tmp/ccRsKVJK.s:280    .text:00000000000001b0 .L0 
     /tmp/ccRsKVJK.s:281    .text:00000000000001b0 .L0 
     /tmp/ccRsKVJK.s:283    .text:00000000000001b4 .L0 
     /tmp/ccRsKVJK.s:284    .text:00000000000001b4 .L0 
     /tmp/ccRsKVJK.s:287    .text:00000000000001bc .L0 
     /tmp/ccRsKVJK.s:288    .text:00000000000001bc .L0 
     /tmp/ccRsKVJK.s:290    .text:00000000000001c0 .L0 
     /tmp/ccRsKVJK.s:295    .text:00000000000001d0 .L0 
GAS LISTING /tmp/ccRsKVJK.s 			page 18


     /tmp/ccRsKVJK.s:296    .text:00000000000001d4 .L0 
     /tmp/ccRsKVJK.s:297    .text:00000000000001d4 .L0 
     /tmp/ccRsKVJK.s:299    .text:00000000000001d8 .L0 
     /tmp/ccRsKVJK.s:300    .text:00000000000001d8 .L0 
     /tmp/ccRsKVJK.s:302    .text:00000000000001dc .L0 
     /tmp/ccRsKVJK.s:305    .text:00000000000001e0 .L0 
     /tmp/ccRsKVJK.s:307    .text:00000000000001e4 .L0 
     /tmp/ccRsKVJK.s:311    .text:00000000000001e8 .L0 
     /tmp/ccRsKVJK.s:313    .text:00000000000001e8 .L0 
     /tmp/ccRsKVJK.s:314    .text:00000000000001e8 .L0 
     /tmp/ccRsKVJK.s:317    .text:00000000000001f0 .L0 
     /tmp/ccRsKVJK.s:318    .text:00000000000001f0 .L0 
     /tmp/ccRsKVJK.s:322    .text:0000000000000200 .L0 
     /tmp/ccRsKVJK.s:328    .text:0000000000000200 _ZN3PCB17kernelThreadMakerEv
     /tmp/ccRsKVJK.s:331    .text:0000000000000200 .L0 
     /tmp/ccRsKVJK.s:332    .text:0000000000000200 .L0 
     /tmp/ccRsKVJK.s:334    .text:0000000000000200 .L0 
     /tmp/ccRsKVJK.s:335    .text:0000000000000200 .L0 
     /tmp/ccRsKVJK.s:337    .text:0000000000000208 .L0 
     /tmp/ccRsKVJK.s:340    .text:000000000000020c .L0 
     /tmp/ccRsKVJK.s:341    .text:000000000000020c .L0 
     /tmp/ccRsKVJK.s:345    .text:0000000000000218 .L0 
     /tmp/ccRsKVJK.s:346    .text:000000000000021c .L0 
     /tmp/ccRsKVJK.s:349    .text:0000000000000224 .L0 
     /tmp/ccRsKVJK.s:350    .text:0000000000000224 .L0 
     /tmp/ccRsKVJK.s:352    .text:0000000000000228 .L0 
     /tmp/ccRsKVJK.s:359    .text:0000000000000228 .L0 
     /tmp/ccRsKVJK.s:360    .text:0000000000000228 .L0 
     /tmp/ccRsKVJK.s:361    .text:0000000000000228 .L0 
     /tmp/ccRsKVJK.s:369    .text:0000000000000234 .L0 
     /tmp/ccRsKVJK.s:374    .text:0000000000000244 .L0 
     /tmp/ccRsKVJK.s:375    .text:0000000000000244 .L0 
     /tmp/ccRsKVJK.s:377    .text:0000000000000248 .L0 
     /tmp/ccRsKVJK.s:378    .text:0000000000000248 .L0 
     /tmp/ccRsKVJK.s:380    .text:000000000000024c .L0 
     /tmp/ccRsKVJK.s:381    .text:000000000000024c .L0 
     /tmp/ccRsKVJK.s:383    .text:0000000000000250 .L0 
     /tmp/ccRsKVJK.s:384    .text:0000000000000250 .L0 
     /tmp/ccRsKVJK.s:387    .text:0000000000000258 .L0 
     /tmp/ccRsKVJK.s:388    .text:0000000000000258 .L0 
     /tmp/ccRsKVJK.s:393    .text:000000000000025c .L0 
     /tmp/ccRsKVJK.s:394    .text:000000000000025c .L0 
     /tmp/ccRsKVJK.s:397    .text:0000000000000268 .L0 
     /tmp/ccRsKVJK.s:401    .text:000000000000026c .L0 
     /tmp/ccRsKVJK.s:402    .text:000000000000026c .L0 
     /tmp/ccRsKVJK.s:405    .text:0000000000000278 .L0 
     /tmp/ccRsKVJK.s:407    .text:000000000000027c .L0 
     /tmp/ccRsKVJK.s:408    .text:000000000000027c .L0 
     /tmp/ccRsKVJK.s:410    .text:0000000000000280 .L0 
     /tmp/ccRsKVJK.s:412    .text:0000000000000284 .L0 
     /tmp/ccRsKVJK.s:418    .text:0000000000000284 _ZN3PCB5startEv
     /tmp/ccRsKVJK.s:421    .text:0000000000000284 .L0 
     /tmp/ccRsKVJK.s:423    .text:0000000000000284 .L0 
     /tmp/ccRsKVJK.s:424    .text:0000000000000284 .L0 
     /tmp/ccRsKVJK.s:425    .text:0000000000000284 .L0 
     /tmp/ccRsKVJK.s:427    .text:0000000000000288 .L0 
     /tmp/ccRsKVJK.s:430    .text:0000000000000290 .L0 
GAS LISTING /tmp/ccRsKVJK.s 			page 19


     /tmp/ccRsKVJK.s:431    .text:0000000000000294 .L0 
     /tmp/ccRsKVJK.s:434    .text:000000000000029c .L0 
     /tmp/ccRsKVJK.s:435    .text:000000000000029c .L0 
     /tmp/ccRsKVJK.s:437    .text:00000000000002a0 .L0 
     /tmp/ccRsKVJK.s:439    .text:00000000000002a0 .L0 
     /tmp/ccRsKVJK.s:440    .text:00000000000002a0 .L0 
     /tmp/ccRsKVJK.s:443    .text:00000000000002a8 .L0 
     /tmp/ccRsKVJK.s:444    .text:00000000000002a8 .L0 
     /tmp/ccRsKVJK.s:447    .text:00000000000002b0 .L0 
     /tmp/ccRsKVJK.s:448    .text:00000000000002b0 .L0 
     /tmp/ccRsKVJK.s:450    .text:00000000000002b4 .L0 
     /tmp/ccRsKVJK.s:451    .text:00000000000002b8 .L0 
     /tmp/ccRsKVJK.s:453    .text:00000000000002bc .L0 
     /tmp/ccRsKVJK.s:454    .text:00000000000002bc .L0 
     /tmp/ccRsKVJK.s:456    .text:00000000000002c0 .L0 
     /tmp/ccRsKVJK.s:461    .text:00000000000002c4 .L0 
     /tmp/ccRsKVJK.s:464    .text:00000000000002c8 .L0 
     /tmp/ccRsKVJK.s:465    .text:00000000000002cc .L0 
     /tmp/ccRsKVJK.s:471    .text:00000000000002cc _ZN3PCB4exitEv
     /tmp/ccRsKVJK.s:474    .text:00000000000002cc .L0 
     /tmp/ccRsKVJK.s:475    .text:00000000000002cc .L0 
     /tmp/ccRsKVJK.s:476    .text:00000000000002cc .L0 
     /tmp/ccRsKVJK.s:477    .text:00000000000002cc .L0 
     /tmp/ccRsKVJK.s:480    .text:00000000000002d8 .L0 
     /tmp/ccRsKVJK.s:482    .text:00000000000002dc .L0 
     /tmp/ccRsKVJK.s:483    .text:00000000000002e0 .L0 
     /tmp/ccRsKVJK.s:486    .text:00000000000002e8 .L0 
     /tmp/ccRsKVJK.s:487    .text:00000000000002e8 .L0 
     /tmp/ccRsKVJK.s:489    .text:00000000000002ec .L0 
     /tmp/ccRsKVJK.s:491    .text:00000000000002ec .L0 
     /tmp/ccRsKVJK.s:492    .text:00000000000002ec .L0 
     /tmp/ccRsKVJK.s:495    .text:00000000000002f4 .L0 
     /tmp/ccRsKVJK.s:496    .text:00000000000002f4 .L0 
     /tmp/ccRsKVJK.s:499    .text:00000000000002fc .L0 
     /tmp/ccRsKVJK.s:500    .text:00000000000002fc .L0 
     /tmp/ccRsKVJK.s:502    .text:0000000000000300 .L0 
     /tmp/ccRsKVJK.s:503    .text:0000000000000304 .L0 
     /tmp/ccRsKVJK.s:505    .text:0000000000000308 .L0 
     /tmp/ccRsKVJK.s:506    .text:0000000000000308 .L0 
     /tmp/ccRsKVJK.s:508    .text:000000000000030c .L0 
     /tmp/ccRsKVJK.s:512    .text:0000000000000310 .L0 
     /tmp/ccRsKVJK.s:514    .text:0000000000000314 .L0 
     /tmp/ccRsKVJK.s:515    .text:0000000000000318 .L0 
     /tmp/ccRsKVJK.s:531    .bss:0000000000000008 _ZN3PCB2IDE
     /tmp/ccRsKVJK.s:536    .bss:0000000000000010 _ZN3PCB6kernelE
     /tmp/ccRsKVJK.s:540    .bss:0000000000000018 _ZN3PCB16timeSliceCounterE
     /tmp/ccRsKVJK.s:527    .bss:0000000000000000 _ZN3PCB7runningE
     /tmp/ccRsKVJK.s:524    .bss:0000000000000000 .LANCHOR0
     /tmp/ccRsKVJK.s:550    .text:0000000000000318 .L0 
     /tmp/ccRsKVJK.s:30     .text:000000000000001c .L0 
     /tmp/ccRsKVJK.s:73     .text:0000000000000050 .L0 
     /tmp/ccRsKVJK.s:152    .text:00000000000000d0 .L0 
     /tmp/ccRsKVJK.s:165    .text:00000000000000f8 .L0 
     /tmp/ccRsKVJK.s:264    .text:000000000000018c .L0 
     /tmp/ccRsKVJK.s:277    .text:00000000000001a4 .L0 
     /tmp/ccRsKVJK.s:335    .text:0000000000000200 .L0 
     /tmp/ccRsKVJK.s:341    .text:000000000000020c .L0 
GAS LISTING /tmp/ccRsKVJK.s 			page 20


     /tmp/ccRsKVJK.s:394    .text:000000000000025c .L0 
     /tmp/ccRsKVJK.s:402    .text:000000000000026c .L0 
     /tmp/ccRsKVJK.s:477    .text:00000000000002cc .L0 
     /tmp/ccRsKVJK.s:86     .text:000000000000006c .L2
     /tmp/ccRsKVJK.s:81     .text:0000000000000068 .L3
     /tmp/ccRsKVJK.s:68     .text:0000000000000050 .L5
     /tmp/ccRsKVJK.s:310    .text:00000000000001e8 .L13
     /tmp/ccRsKVJK.s:271    .text:000000000000019c .L11
     /tmp/ccRsKVJK.s:343    .text:0000000000000218 .L20
     /tmp/ccRsKVJK.s:459    .text:00000000000002c4 .L23
     /tmp/ccRsKVJK.s:510    .text:0000000000000310 .L30
     /tmp/ccRsKVJK.s:2279   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccRsKVJK.s:4194   .debug_str:00000000000008e3 .LASF174
     /tmp/ccRsKVJK.s:4216   .debug_str:0000000000000a3f .LASF175
     /tmp/ccRsKVJK.s:4012   .debug_str:000000000000037f .LASF176
     /tmp/ccRsKVJK.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccRsKVJK.s:543    .text:0000000000000318 .Letext0
     /tmp/ccRsKVJK.s:3896   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccRsKVJK.s:4036   .debug_str:0000000000000452 .LASF0
     /tmp/ccRsKVJK.s:4060   .debug_str:00000000000004ff .LASF1
     /tmp/ccRsKVJK.s:4126   .debug_str:00000000000006f1 .LASF2
     /tmp/ccRsKVJK.s:4138   .debug_str:0000000000000756 .LASF4
     /tmp/ccRsKVJK.s:4046   .debug_str:0000000000000493 .LASF3
     /tmp/ccRsKVJK.s:3906   .debug_str:0000000000000035 .LASF5
     /tmp/ccRsKVJK.s:4098   .debug_str:0000000000000625 .LASF6
     /tmp/ccRsKVJK.s:4050   .debug_str:00000000000004ca .LASF7
     /tmp/ccRsKVJK.s:4008   .debug_str:0000000000000357 .LASF8
     /tmp/ccRsKVJK.s:4016   .debug_str:00000000000003af .LASF9
     /tmp/ccRsKVJK.s:3950   .debug_str:00000000000001a7 .LASF10
     /tmp/ccRsKVJK.s:3998   .debug_str:000000000000031a .LASF11
     /tmp/ccRsKVJK.s:3964   .debug_str:0000000000000201 .LASF12
     /tmp/ccRsKVJK.s:3948   .debug_str:0000000000000197 .LASF13
     /tmp/ccRsKVJK.s:4180   .debug_str:000000000000086d .LASF14
     /tmp/ccRsKVJK.s:3990   .debug_str:00000000000002e1 .LASF15
     /tmp/ccRsKVJK.s:4170   .debug_str:000000000000082f .LASF16
     /tmp/ccRsKVJK.s:4114   .debug_str:00000000000006ae .LASF37
     /tmp/ccRsKVJK.s:4058   .debug_str:00000000000004fa .LASF17
     /tmp/ccRsKVJK.s:3952   .debug_str:00000000000001b6 .LASF18
     /tmp/ccRsKVJK.s:3922   .debug_str:00000000000000d0 .LASF19
     /tmp/ccRsKVJK.s:4094   .debug_str:0000000000000607 .LASF27
     /tmp/ccRsKVJK.s:4146   .debug_str:0000000000000786 .LASF20
     /tmp/ccRsKVJK.s:3970   .debug_str:000000000000021e .LASF22
     /tmp/ccRsKVJK.s:4250   .debug_str:0000000000000b34 .LASF21
     /tmp/ccRsKVJK.s:4190   .debug_str:00000000000008ab .LASF23
     /tmp/ccRsKVJK.s:4116   .debug_str:00000000000006b7 .LASF24
     /tmp/ccRsKVJK.s:4186   .debug_str:0000000000000889 .LASF25
     /tmp/ccRsKVJK.s:4076   .debug_str:0000000000000587 .LASF40
     /tmp/ccRsKVJK.s:3910   .debug_str:0000000000000047 .LASF42
     /tmp/ccRsKVJK.s:4184   .debug_str:0000000000000880 .LASF30
     /tmp/ccRsKVJK.s:4078   .debug_str:0000000000000591 .LASF54
     /tmp/ccRsKVJK.s:4066   .debug_str:0000000000000527 .LASF26
     /tmp/ccRsKVJK.s:4006   .debug_str:000000000000034d .LASF28
     /tmp/ccRsKVJK.s:3962   .debug_str:00000000000001f6 .LASF29
     /tmp/ccRsKVJK.s:4258   .debug_str:0000000000000b68 .LASF177
     /tmp/ccRsKVJK.s:3912   .debug_str:0000000000000068 .LASF178
     /tmp/ccRsKVJK.s:3984   .debug_str:00000000000002ae .LASF31
     /tmp/ccRsKVJK.s:3946   .debug_str:000000000000017f .LASF49
GAS LISTING /tmp/ccRsKVJK.s 			page 21


     /tmp/ccRsKVJK.s:4236   .debug_str:0000000000000ac3 .LASF179
     /tmp/ccRsKVJK.s:4158   .debug_str:00000000000007f1 .LASF180
     /tmp/ccRsKVJK.s:4162   .debug_str:000000000000080e .LASF32
     /tmp/ccRsKVJK.s:3942   .debug_str:0000000000000170 .LASF33
     /tmp/ccRsKVJK.s:3936   .debug_str:0000000000000148 .LASF34
     /tmp/ccRsKVJK.s:4104   .debug_str:0000000000000668 .LASF35
     /tmp/ccRsKVJK.s:4156   .debug_str:00000000000007e5 .LASF36
     /tmp/ccRsKVJK.s:3958   .debug_str:00000000000001d8 .LASF38
     /tmp/ccRsKVJK.s:4022   .debug_str:00000000000003ea .LASF39
     /tmp/ccRsKVJK.s:4234   .debug_str:0000000000000abe .LASF41
     /tmp/ccRsKVJK.s:4262   .debug_str:0000000000000b83 .LASF43
     /tmp/ccRsKVJK.s:4178   .debug_str:0000000000000860 .LASF44
     /tmp/ccRsKVJK.s:4228   .debug_str:0000000000000a80 .LASF45
     /tmp/ccRsKVJK.s:4092   .debug_str:0000000000000602 .LASF181
     /tmp/ccRsKVJK.s:4120   .debug_str:00000000000006ce .LASF46
     /tmp/ccRsKVJK.s:4248   .debug_str:0000000000000b10 .LASF47
     /tmp/ccRsKVJK.s:4230   .debug_str:0000000000000aa2 .LASF48
     /tmp/ccRsKVJK.s:4196   .debug_str:00000000000009a7 .LASF50
     /tmp/ccRsKVJK.s:4266   .debug_str:0000000000000ba7 .LASF51
     /tmp/ccRsKVJK.s:3992   .debug_str:00000000000002f7 .LASF52
     /tmp/ccRsKVJK.s:3902   .debug_str:000000000000001d .LASF53
     /tmp/ccRsKVJK.s:4044   .debug_str:0000000000000486 .LASF55
     /tmp/ccRsKVJK.s:4020   .debug_str:00000000000003df .LASF58
     /tmp/ccRsKVJK.s:4238   .debug_str:0000000000000acd .LASF60
     /tmp/ccRsKVJK.s:3954   .debug_str:00000000000001bb .LASF56
     /tmp/ccRsKVJK.s:4048   .debug_str:00000000000004a5 .LASF57
     /tmp/ccRsKVJK.s:4062   .debug_str:0000000000000512 .LASF59
     /tmp/ccRsKVJK.s:4070   .debug_str:0000000000000547 .LASF61
     /tmp/ccRsKVJK.s:4192   .debug_str:00000000000008db .LASF62
     /tmp/ccRsKVJK.s:4260   .debug_str:0000000000000b7c .LASF63
     /tmp/ccRsKVJK.s:4256   .debug_str:0000000000000b62 .LASF64
     /tmp/ccRsKVJK.s:4198   .debug_str:00000000000009c4 .LASF65
     /tmp/ccRsKVJK.s:4168   .debug_str:000000000000082a .LASF66
     /tmp/ccRsKVJK.s:4130   .debug_str:0000000000000717 .LASF67
     /tmp/ccRsKVJK.s:4212   .debug_str:0000000000000a1d .LASF68
     /tmp/ccRsKVJK.s:4086   .debug_str:00000000000005d4 .LASF69
     /tmp/ccRsKVJK.s:4150   .debug_str:00000000000007a4 .LASF70
     /tmp/ccRsKVJK.s:3900   .debug_str:0000000000000018 .LASF71
     /tmp/ccRsKVJK.s:4166   .debug_str:0000000000000824 .LASF72
     /tmp/ccRsKVJK.s:4208   .debug_str:0000000000000a00 .LASF73
     /tmp/ccRsKVJK.s:4224   .debug_str:0000000000000a6f .LASF74
     /tmp/ccRsKVJK.s:4202   .debug_str:00000000000009e8 .LASF75
     /tmp/ccRsKVJK.s:4134   .debug_str:0000000000000738 .LASF76
     /tmp/ccRsKVJK.s:4004   .debug_str:0000000000000342 .LASF77
     /tmp/ccRsKVJK.s:3978   .debug_str:0000000000000285 .LASF80
     /tmp/ccRsKVJK.s:3916   .debug_str:0000000000000099 .LASF82
     /tmp/ccRsKVJK.s:3972   .debug_str:000000000000024a .LASF78
     /tmp/ccRsKVJK.s:3928   .debug_str:00000000000000f4 .LASF79
     /tmp/ccRsKVJK.s:3938   .debug_str:0000000000000151 .LASF81
     /tmp/ccRsKVJK.s:3924   .debug_str:00000000000000d5 .LASF83
     /tmp/ccRsKVJK.s:4148   .debug_str:000000000000078e .LASF115
     /tmp/ccRsKVJK.s:3934   .debug_str:000000000000013c .LASF182
     /tmp/ccRsKVJK.s:4252   .debug_str:0000000000000b3f .LASF84
     /tmp/ccRsKVJK.s:4172   .debug_str:0000000000000845 .LASF85
     /tmp/ccRsKVJK.s:4160   .debug_str:00000000000007fe .LASF86
     /tmp/ccRsKVJK.s:3898   .debug_str:0000000000000000 .LASF87
     /tmp/ccRsKVJK.s:3918   .debug_str:00000000000000ac .LASF88
GAS LISTING /tmp/ccRsKVJK.s 			page 22


     /tmp/ccRsKVJK.s:3914   .debug_str:0000000000000080 .LASF89
     /tmp/ccRsKVJK.s:4088   .debug_str:00000000000005e5 .LASF90
     /tmp/ccRsKVJK.s:3944   .debug_str:0000000000000176 .LASF91
     /tmp/ccRsKVJK.s:4102   .debug_str:000000000000064c .LASF92
     /tmp/ccRsKVJK.s:4028   .debug_str:000000000000041c .LASF93
     /tmp/ccRsKVJK.s:4254   .debug_str:0000000000000b45 .LASF94
     /tmp/ccRsKVJK.s:3980   .debug_str:000000000000028e .LASF95
     /tmp/ccRsKVJK.s:3976   .debug_str:000000000000026a .LASF96
     /tmp/ccRsKVJK.s:4182   .debug_str:0000000000000879 .LASF97
     /tmp/ccRsKVJK.s:3988   .debug_str:00000000000002c4 .LASF98
     /tmp/ccRsKVJK.s:3968   .debug_str:0000000000000218 .LASF99
     /tmp/ccRsKVJK.s:4152   .debug_str:00000000000007b5 .LASF100
     /tmp/ccRsKVJK.s:4034   .debug_str:000000000000044c .LASF101
     /tmp/ccRsKVJK.s:4214   .debug_str:0000000000000a23 .LASF102
     /tmp/ccRsKVJK.s:3904   .debug_str:000000000000002d .LASF103
     /tmp/ccRsKVJK.s:4018   .debug_str:00000000000003bd .LASF104
     /tmp/ccRsKVJK.s:4206   .debug_str:00000000000009fa .LASF105
     /tmp/ccRsKVJK.s:4220   .debug_str:0000000000000a54 .LASF107
     /tmp/ccRsKVJK.s:4056   .debug_str:00000000000004f5 .LASF106
     /tmp/ccRsKVJK.s:3982   .debug_str:0000000000000293 .LASF108
     /tmp/ccRsKVJK.s:4136   .debug_str:0000000000000743 .LASF109
     /tmp/ccRsKVJK.s:4100   .debug_str:0000000000000638 .LASF183
     /tmp/ccRsKVJK.s:4174   .debug_str:0000000000000854 .LASF110
     /tmp/ccRsKVJK.s:4084   .debug_str:00000000000005cf .LASF111
     /tmp/ccRsKVJK.s:4204   .debug_str:00000000000009f2 .LASF112
     /tmp/ccRsKVJK.s:3986   .debug_str:00000000000002b6 .LASF113
     /tmp/ccRsKVJK.s:4014   .debug_str:000000000000039d .LASF114
     /tmp/ccRsKVJK.s:4154   .debug_str:00000000000007d1 .LASF116
     /tmp/ccRsKVJK.s:4140   .debug_str:000000000000075d .LASF117
     /tmp/ccRsKVJK.s:3926   .debug_str:00000000000000ee .LASF118
     /tmp/ccRsKVJK.s:4054   .debug_str:00000000000004f0 .LASF119
     /tmp/ccRsKVJK.s:4072   .debug_str:0000000000000560 .LASF121
     /tmp/ccRsKVJK.s:4024   .debug_str:00000000000003f2 .LASF120
     /tmp/ccRsKVJK.s:4032   .debug_str:0000000000000434 .LASF122
     /tmp/ccRsKVJK.s:4132   .debug_str:0000000000000726 .LASF123
     /tmp/ccRsKVJK.s:4026   .debug_str:00000000000003fd .LASF124
     /tmp/ccRsKVJK.s:4096   .debug_str:0000000000000617 .LASF125
     /tmp/ccRsKVJK.s:4068   .debug_str:000000000000052c .LASF126
     /tmp/ccRsKVJK.s:4118   .debug_str:00000000000006c3 .LASF127
     /tmp/ccRsKVJK.s:4010   .debug_str:0000000000000367 .LASF128
     /tmp/ccRsKVJK.s:4218   .debug_str:0000000000000a4b .LASF129
     /tmp/ccRsKVJK.s:4210   .debug_str:0000000000000a08 .LASF130
     /tmp/ccRsKVJK.s:4122   .debug_str:00000000000006dd .LASF131
     /tmp/ccRsKVJK.s:4090   .debug_str:00000000000005ed .LASF132
     /tmp/ccRsKVJK.s:4106   .debug_str:0000000000000670 .LASF133
     /tmp/ccRsKVJK.s:4108   .debug_str:0000000000000677 .LASF134
     /tmp/ccRsKVJK.s:3966   .debug_str:0000000000000211 .LASF135
     /tmp/ccRsKVJK.s:4052   .debug_str:00000000000004dd .LASF136
     /tmp/ccRsKVJK.s:4244   .debug_str:0000000000000b01 .LASF137
     /tmp/ccRsKVJK.s:4200   .debug_str:00000000000009d4 .LASF138
     /tmp/ccRsKVJK.s:4082   .debug_str:00000000000005c7 .LASF139
     /tmp/ccRsKVJK.s:4000   .debug_str:0000000000000329 .LASF140
     /tmp/ccRsKVJK.s:4064   .debug_str:000000000000051f .LASF141
     /tmp/ccRsKVJK.s:4110   .debug_str:000000000000068a .LASF142
     /tmp/ccRsKVJK.s:4268   .debug_str:0000000000000bb4 .LASF143
     /tmp/ccRsKVJK.s:4042   .debug_str:0000000000000472 .LASF144
     /tmp/ccRsKVJK.s:4176   .debug_str:0000000000000859 .LASF145
GAS LISTING /tmp/ccRsKVJK.s 			page 23


     /tmp/ccRsKVJK.s:4144   .debug_str:0000000000000773 .LASF146
     /tmp/ccRsKVJK.s:4246   .debug_str:0000000000000b09 .LASF147
     /tmp/ccRsKVJK.s:3956   .debug_str:00000000000001c5 .LASF148
     /tmp/ccRsKVJK.s:4142   .debug_str:000000000000076d .LASF149
     /tmp/ccRsKVJK.s:4030   .debug_str:0000000000000422 .LASF150
     /tmp/ccRsKVJK.s:4040   .debug_str:000000000000046c .LASF151
     /tmp/ccRsKVJK.s:3974   .debug_str:0000000000000258 .LASF152
     /tmp/ccRsKVJK.s:3908   .debug_str:000000000000003c .LASF153
     /tmp/ccRsKVJK.s:4128   .debug_str:00000000000006ff .LASF154
     /tmp/ccRsKVJK.s:4124   .debug_str:00000000000006e6 .LASF155
     /tmp/ccRsKVJK.s:4264   .debug_str:0000000000000b8f .LASF156
     /tmp/ccRsKVJK.s:4232   .debug_str:0000000000000ab4 .LASF157
     /tmp/ccRsKVJK.s:3960   .debug_str:00000000000001e0 .LASF158
     /tmp/ccRsKVJK.s:4226   .debug_str:0000000000000a76 .LASF159
     /tmp/ccRsKVJK.s:4074   .debug_str:0000000000000571 .LASF160
     /tmp/ccRsKVJK.s:4164   .debug_str:0000000000000816 .LASF161
     /tmp/ccRsKVJK.s:4188   .debug_str:000000000000088f .LASF162
     /tmp/ccRsKVJK.s:3930   .debug_str:000000000000011c .LASF163
     /tmp/ccRsKVJK.s:3940   .debug_str:000000000000015f .LASF164
     /tmp/ccRsKVJK.s:4240   .debug_str:0000000000000ae4 .LASF165
     /tmp/ccRsKVJK.s:3932   .debug_str:0000000000000121 .LASF166
     /tmp/ccRsKVJK.s:3996   .debug_str:000000000000030a .LASF167
     /tmp/ccRsKVJK.s:4242   .debug_str:0000000000000af5 .LASF168
     /tmp/ccRsKVJK.s:472    .text:00000000000002cc .LFB67
     /tmp/ccRsKVJK.s:516    .text:0000000000000318 .LFE67
     /tmp/ccRsKVJK.s:497    .text:00000000000002fc .LVL38
     /tmp/ccRsKVJK.s:419    .text:0000000000000284 .LFB66
     /tmp/ccRsKVJK.s:466    .text:00000000000002cc .LFE66
     /tmp/ccRsKVJK.s:4002   .debug_str:000000000000033d .LASF171
     /tmp/ccRsKVJK.s:3647   .debug_loc:0000000000000000 .LLST20
     /tmp/ccRsKVJK.s:445    .text:00000000000002b0 .LVL35
     /tmp/ccRsKVJK.s:10     .text:0000000000000000 .LFB65
     /tmp/ccRsKVJK.s:105    .text:0000000000000088 .LFE65
     /tmp/ccRsKVJK.s:57     .text:0000000000000048 .LBB23
     /tmp/ccRsKVJK.s:87     .text:000000000000006c .LBE23
     /tmp/ccRsKVJK.s:3672   .debug_loc:0000000000000062 .LLST2
     /tmp/ccRsKVJK.s:60     .text:0000000000000048 .LBB24
     /tmp/ccRsKVJK.s:70     .text:0000000000000050 .LBE24
     /tmp/ccRsKVJK.s:3679   .debug_loc:0000000000000085 .LLST3
     /tmp/ccRsKVJK.s:76     .text:0000000000000064 .LVL6
     /tmp/ccRsKVJK.s:41     .text:0000000000000038 .LBB20
     /tmp/ccRsKVJK.s:50     .text:0000000000000040 .LBE20
     /tmp/ccRsKVJK.s:3686   .debug_loc:00000000000000a8 .LLST0
     /tmp/ccRsKVJK.s:3694   .debug_loc:00000000000000cc .LLST1
     /tmp/ccRsKVJK.s:27     .text:000000000000001c .LVL0
     /tmp/ccRsKVJK.s:92     .text:0000000000000074 .LVL9
     /tmp/ccRsKVJK.s:329    .text:0000000000000200 .LFB64
     /tmp/ccRsKVJK.s:413    .text:0000000000000284 .LFE64
     /tmp/ccRsKVJK.s:354    .text:0000000000000228 .LBB31
     /tmp/ccRsKVJK.s:398    .text:000000000000026c .LBE31
     /tmp/ccRsKVJK.s:4038   .debug_str:000000000000045f .LASF169
     /tmp/ccRsKVJK.s:3701   .debug_loc:00000000000000ef .LLST17
     /tmp/ccRsKVJK.s:357    .text:0000000000000228 .LBB32
     /tmp/ccRsKVJK.s:365    .text:0000000000000234 .LBE32
     /tmp/ccRsKVJK.s:3713   .debug_loc:000000000000012d .LLST18
     /tmp/ccRsKVJK.s:363    .text:0000000000000234 .LVL31
     /tmp/ccRsKVJK.s:366    .text:0000000000000234 .LBB34
GAS LISTING /tmp/ccRsKVJK.s 			page 24


     /tmp/ccRsKVJK.s:391    .text:000000000000025c .LBE34
     /tmp/ccRsKVJK.s:3722   .debug_loc:0000000000000152 .LLST19
     /tmp/ccRsKVJK.s:247    .text:0000000000000174 .LFB63
     /tmp/ccRsKVJK.s:323    .text:0000000000000200 .LFE63
     /tmp/ccRsKVJK.s:3729   .debug_loc:0000000000000175 .LLST16
     /tmp/ccRsKVJK.s:275    .text:00000000000001a4 .LVL24
     /tmp/ccRsKVJK.s:285    .text:00000000000001bc .LVL25
     /tmp/ccRsKVJK.s:293    .text:00000000000001d0 .LVL26
     /tmp/ccRsKVJK.s:320    .text:00000000000001fc .LVL29
     /tmp/ccRsKVJK.s:111    .text:0000000000000088 .LFB62
     /tmp/ccRsKVJK.s:192    .text:000000000000012c .LFE62
     /tmp/ccRsKVJK.s:3740   .debug_loc:00000000000001ab .LLST4
     /tmp/ccRsKVJK.s:3756   .debug_loc:00000000000001f5 .LLST5
     /tmp/ccRsKVJK.s:3772   .debug_loc:000000000000023f .LLST6
     /tmp/ccRsKVJK.s:134    .text:00000000000000b0 .LBB26
     /tmp/ccRsKVJK.s:143    .text:00000000000000bc .LBE26
     /tmp/ccRsKVJK.s:3788   .debug_loc:0000000000000289 .LLST7
     /tmp/ccRsKVJK.s:141    .text:00000000000000bc .LVL13
     /tmp/ccRsKVJK.s:144    .text:00000000000000bc .LBB28
     /tmp/ccRsKVJK.s:173    .text:0000000000000110 .LBE28
     /tmp/ccRsKVJK.s:3797   .debug_loc:00000000000002ae .LLST8
     /tmp/ccRsKVJK.s:3809   .debug_loc:00000000000002e5 .LLST9
     /tmp/ccRsKVJK.s:3816   .debug_loc:0000000000000308 .LLST10
     /tmp/ccRsKVJK.s:3823   .debug_loc:000000000000032b .LLST11
     /tmp/ccRsKVJK.s:198    .text:000000000000012c .LFB61
     /tmp/ccRsKVJK.s:241    .text:0000000000000174 .LFE61
     /tmp/ccRsKVJK.s:3830   .debug_loc:000000000000034e .LLST12
     /tmp/ccRsKVJK.s:3844   .debug_loc:0000000000000387 .LLST13
     /tmp/ccRsKVJK.s:3858   .debug_loc:00000000000003c0 .LLST14
     /tmp/ccRsKVJK.s:3994   .debug_str:0000000000000303 .LASF170
     /tmp/ccRsKVJK.s:3872   .debug_loc:00000000000003f9 .LLST15
     /tmp/ccRsKVJK.s:215    .text:0000000000000148 .LVL19
     /tmp/ccRsKVJK.s:225    .text:000000000000015c .LVL21
     /tmp/ccRsKVJK.s:3920   .debug_str:00000000000000c4 .LASF172
     /tmp/ccRsKVJK.s:4222   .debug_str:0000000000000a59 .LASF173
     /tmp/ccRsKVJK.s:4080   .debug_str:00000000000005b2 .LASF184
     /tmp/ccRsKVJK.s:4112   .debug_str:000000000000069e .LASF185
     /tmp/ccRsKVJK.s:422    .text:0000000000000284 .LVL34
     /tmp/ccRsKVJK.s:458    .text:00000000000002c4 .LVL36
     /tmp/ccRsKVJK.s:462    .text:00000000000002c8 .LVL37
     /tmp/ccRsKVJK.s:66     .text:000000000000004c .LVL5
     /tmp/ccRsKVJK.s:85     .text:000000000000006c .LVL8
     /tmp/ccRsKVJK.s:59     .text:0000000000000048 .LVL4
     /tmp/ccRsKVJK.s:40     .text:0000000000000038 .LVL2
     /tmp/ccRsKVJK.s:48     .text:0000000000000040 .LVL3
     /tmp/ccRsKVJK.s:389    .text:000000000000025c .LVL32
     /tmp/ccRsKVJK.s:403    .text:0000000000000274 .LVL33
     /tmp/ccRsKVJK.s:356    .text:0000000000000228 .LVL30
     /tmp/ccRsKVJK.s:265    .text:0000000000000194 .LVL23
     /tmp/ccRsKVJK.s:303    .text:00000000000001dc .LVL27
     /tmp/ccRsKVJK.s:309    .text:00000000000001e8 .LVL28
     /tmp/ccRsKVJK.s:114    .text:0000000000000088 .LVL10
     /tmp/ccRsKVJK.s:139    .text:00000000000000b4 .LVL12
     /tmp/ccRsKVJK.s:187    .text:0000000000000124 .LVL17
     /tmp/ccRsKVJK.s:184    .text:0000000000000120 .LVL16
     /tmp/ccRsKVJK.s:157    .text:00000000000000e4 .LVL14
     /tmp/ccRsKVJK.s:133    .text:00000000000000b0 .LVL11
GAS LISTING /tmp/ccRsKVJK.s 			page 25


     /tmp/ccRsKVJK.s:171    .text:0000000000000110 .LVL15
     /tmp/ccRsKVJK.s:201    .text:000000000000012c .LVL18
     /tmp/ccRsKVJK.s:217    .text:000000000000014c .LVL20
     /tmp/ccRsKVJK.s:236    .text:000000000000016c .LVL22
     /tmp/ccRsKVJK.s:551    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_ZN14SemDescription6signalEv
_Z15thread_dispatchv
_ZN15MemoryAllocator9mem_allocEm
_ZN9Scheduler3putEP3PCB
_ZN9Scheduler3getEv
_ZN5Riscv13prevPrivilegeEv
_ZN3PCB13contextSwitchEPNS_7ContextES1_
